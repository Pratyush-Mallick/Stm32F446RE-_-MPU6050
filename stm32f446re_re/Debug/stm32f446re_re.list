
stm32f446re_re.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000652c  080001d0  080001d0  000101d0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000358  08006700  08006700  00016700  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08006a58  08006a58  000201ec  2**0
                  CONTENTS
  4 .ARM          00000000  08006a58  08006a58  000201ec  2**0
                  CONTENTS
  5 .preinit_array 00000000  08006a58  08006a58  000201ec  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08006a58  08006a58  00016a58  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08006a5c  08006a5c  00016a5c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000001ec  20000000  08006a60  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000110  200001ec  08006c4c  000201ec  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  200002fc  08006c4c  000202fc  2**0
                  ALLOC
 11 .ARM.attributes 0000002a  00000000  00000000  000201ec  2**0
                  CONTENTS, READONLY
 12 .debug_info   00002ba5  00000000  00000000  00020216  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 0000080a  00000000  00000000  00022dbb  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 00000270  00000000  00000000  000235c8  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 00000228  00000000  00000000  00023838  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  000035f6  00000000  00000000  00023a60  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   00001ce3  00000000  00000000  00027056  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    0000d9a7  00000000  00000000  00028d39  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  000366e0  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00001ff8  00000000  00000000  0003675c  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001d0 <__do_global_dtors_aux>:
 80001d0:	b510      	push	{r4, lr}
 80001d2:	4c05      	ldr	r4, [pc, #20]	; (80001e8 <__do_global_dtors_aux+0x18>)
 80001d4:	7823      	ldrb	r3, [r4, #0]
 80001d6:	b933      	cbnz	r3, 80001e6 <__do_global_dtors_aux+0x16>
 80001d8:	4b04      	ldr	r3, [pc, #16]	; (80001ec <__do_global_dtors_aux+0x1c>)
 80001da:	b113      	cbz	r3, 80001e2 <__do_global_dtors_aux+0x12>
 80001dc:	4804      	ldr	r0, [pc, #16]	; (80001f0 <__do_global_dtors_aux+0x20>)
 80001de:	f3af 8000 	nop.w
 80001e2:	2301      	movs	r3, #1
 80001e4:	7023      	strb	r3, [r4, #0]
 80001e6:	bd10      	pop	{r4, pc}
 80001e8:	200001ec 	.word	0x200001ec
 80001ec:	00000000 	.word	0x00000000
 80001f0:	080066e4 	.word	0x080066e4

080001f4 <frame_dummy>:
 80001f4:	b508      	push	{r3, lr}
 80001f6:	4b03      	ldr	r3, [pc, #12]	; (8000204 <frame_dummy+0x10>)
 80001f8:	b11b      	cbz	r3, 8000202 <frame_dummy+0xe>
 80001fa:	4903      	ldr	r1, [pc, #12]	; (8000208 <frame_dummy+0x14>)
 80001fc:	4803      	ldr	r0, [pc, #12]	; (800020c <frame_dummy+0x18>)
 80001fe:	f3af 8000 	nop.w
 8000202:	bd08      	pop	{r3, pc}
 8000204:	00000000 	.word	0x00000000
 8000208:	200001f0 	.word	0x200001f0
 800020c:	080066e4 	.word	0x080066e4

08000210 <strlen>:
 8000210:	4603      	mov	r3, r0
 8000212:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000216:	2a00      	cmp	r2, #0
 8000218:	d1fb      	bne.n	8000212 <strlen+0x2>
 800021a:	1a18      	subs	r0, r3, r0
 800021c:	3801      	subs	r0, #1
 800021e:	4770      	bx	lr

08000220 <memchr>:
 8000220:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000224:	2a10      	cmp	r2, #16
 8000226:	db2b      	blt.n	8000280 <memchr+0x60>
 8000228:	f010 0f07 	tst.w	r0, #7
 800022c:	d008      	beq.n	8000240 <memchr+0x20>
 800022e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000232:	3a01      	subs	r2, #1
 8000234:	428b      	cmp	r3, r1
 8000236:	d02d      	beq.n	8000294 <memchr+0x74>
 8000238:	f010 0f07 	tst.w	r0, #7
 800023c:	b342      	cbz	r2, 8000290 <memchr+0x70>
 800023e:	d1f6      	bne.n	800022e <memchr+0xe>
 8000240:	b4f0      	push	{r4, r5, r6, r7}
 8000242:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000246:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800024a:	f022 0407 	bic.w	r4, r2, #7
 800024e:	f07f 0700 	mvns.w	r7, #0
 8000252:	2300      	movs	r3, #0
 8000254:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000258:	3c08      	subs	r4, #8
 800025a:	ea85 0501 	eor.w	r5, r5, r1
 800025e:	ea86 0601 	eor.w	r6, r6, r1
 8000262:	fa85 f547 	uadd8	r5, r5, r7
 8000266:	faa3 f587 	sel	r5, r3, r7
 800026a:	fa86 f647 	uadd8	r6, r6, r7
 800026e:	faa5 f687 	sel	r6, r5, r7
 8000272:	b98e      	cbnz	r6, 8000298 <memchr+0x78>
 8000274:	d1ee      	bne.n	8000254 <memchr+0x34>
 8000276:	bcf0      	pop	{r4, r5, r6, r7}
 8000278:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800027c:	f002 0207 	and.w	r2, r2, #7
 8000280:	b132      	cbz	r2, 8000290 <memchr+0x70>
 8000282:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000286:	3a01      	subs	r2, #1
 8000288:	ea83 0301 	eor.w	r3, r3, r1
 800028c:	b113      	cbz	r3, 8000294 <memchr+0x74>
 800028e:	d1f8      	bne.n	8000282 <memchr+0x62>
 8000290:	2000      	movs	r0, #0
 8000292:	4770      	bx	lr
 8000294:	3801      	subs	r0, #1
 8000296:	4770      	bx	lr
 8000298:	2d00      	cmp	r5, #0
 800029a:	bf06      	itte	eq
 800029c:	4635      	moveq	r5, r6
 800029e:	3803      	subeq	r0, #3
 80002a0:	3807      	subne	r0, #7
 80002a2:	f015 0f01 	tst.w	r5, #1
 80002a6:	d107      	bne.n	80002b8 <memchr+0x98>
 80002a8:	3001      	adds	r0, #1
 80002aa:	f415 7f80 	tst.w	r5, #256	; 0x100
 80002ae:	bf02      	ittt	eq
 80002b0:	3001      	addeq	r0, #1
 80002b2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 80002b6:	3001      	addeq	r0, #1
 80002b8:	bcf0      	pop	{r4, r5, r6, r7}
 80002ba:	3801      	subs	r0, #1
 80002bc:	4770      	bx	lr
 80002be:	bf00      	nop

080002c0 <__aeabi_drsub>:
 80002c0:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 80002c4:	e002      	b.n	80002cc <__adddf3>
 80002c6:	bf00      	nop

080002c8 <__aeabi_dsub>:
 80002c8:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

080002cc <__adddf3>:
 80002cc:	b530      	push	{r4, r5, lr}
 80002ce:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002d2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002d6:	ea94 0f05 	teq	r4, r5
 80002da:	bf08      	it	eq
 80002dc:	ea90 0f02 	teqeq	r0, r2
 80002e0:	bf1f      	itttt	ne
 80002e2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002e6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002ea:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002ee:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002f2:	f000 80e2 	beq.w	80004ba <__adddf3+0x1ee>
 80002f6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002fa:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002fe:	bfb8      	it	lt
 8000300:	426d      	neglt	r5, r5
 8000302:	dd0c      	ble.n	800031e <__adddf3+0x52>
 8000304:	442c      	add	r4, r5
 8000306:	ea80 0202 	eor.w	r2, r0, r2
 800030a:	ea81 0303 	eor.w	r3, r1, r3
 800030e:	ea82 0000 	eor.w	r0, r2, r0
 8000312:	ea83 0101 	eor.w	r1, r3, r1
 8000316:	ea80 0202 	eor.w	r2, r0, r2
 800031a:	ea81 0303 	eor.w	r3, r1, r3
 800031e:	2d36      	cmp	r5, #54	; 0x36
 8000320:	bf88      	it	hi
 8000322:	bd30      	pophi	{r4, r5, pc}
 8000324:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000328:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800032c:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000330:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000334:	d002      	beq.n	800033c <__adddf3+0x70>
 8000336:	4240      	negs	r0, r0
 8000338:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800033c:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000340:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000344:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000348:	d002      	beq.n	8000350 <__adddf3+0x84>
 800034a:	4252      	negs	r2, r2
 800034c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000350:	ea94 0f05 	teq	r4, r5
 8000354:	f000 80a7 	beq.w	80004a6 <__adddf3+0x1da>
 8000358:	f1a4 0401 	sub.w	r4, r4, #1
 800035c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000360:	db0d      	blt.n	800037e <__adddf3+0xb2>
 8000362:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000366:	fa22 f205 	lsr.w	r2, r2, r5
 800036a:	1880      	adds	r0, r0, r2
 800036c:	f141 0100 	adc.w	r1, r1, #0
 8000370:	fa03 f20e 	lsl.w	r2, r3, lr
 8000374:	1880      	adds	r0, r0, r2
 8000376:	fa43 f305 	asr.w	r3, r3, r5
 800037a:	4159      	adcs	r1, r3
 800037c:	e00e      	b.n	800039c <__adddf3+0xd0>
 800037e:	f1a5 0520 	sub.w	r5, r5, #32
 8000382:	f10e 0e20 	add.w	lr, lr, #32
 8000386:	2a01      	cmp	r2, #1
 8000388:	fa03 fc0e 	lsl.w	ip, r3, lr
 800038c:	bf28      	it	cs
 800038e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000392:	fa43 f305 	asr.w	r3, r3, r5
 8000396:	18c0      	adds	r0, r0, r3
 8000398:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800039c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80003a0:	d507      	bpl.n	80003b2 <__adddf3+0xe6>
 80003a2:	f04f 0e00 	mov.w	lr, #0
 80003a6:	f1dc 0c00 	rsbs	ip, ip, #0
 80003aa:	eb7e 0000 	sbcs.w	r0, lr, r0
 80003ae:	eb6e 0101 	sbc.w	r1, lr, r1
 80003b2:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 80003b6:	d31b      	bcc.n	80003f0 <__adddf3+0x124>
 80003b8:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 80003bc:	d30c      	bcc.n	80003d8 <__adddf3+0x10c>
 80003be:	0849      	lsrs	r1, r1, #1
 80003c0:	ea5f 0030 	movs.w	r0, r0, rrx
 80003c4:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80003c8:	f104 0401 	add.w	r4, r4, #1
 80003cc:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003d0:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 80003d4:	f080 809a 	bcs.w	800050c <__adddf3+0x240>
 80003d8:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80003dc:	bf08      	it	eq
 80003de:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003e2:	f150 0000 	adcs.w	r0, r0, #0
 80003e6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003ea:	ea41 0105 	orr.w	r1, r1, r5
 80003ee:	bd30      	pop	{r4, r5, pc}
 80003f0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003f4:	4140      	adcs	r0, r0
 80003f6:	eb41 0101 	adc.w	r1, r1, r1
 80003fa:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80003fe:	f1a4 0401 	sub.w	r4, r4, #1
 8000402:	d1e9      	bne.n	80003d8 <__adddf3+0x10c>
 8000404:	f091 0f00 	teq	r1, #0
 8000408:	bf04      	itt	eq
 800040a:	4601      	moveq	r1, r0
 800040c:	2000      	moveq	r0, #0
 800040e:	fab1 f381 	clz	r3, r1
 8000412:	bf08      	it	eq
 8000414:	3320      	addeq	r3, #32
 8000416:	f1a3 030b 	sub.w	r3, r3, #11
 800041a:	f1b3 0220 	subs.w	r2, r3, #32
 800041e:	da0c      	bge.n	800043a <__adddf3+0x16e>
 8000420:	320c      	adds	r2, #12
 8000422:	dd08      	ble.n	8000436 <__adddf3+0x16a>
 8000424:	f102 0c14 	add.w	ip, r2, #20
 8000428:	f1c2 020c 	rsb	r2, r2, #12
 800042c:	fa01 f00c 	lsl.w	r0, r1, ip
 8000430:	fa21 f102 	lsr.w	r1, r1, r2
 8000434:	e00c      	b.n	8000450 <__adddf3+0x184>
 8000436:	f102 0214 	add.w	r2, r2, #20
 800043a:	bfd8      	it	le
 800043c:	f1c2 0c20 	rsble	ip, r2, #32
 8000440:	fa01 f102 	lsl.w	r1, r1, r2
 8000444:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000448:	bfdc      	itt	le
 800044a:	ea41 010c 	orrle.w	r1, r1, ip
 800044e:	4090      	lslle	r0, r2
 8000450:	1ae4      	subs	r4, r4, r3
 8000452:	bfa2      	ittt	ge
 8000454:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000458:	4329      	orrge	r1, r5
 800045a:	bd30      	popge	{r4, r5, pc}
 800045c:	ea6f 0404 	mvn.w	r4, r4
 8000460:	3c1f      	subs	r4, #31
 8000462:	da1c      	bge.n	800049e <__adddf3+0x1d2>
 8000464:	340c      	adds	r4, #12
 8000466:	dc0e      	bgt.n	8000486 <__adddf3+0x1ba>
 8000468:	f104 0414 	add.w	r4, r4, #20
 800046c:	f1c4 0220 	rsb	r2, r4, #32
 8000470:	fa20 f004 	lsr.w	r0, r0, r4
 8000474:	fa01 f302 	lsl.w	r3, r1, r2
 8000478:	ea40 0003 	orr.w	r0, r0, r3
 800047c:	fa21 f304 	lsr.w	r3, r1, r4
 8000480:	ea45 0103 	orr.w	r1, r5, r3
 8000484:	bd30      	pop	{r4, r5, pc}
 8000486:	f1c4 040c 	rsb	r4, r4, #12
 800048a:	f1c4 0220 	rsb	r2, r4, #32
 800048e:	fa20 f002 	lsr.w	r0, r0, r2
 8000492:	fa01 f304 	lsl.w	r3, r1, r4
 8000496:	ea40 0003 	orr.w	r0, r0, r3
 800049a:	4629      	mov	r1, r5
 800049c:	bd30      	pop	{r4, r5, pc}
 800049e:	fa21 f004 	lsr.w	r0, r1, r4
 80004a2:	4629      	mov	r1, r5
 80004a4:	bd30      	pop	{r4, r5, pc}
 80004a6:	f094 0f00 	teq	r4, #0
 80004aa:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 80004ae:	bf06      	itte	eq
 80004b0:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 80004b4:	3401      	addeq	r4, #1
 80004b6:	3d01      	subne	r5, #1
 80004b8:	e74e      	b.n	8000358 <__adddf3+0x8c>
 80004ba:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004be:	bf18      	it	ne
 80004c0:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80004c4:	d029      	beq.n	800051a <__adddf3+0x24e>
 80004c6:	ea94 0f05 	teq	r4, r5
 80004ca:	bf08      	it	eq
 80004cc:	ea90 0f02 	teqeq	r0, r2
 80004d0:	d005      	beq.n	80004de <__adddf3+0x212>
 80004d2:	ea54 0c00 	orrs.w	ip, r4, r0
 80004d6:	bf04      	itt	eq
 80004d8:	4619      	moveq	r1, r3
 80004da:	4610      	moveq	r0, r2
 80004dc:	bd30      	pop	{r4, r5, pc}
 80004de:	ea91 0f03 	teq	r1, r3
 80004e2:	bf1e      	ittt	ne
 80004e4:	2100      	movne	r1, #0
 80004e6:	2000      	movne	r0, #0
 80004e8:	bd30      	popne	{r4, r5, pc}
 80004ea:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004ee:	d105      	bne.n	80004fc <__adddf3+0x230>
 80004f0:	0040      	lsls	r0, r0, #1
 80004f2:	4149      	adcs	r1, r1
 80004f4:	bf28      	it	cs
 80004f6:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80004fa:	bd30      	pop	{r4, r5, pc}
 80004fc:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 8000500:	bf3c      	itt	cc
 8000502:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 8000506:	bd30      	popcc	{r4, r5, pc}
 8000508:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 800050c:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 8000510:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8000514:	f04f 0000 	mov.w	r0, #0
 8000518:	bd30      	pop	{r4, r5, pc}
 800051a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800051e:	bf1a      	itte	ne
 8000520:	4619      	movne	r1, r3
 8000522:	4610      	movne	r0, r2
 8000524:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000528:	bf1c      	itt	ne
 800052a:	460b      	movne	r3, r1
 800052c:	4602      	movne	r2, r0
 800052e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000532:	bf06      	itte	eq
 8000534:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000538:	ea91 0f03 	teqeq	r1, r3
 800053c:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000540:	bd30      	pop	{r4, r5, pc}
 8000542:	bf00      	nop

08000544 <__aeabi_ui2d>:
 8000544:	f090 0f00 	teq	r0, #0
 8000548:	bf04      	itt	eq
 800054a:	2100      	moveq	r1, #0
 800054c:	4770      	bxeq	lr
 800054e:	b530      	push	{r4, r5, lr}
 8000550:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000554:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000558:	f04f 0500 	mov.w	r5, #0
 800055c:	f04f 0100 	mov.w	r1, #0
 8000560:	e750      	b.n	8000404 <__adddf3+0x138>
 8000562:	bf00      	nop

08000564 <__aeabi_i2d>:
 8000564:	f090 0f00 	teq	r0, #0
 8000568:	bf04      	itt	eq
 800056a:	2100      	moveq	r1, #0
 800056c:	4770      	bxeq	lr
 800056e:	b530      	push	{r4, r5, lr}
 8000570:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000574:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000578:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800057c:	bf48      	it	mi
 800057e:	4240      	negmi	r0, r0
 8000580:	f04f 0100 	mov.w	r1, #0
 8000584:	e73e      	b.n	8000404 <__adddf3+0x138>
 8000586:	bf00      	nop

08000588 <__aeabi_f2d>:
 8000588:	0042      	lsls	r2, r0, #1
 800058a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800058e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000592:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000596:	bf1f      	itttt	ne
 8000598:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800059c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 80005a0:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 80005a4:	4770      	bxne	lr
 80005a6:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 80005aa:	bf08      	it	eq
 80005ac:	4770      	bxeq	lr
 80005ae:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 80005b2:	bf04      	itt	eq
 80005b4:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 80005b8:	4770      	bxeq	lr
 80005ba:	b530      	push	{r4, r5, lr}
 80005bc:	f44f 7460 	mov.w	r4, #896	; 0x380
 80005c0:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80005c4:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80005c8:	e71c      	b.n	8000404 <__adddf3+0x138>
 80005ca:	bf00      	nop

080005cc <__aeabi_ul2d>:
 80005cc:	ea50 0201 	orrs.w	r2, r0, r1
 80005d0:	bf08      	it	eq
 80005d2:	4770      	bxeq	lr
 80005d4:	b530      	push	{r4, r5, lr}
 80005d6:	f04f 0500 	mov.w	r5, #0
 80005da:	e00a      	b.n	80005f2 <__aeabi_l2d+0x16>

080005dc <__aeabi_l2d>:
 80005dc:	ea50 0201 	orrs.w	r2, r0, r1
 80005e0:	bf08      	it	eq
 80005e2:	4770      	bxeq	lr
 80005e4:	b530      	push	{r4, r5, lr}
 80005e6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80005ea:	d502      	bpl.n	80005f2 <__aeabi_l2d+0x16>
 80005ec:	4240      	negs	r0, r0
 80005ee:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005f2:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80005f6:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80005fa:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005fe:	f43f aed8 	beq.w	80003b2 <__adddf3+0xe6>
 8000602:	f04f 0203 	mov.w	r2, #3
 8000606:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800060a:	bf18      	it	ne
 800060c:	3203      	addne	r2, #3
 800060e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000612:	bf18      	it	ne
 8000614:	3203      	addne	r2, #3
 8000616:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 800061a:	f1c2 0320 	rsb	r3, r2, #32
 800061e:	fa00 fc03 	lsl.w	ip, r0, r3
 8000622:	fa20 f002 	lsr.w	r0, r0, r2
 8000626:	fa01 fe03 	lsl.w	lr, r1, r3
 800062a:	ea40 000e 	orr.w	r0, r0, lr
 800062e:	fa21 f102 	lsr.w	r1, r1, r2
 8000632:	4414      	add	r4, r2
 8000634:	e6bd      	b.n	80003b2 <__adddf3+0xe6>
 8000636:	bf00      	nop

08000638 <__aeabi_dmul>:
 8000638:	b570      	push	{r4, r5, r6, lr}
 800063a:	f04f 0cff 	mov.w	ip, #255	; 0xff
 800063e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000642:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000646:	bf1d      	ittte	ne
 8000648:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800064c:	ea94 0f0c 	teqne	r4, ip
 8000650:	ea95 0f0c 	teqne	r5, ip
 8000654:	f000 f8de 	bleq	8000814 <__aeabi_dmul+0x1dc>
 8000658:	442c      	add	r4, r5
 800065a:	ea81 0603 	eor.w	r6, r1, r3
 800065e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000662:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000666:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800066a:	bf18      	it	ne
 800066c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000670:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000674:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000678:	d038      	beq.n	80006ec <__aeabi_dmul+0xb4>
 800067a:	fba0 ce02 	umull	ip, lr, r0, r2
 800067e:	f04f 0500 	mov.w	r5, #0
 8000682:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000686:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800068a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800068e:	f04f 0600 	mov.w	r6, #0
 8000692:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000696:	f09c 0f00 	teq	ip, #0
 800069a:	bf18      	it	ne
 800069c:	f04e 0e01 	orrne.w	lr, lr, #1
 80006a0:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 80006a4:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 80006a8:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 80006ac:	d204      	bcs.n	80006b8 <__aeabi_dmul+0x80>
 80006ae:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 80006b2:	416d      	adcs	r5, r5
 80006b4:	eb46 0606 	adc.w	r6, r6, r6
 80006b8:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 80006bc:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 80006c0:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 80006c4:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 80006c8:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 80006cc:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80006d0:	bf88      	it	hi
 80006d2:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80006d6:	d81e      	bhi.n	8000716 <__aeabi_dmul+0xde>
 80006d8:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 80006dc:	bf08      	it	eq
 80006de:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006e2:	f150 0000 	adcs.w	r0, r0, #0
 80006e6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006ea:	bd70      	pop	{r4, r5, r6, pc}
 80006ec:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 80006f0:	ea46 0101 	orr.w	r1, r6, r1
 80006f4:	ea40 0002 	orr.w	r0, r0, r2
 80006f8:	ea81 0103 	eor.w	r1, r1, r3
 80006fc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 8000700:	bfc2      	ittt	gt
 8000702:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000706:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 800070a:	bd70      	popgt	{r4, r5, r6, pc}
 800070c:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000710:	f04f 0e00 	mov.w	lr, #0
 8000714:	3c01      	subs	r4, #1
 8000716:	f300 80ab 	bgt.w	8000870 <__aeabi_dmul+0x238>
 800071a:	f114 0f36 	cmn.w	r4, #54	; 0x36
 800071e:	bfde      	ittt	le
 8000720:	2000      	movle	r0, #0
 8000722:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 8000726:	bd70      	pople	{r4, r5, r6, pc}
 8000728:	f1c4 0400 	rsb	r4, r4, #0
 800072c:	3c20      	subs	r4, #32
 800072e:	da35      	bge.n	800079c <__aeabi_dmul+0x164>
 8000730:	340c      	adds	r4, #12
 8000732:	dc1b      	bgt.n	800076c <__aeabi_dmul+0x134>
 8000734:	f104 0414 	add.w	r4, r4, #20
 8000738:	f1c4 0520 	rsb	r5, r4, #32
 800073c:	fa00 f305 	lsl.w	r3, r0, r5
 8000740:	fa20 f004 	lsr.w	r0, r0, r4
 8000744:	fa01 f205 	lsl.w	r2, r1, r5
 8000748:	ea40 0002 	orr.w	r0, r0, r2
 800074c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000750:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000754:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000758:	fa21 f604 	lsr.w	r6, r1, r4
 800075c:	eb42 0106 	adc.w	r1, r2, r6
 8000760:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000764:	bf08      	it	eq
 8000766:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800076a:	bd70      	pop	{r4, r5, r6, pc}
 800076c:	f1c4 040c 	rsb	r4, r4, #12
 8000770:	f1c4 0520 	rsb	r5, r4, #32
 8000774:	fa00 f304 	lsl.w	r3, r0, r4
 8000778:	fa20 f005 	lsr.w	r0, r0, r5
 800077c:	fa01 f204 	lsl.w	r2, r1, r4
 8000780:	ea40 0002 	orr.w	r0, r0, r2
 8000784:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000788:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800078c:	f141 0100 	adc.w	r1, r1, #0
 8000790:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000794:	bf08      	it	eq
 8000796:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800079a:	bd70      	pop	{r4, r5, r6, pc}
 800079c:	f1c4 0520 	rsb	r5, r4, #32
 80007a0:	fa00 f205 	lsl.w	r2, r0, r5
 80007a4:	ea4e 0e02 	orr.w	lr, lr, r2
 80007a8:	fa20 f304 	lsr.w	r3, r0, r4
 80007ac:	fa01 f205 	lsl.w	r2, r1, r5
 80007b0:	ea43 0302 	orr.w	r3, r3, r2
 80007b4:	fa21 f004 	lsr.w	r0, r1, r4
 80007b8:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80007bc:	fa21 f204 	lsr.w	r2, r1, r4
 80007c0:	ea20 0002 	bic.w	r0, r0, r2
 80007c4:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 80007c8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80007cc:	bf08      	it	eq
 80007ce:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007d2:	bd70      	pop	{r4, r5, r6, pc}
 80007d4:	f094 0f00 	teq	r4, #0
 80007d8:	d10f      	bne.n	80007fa <__aeabi_dmul+0x1c2>
 80007da:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 80007de:	0040      	lsls	r0, r0, #1
 80007e0:	eb41 0101 	adc.w	r1, r1, r1
 80007e4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80007e8:	bf08      	it	eq
 80007ea:	3c01      	subeq	r4, #1
 80007ec:	d0f7      	beq.n	80007de <__aeabi_dmul+0x1a6>
 80007ee:	ea41 0106 	orr.w	r1, r1, r6
 80007f2:	f095 0f00 	teq	r5, #0
 80007f6:	bf18      	it	ne
 80007f8:	4770      	bxne	lr
 80007fa:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 80007fe:	0052      	lsls	r2, r2, #1
 8000800:	eb43 0303 	adc.w	r3, r3, r3
 8000804:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 8000808:	bf08      	it	eq
 800080a:	3d01      	subeq	r5, #1
 800080c:	d0f7      	beq.n	80007fe <__aeabi_dmul+0x1c6>
 800080e:	ea43 0306 	orr.w	r3, r3, r6
 8000812:	4770      	bx	lr
 8000814:	ea94 0f0c 	teq	r4, ip
 8000818:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 800081c:	bf18      	it	ne
 800081e:	ea95 0f0c 	teqne	r5, ip
 8000822:	d00c      	beq.n	800083e <__aeabi_dmul+0x206>
 8000824:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000828:	bf18      	it	ne
 800082a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800082e:	d1d1      	bne.n	80007d4 <__aeabi_dmul+0x19c>
 8000830:	ea81 0103 	eor.w	r1, r1, r3
 8000834:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000838:	f04f 0000 	mov.w	r0, #0
 800083c:	bd70      	pop	{r4, r5, r6, pc}
 800083e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000842:	bf06      	itte	eq
 8000844:	4610      	moveq	r0, r2
 8000846:	4619      	moveq	r1, r3
 8000848:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800084c:	d019      	beq.n	8000882 <__aeabi_dmul+0x24a>
 800084e:	ea94 0f0c 	teq	r4, ip
 8000852:	d102      	bne.n	800085a <__aeabi_dmul+0x222>
 8000854:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000858:	d113      	bne.n	8000882 <__aeabi_dmul+0x24a>
 800085a:	ea95 0f0c 	teq	r5, ip
 800085e:	d105      	bne.n	800086c <__aeabi_dmul+0x234>
 8000860:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000864:	bf1c      	itt	ne
 8000866:	4610      	movne	r0, r2
 8000868:	4619      	movne	r1, r3
 800086a:	d10a      	bne.n	8000882 <__aeabi_dmul+0x24a>
 800086c:	ea81 0103 	eor.w	r1, r1, r3
 8000870:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000874:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000878:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800087c:	f04f 0000 	mov.w	r0, #0
 8000880:	bd70      	pop	{r4, r5, r6, pc}
 8000882:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000886:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800088a:	bd70      	pop	{r4, r5, r6, pc}

0800088c <__aeabi_ddiv>:
 800088c:	b570      	push	{r4, r5, r6, lr}
 800088e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000892:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000896:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800089a:	bf1d      	ittte	ne
 800089c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80008a0:	ea94 0f0c 	teqne	r4, ip
 80008a4:	ea95 0f0c 	teqne	r5, ip
 80008a8:	f000 f8a7 	bleq	80009fa <__aeabi_ddiv+0x16e>
 80008ac:	eba4 0405 	sub.w	r4, r4, r5
 80008b0:	ea81 0e03 	eor.w	lr, r1, r3
 80008b4:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80008b8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80008bc:	f000 8088 	beq.w	80009d0 <__aeabi_ddiv+0x144>
 80008c0:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80008c4:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 80008c8:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 80008cc:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80008d0:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80008d4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80008d8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80008dc:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008e0:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 80008e4:	429d      	cmp	r5, r3
 80008e6:	bf08      	it	eq
 80008e8:	4296      	cmpeq	r6, r2
 80008ea:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 80008ee:	f504 7440 	add.w	r4, r4, #768	; 0x300
 80008f2:	d202      	bcs.n	80008fa <__aeabi_ddiv+0x6e>
 80008f4:	085b      	lsrs	r3, r3, #1
 80008f6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008fa:	1ab6      	subs	r6, r6, r2
 80008fc:	eb65 0503 	sbc.w	r5, r5, r3
 8000900:	085b      	lsrs	r3, r3, #1
 8000902:	ea4f 0232 	mov.w	r2, r2, rrx
 8000906:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 800090a:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 800090e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000912:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000916:	bf22      	ittt	cs
 8000918:	1ab6      	subcs	r6, r6, r2
 800091a:	4675      	movcs	r5, lr
 800091c:	ea40 000c 	orrcs.w	r0, r0, ip
 8000920:	085b      	lsrs	r3, r3, #1
 8000922:	ea4f 0232 	mov.w	r2, r2, rrx
 8000926:	ebb6 0e02 	subs.w	lr, r6, r2
 800092a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800092e:	bf22      	ittt	cs
 8000930:	1ab6      	subcs	r6, r6, r2
 8000932:	4675      	movcs	r5, lr
 8000934:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000938:	085b      	lsrs	r3, r3, #1
 800093a:	ea4f 0232 	mov.w	r2, r2, rrx
 800093e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000942:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000946:	bf22      	ittt	cs
 8000948:	1ab6      	subcs	r6, r6, r2
 800094a:	4675      	movcs	r5, lr
 800094c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000950:	085b      	lsrs	r3, r3, #1
 8000952:	ea4f 0232 	mov.w	r2, r2, rrx
 8000956:	ebb6 0e02 	subs.w	lr, r6, r2
 800095a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800095e:	bf22      	ittt	cs
 8000960:	1ab6      	subcs	r6, r6, r2
 8000962:	4675      	movcs	r5, lr
 8000964:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000968:	ea55 0e06 	orrs.w	lr, r5, r6
 800096c:	d018      	beq.n	80009a0 <__aeabi_ddiv+0x114>
 800096e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000972:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000976:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800097a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800097e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000982:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000986:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800098a:	d1c0      	bne.n	800090e <__aeabi_ddiv+0x82>
 800098c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000990:	d10b      	bne.n	80009aa <__aeabi_ddiv+0x11e>
 8000992:	ea41 0100 	orr.w	r1, r1, r0
 8000996:	f04f 0000 	mov.w	r0, #0
 800099a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 800099e:	e7b6      	b.n	800090e <__aeabi_ddiv+0x82>
 80009a0:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80009a4:	bf04      	itt	eq
 80009a6:	4301      	orreq	r1, r0
 80009a8:	2000      	moveq	r0, #0
 80009aa:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80009ae:	bf88      	it	hi
 80009b0:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80009b4:	f63f aeaf 	bhi.w	8000716 <__aeabi_dmul+0xde>
 80009b8:	ebb5 0c03 	subs.w	ip, r5, r3
 80009bc:	bf04      	itt	eq
 80009be:	ebb6 0c02 	subseq.w	ip, r6, r2
 80009c2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80009c6:	f150 0000 	adcs.w	r0, r0, #0
 80009ca:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80009ce:	bd70      	pop	{r4, r5, r6, pc}
 80009d0:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 80009d4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80009d8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80009dc:	bfc2      	ittt	gt
 80009de:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009e2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009e6:	bd70      	popgt	{r4, r5, r6, pc}
 80009e8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80009ec:	f04f 0e00 	mov.w	lr, #0
 80009f0:	3c01      	subs	r4, #1
 80009f2:	e690      	b.n	8000716 <__aeabi_dmul+0xde>
 80009f4:	ea45 0e06 	orr.w	lr, r5, r6
 80009f8:	e68d      	b.n	8000716 <__aeabi_dmul+0xde>
 80009fa:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009fe:	ea94 0f0c 	teq	r4, ip
 8000a02:	bf08      	it	eq
 8000a04:	ea95 0f0c 	teqeq	r5, ip
 8000a08:	f43f af3b 	beq.w	8000882 <__aeabi_dmul+0x24a>
 8000a0c:	ea94 0f0c 	teq	r4, ip
 8000a10:	d10a      	bne.n	8000a28 <__aeabi_ddiv+0x19c>
 8000a12:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000a16:	f47f af34 	bne.w	8000882 <__aeabi_dmul+0x24a>
 8000a1a:	ea95 0f0c 	teq	r5, ip
 8000a1e:	f47f af25 	bne.w	800086c <__aeabi_dmul+0x234>
 8000a22:	4610      	mov	r0, r2
 8000a24:	4619      	mov	r1, r3
 8000a26:	e72c      	b.n	8000882 <__aeabi_dmul+0x24a>
 8000a28:	ea95 0f0c 	teq	r5, ip
 8000a2c:	d106      	bne.n	8000a3c <__aeabi_ddiv+0x1b0>
 8000a2e:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000a32:	f43f aefd 	beq.w	8000830 <__aeabi_dmul+0x1f8>
 8000a36:	4610      	mov	r0, r2
 8000a38:	4619      	mov	r1, r3
 8000a3a:	e722      	b.n	8000882 <__aeabi_dmul+0x24a>
 8000a3c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a40:	bf18      	it	ne
 8000a42:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a46:	f47f aec5 	bne.w	80007d4 <__aeabi_dmul+0x19c>
 8000a4a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a4e:	f47f af0d 	bne.w	800086c <__aeabi_dmul+0x234>
 8000a52:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a56:	f47f aeeb 	bne.w	8000830 <__aeabi_dmul+0x1f8>
 8000a5a:	e712      	b.n	8000882 <__aeabi_dmul+0x24a>

08000a5c <__gedf2>:
 8000a5c:	f04f 3cff 	mov.w	ip, #4294967295
 8000a60:	e006      	b.n	8000a70 <__cmpdf2+0x4>
 8000a62:	bf00      	nop

08000a64 <__ledf2>:
 8000a64:	f04f 0c01 	mov.w	ip, #1
 8000a68:	e002      	b.n	8000a70 <__cmpdf2+0x4>
 8000a6a:	bf00      	nop

08000a6c <__cmpdf2>:
 8000a6c:	f04f 0c01 	mov.w	ip, #1
 8000a70:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a74:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a78:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a7c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a80:	bf18      	it	ne
 8000a82:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a86:	d01b      	beq.n	8000ac0 <__cmpdf2+0x54>
 8000a88:	b001      	add	sp, #4
 8000a8a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a8e:	bf0c      	ite	eq
 8000a90:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a94:	ea91 0f03 	teqne	r1, r3
 8000a98:	bf02      	ittt	eq
 8000a9a:	ea90 0f02 	teqeq	r0, r2
 8000a9e:	2000      	moveq	r0, #0
 8000aa0:	4770      	bxeq	lr
 8000aa2:	f110 0f00 	cmn.w	r0, #0
 8000aa6:	ea91 0f03 	teq	r1, r3
 8000aaa:	bf58      	it	pl
 8000aac:	4299      	cmppl	r1, r3
 8000aae:	bf08      	it	eq
 8000ab0:	4290      	cmpeq	r0, r2
 8000ab2:	bf2c      	ite	cs
 8000ab4:	17d8      	asrcs	r0, r3, #31
 8000ab6:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000aba:	f040 0001 	orr.w	r0, r0, #1
 8000abe:	4770      	bx	lr
 8000ac0:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000ac4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000ac8:	d102      	bne.n	8000ad0 <__cmpdf2+0x64>
 8000aca:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000ace:	d107      	bne.n	8000ae0 <__cmpdf2+0x74>
 8000ad0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000ad4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000ad8:	d1d6      	bne.n	8000a88 <__cmpdf2+0x1c>
 8000ada:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000ade:	d0d3      	beq.n	8000a88 <__cmpdf2+0x1c>
 8000ae0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000ae4:	4770      	bx	lr
 8000ae6:	bf00      	nop

08000ae8 <__aeabi_cdrcmple>:
 8000ae8:	4684      	mov	ip, r0
 8000aea:	4610      	mov	r0, r2
 8000aec:	4662      	mov	r2, ip
 8000aee:	468c      	mov	ip, r1
 8000af0:	4619      	mov	r1, r3
 8000af2:	4663      	mov	r3, ip
 8000af4:	e000      	b.n	8000af8 <__aeabi_cdcmpeq>
 8000af6:	bf00      	nop

08000af8 <__aeabi_cdcmpeq>:
 8000af8:	b501      	push	{r0, lr}
 8000afa:	f7ff ffb7 	bl	8000a6c <__cmpdf2>
 8000afe:	2800      	cmp	r0, #0
 8000b00:	bf48      	it	mi
 8000b02:	f110 0f00 	cmnmi.w	r0, #0
 8000b06:	bd01      	pop	{r0, pc}

08000b08 <__aeabi_dcmpeq>:
 8000b08:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b0c:	f7ff fff4 	bl	8000af8 <__aeabi_cdcmpeq>
 8000b10:	bf0c      	ite	eq
 8000b12:	2001      	moveq	r0, #1
 8000b14:	2000      	movne	r0, #0
 8000b16:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b1a:	bf00      	nop

08000b1c <__aeabi_dcmplt>:
 8000b1c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b20:	f7ff ffea 	bl	8000af8 <__aeabi_cdcmpeq>
 8000b24:	bf34      	ite	cc
 8000b26:	2001      	movcc	r0, #1
 8000b28:	2000      	movcs	r0, #0
 8000b2a:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b2e:	bf00      	nop

08000b30 <__aeabi_dcmple>:
 8000b30:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b34:	f7ff ffe0 	bl	8000af8 <__aeabi_cdcmpeq>
 8000b38:	bf94      	ite	ls
 8000b3a:	2001      	movls	r0, #1
 8000b3c:	2000      	movhi	r0, #0
 8000b3e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b42:	bf00      	nop

08000b44 <__aeabi_dcmpge>:
 8000b44:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b48:	f7ff ffce 	bl	8000ae8 <__aeabi_cdrcmple>
 8000b4c:	bf94      	ite	ls
 8000b4e:	2001      	movls	r0, #1
 8000b50:	2000      	movhi	r0, #0
 8000b52:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b56:	bf00      	nop

08000b58 <__aeabi_dcmpgt>:
 8000b58:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b5c:	f7ff ffc4 	bl	8000ae8 <__aeabi_cdrcmple>
 8000b60:	bf34      	ite	cc
 8000b62:	2001      	movcc	r0, #1
 8000b64:	2000      	movcs	r0, #0
 8000b66:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b6a:	bf00      	nop

08000b6c <__aeabi_dcmpun>:
 8000b6c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b70:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b74:	d102      	bne.n	8000b7c <__aeabi_dcmpun+0x10>
 8000b76:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b7a:	d10a      	bne.n	8000b92 <__aeabi_dcmpun+0x26>
 8000b7c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b80:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b84:	d102      	bne.n	8000b8c <__aeabi_dcmpun+0x20>
 8000b86:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b8a:	d102      	bne.n	8000b92 <__aeabi_dcmpun+0x26>
 8000b8c:	f04f 0000 	mov.w	r0, #0
 8000b90:	4770      	bx	lr
 8000b92:	f04f 0001 	mov.w	r0, #1
 8000b96:	4770      	bx	lr

08000b98 <__aeabi_d2iz>:
 8000b98:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b9c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000ba0:	d215      	bcs.n	8000bce <__aeabi_d2iz+0x36>
 8000ba2:	d511      	bpl.n	8000bc8 <__aeabi_d2iz+0x30>
 8000ba4:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000ba8:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000bac:	d912      	bls.n	8000bd4 <__aeabi_d2iz+0x3c>
 8000bae:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000bb2:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000bb6:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000bba:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000bbe:	fa23 f002 	lsr.w	r0, r3, r2
 8000bc2:	bf18      	it	ne
 8000bc4:	4240      	negne	r0, r0
 8000bc6:	4770      	bx	lr
 8000bc8:	f04f 0000 	mov.w	r0, #0
 8000bcc:	4770      	bx	lr
 8000bce:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000bd2:	d105      	bne.n	8000be0 <__aeabi_d2iz+0x48>
 8000bd4:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000bd8:	bf08      	it	eq
 8000bda:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000bde:	4770      	bx	lr
 8000be0:	f04f 0000 	mov.w	r0, #0
 8000be4:	4770      	bx	lr
 8000be6:	bf00      	nop

08000be8 <__aeabi_d2uiz>:
 8000be8:	004a      	lsls	r2, r1, #1
 8000bea:	d211      	bcs.n	8000c10 <__aeabi_d2uiz+0x28>
 8000bec:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000bf0:	d211      	bcs.n	8000c16 <__aeabi_d2uiz+0x2e>
 8000bf2:	d50d      	bpl.n	8000c10 <__aeabi_d2uiz+0x28>
 8000bf4:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000bf8:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000bfc:	d40e      	bmi.n	8000c1c <__aeabi_d2uiz+0x34>
 8000bfe:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000c02:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000c06:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000c0a:	fa23 f002 	lsr.w	r0, r3, r2
 8000c0e:	4770      	bx	lr
 8000c10:	f04f 0000 	mov.w	r0, #0
 8000c14:	4770      	bx	lr
 8000c16:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000c1a:	d102      	bne.n	8000c22 <__aeabi_d2uiz+0x3a>
 8000c1c:	f04f 30ff 	mov.w	r0, #4294967295
 8000c20:	4770      	bx	lr
 8000c22:	f04f 0000 	mov.w	r0, #0
 8000c26:	4770      	bx	lr

08000c28 <__aeabi_d2f>:
 8000c28:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000c2c:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8000c30:	bf24      	itt	cs
 8000c32:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 8000c36:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 8000c3a:	d90d      	bls.n	8000c58 <__aeabi_d2f+0x30>
 8000c3c:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000c40:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000c44:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000c48:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8000c4c:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000c50:	bf08      	it	eq
 8000c52:	f020 0001 	biceq.w	r0, r0, #1
 8000c56:	4770      	bx	lr
 8000c58:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8000c5c:	d121      	bne.n	8000ca2 <__aeabi_d2f+0x7a>
 8000c5e:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8000c62:	bfbc      	itt	lt
 8000c64:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 8000c68:	4770      	bxlt	lr
 8000c6a:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000c6e:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000c72:	f1c2 0218 	rsb	r2, r2, #24
 8000c76:	f1c2 0c20 	rsb	ip, r2, #32
 8000c7a:	fa10 f30c 	lsls.w	r3, r0, ip
 8000c7e:	fa20 f002 	lsr.w	r0, r0, r2
 8000c82:	bf18      	it	ne
 8000c84:	f040 0001 	orrne.w	r0, r0, #1
 8000c88:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000c8c:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000c90:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000c94:	ea40 000c 	orr.w	r0, r0, ip
 8000c98:	fa23 f302 	lsr.w	r3, r3, r2
 8000c9c:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000ca0:	e7cc      	b.n	8000c3c <__aeabi_d2f+0x14>
 8000ca2:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000ca6:	d107      	bne.n	8000cb8 <__aeabi_d2f+0x90>
 8000ca8:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000cac:	bf1e      	ittt	ne
 8000cae:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8000cb2:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8000cb6:	4770      	bxne	lr
 8000cb8:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 8000cbc:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000cc0:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000cc4:	4770      	bx	lr
 8000cc6:	bf00      	nop

08000cc8 <I2C1_GPIOInit>:
 *  PB 9 -> SDA
 *
 */

void I2C1_GPIOInit()
{
 8000cc8:	b580      	push	{r7, lr}
 8000cca:	b084      	sub	sp, #16
 8000ccc:	af00      	add	r7, sp, #0
	GPIO_Handle_t I2CPin;

	// Port and Pin Configurations
	I2CPin.pGPIOx = GPIOB;
 8000cce:	4b0e      	ldr	r3, [pc, #56]	; (8000d08 <I2C1_GPIOInit+0x40>)
 8000cd0:	607b      	str	r3, [r7, #4]
	I2CPin.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_ALTFN;
 8000cd2:	2302      	movs	r3, #2
 8000cd4:	727b      	strb	r3, [r7, #9]
	I2CPin.GPIO_PinConfig.GPIO_PinAltFunMode = 4;
 8000cd6:	2304      	movs	r3, #4
 8000cd8:	737b      	strb	r3, [r7, #13]
	I2CPin.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_OD;
 8000cda:	2301      	movs	r3, #1
 8000cdc:	733b      	strb	r3, [r7, #12]
	I2CPin.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_PIN_PU;
 8000cde:	2301      	movs	r3, #1
 8000ce0:	72fb      	strb	r3, [r7, #11]
	I2CPin.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 8000ce2:	2302      	movs	r3, #2
 8000ce4:	72bb      	strb	r3, [r7, #10]

	// SCL Config
	I2CPin.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_8;
 8000ce6:	2308      	movs	r3, #8
 8000ce8:	723b      	strb	r3, [r7, #8]
	GPIO_Init(&I2CPin);
 8000cea:	1d3b      	adds	r3, r7, #4
 8000cec:	4618      	mov	r0, r3
 8000cee:	f000 fb2d 	bl	800134c <GPIO_Init>

	// SDA Config
	I2CPin.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_9;
 8000cf2:	2309      	movs	r3, #9
 8000cf4:	723b      	strb	r3, [r7, #8]
	GPIO_Init(&I2CPin);
 8000cf6:	1d3b      	adds	r3, r7, #4
 8000cf8:	4618      	mov	r0, r3
 8000cfa:	f000 fb27 	bl	800134c <GPIO_Init>

}
 8000cfe:	bf00      	nop
 8000d00:	3710      	adds	r7, #16
 8000d02:	46bd      	mov	sp, r7
 8000d04:	bd80      	pop	{r7, pc}
 8000d06:	bf00      	nop
 8000d08:	40020400 	.word	0x40020400

08000d0c <I2C1_Init>:

void I2C1_Init()
{
 8000d0c:	b580      	push	{r7, lr}
 8000d0e:	af00      	add	r7, sp, #0
	I2C1_Handle.pI2Cx = I2C1;
 8000d10:	4b09      	ldr	r3, [pc, #36]	; (8000d38 <I2C1_Init+0x2c>)
 8000d12:	4a0a      	ldr	r2, [pc, #40]	; (8000d3c <I2C1_Init+0x30>)
 8000d14:	601a      	str	r2, [r3, #0]

	I2C1_Handle.I2C_Config.I2C_ACKControl = I2C_ACK_ENABLE;
 8000d16:	4b08      	ldr	r3, [pc, #32]	; (8000d38 <I2C1_Init+0x2c>)
 8000d18:	2201      	movs	r2, #1
 8000d1a:	725a      	strb	r2, [r3, #9]
	I2C1_Handle.I2C_Config.I2C_DeviceAddress = MY_ADDR;
 8000d1c:	4b06      	ldr	r3, [pc, #24]	; (8000d38 <I2C1_Init+0x2c>)
 8000d1e:	2261      	movs	r2, #97	; 0x61
 8000d20:	721a      	strb	r2, [r3, #8]
	I2C1_Handle.I2C_Config.I2C_FMDutyCycle = I2C_FM_DUTY_2;
 8000d22:	4b05      	ldr	r3, [pc, #20]	; (8000d38 <I2C1_Init+0x2c>)
 8000d24:	2200      	movs	r2, #0
 8000d26:	815a      	strh	r2, [r3, #10]
	I2C1_Handle.I2C_Config.I2C_SCLSpeed = I2C_SCL_SPEED_SM;
 8000d28:	4b03      	ldr	r3, [pc, #12]	; (8000d38 <I2C1_Init+0x2c>)
 8000d2a:	4a05      	ldr	r2, [pc, #20]	; (8000d40 <I2C1_Init+0x34>)
 8000d2c:	605a      	str	r2, [r3, #4]

	I2C_Init(&I2C1_Handle);
 8000d2e:	4802      	ldr	r0, [pc, #8]	; (8000d38 <I2C1_Init+0x2c>)
 8000d30:	f000 fdfa 	bl	8001928 <I2C_Init>
}
 8000d34:	bf00      	nop
 8000d36:	bd80      	pop	{r7, pc}
 8000d38:	200002d0 	.word	0x200002d0
 8000d3c:	40005400 	.word	0x40005400
 8000d40:	000186a0 	.word	0x000186a0

08000d44 <GPIO_ButtonInit>:

void GPIO_ButtonInit(void)
{
 8000d44:	b580      	push	{r7, lr}
 8000d46:	b084      	sub	sp, #16
 8000d48:	af00      	add	r7, sp, #0
	GPIO_Handle_t GpioBtn;
	memset(&GpioBtn, 0 , sizeof(GpioBtn));
 8000d4a:	1d3b      	adds	r3, r7, #4
 8000d4c:	220c      	movs	r2, #12
 8000d4e:	2100      	movs	r1, #0
 8000d50:	4618      	mov	r0, r3
 8000d52:	f000 ffe3 	bl	8001d1c <memset>

	GpioBtn.pGPIOx = GPIOC;
 8000d56:	4b09      	ldr	r3, [pc, #36]	; (8000d7c <GPIO_ButtonInit+0x38>)
 8000d58:	607b      	str	r3, [r7, #4]
	GpioBtn.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_13;
 8000d5a:	230d      	movs	r3, #13
 8000d5c:	723b      	strb	r3, [r7, #8]
	GpioBtn.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_IN;
 8000d5e:	2300      	movs	r3, #0
 8000d60:	727b      	strb	r3, [r7, #9]
	GpioBtn.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 8000d62:	2302      	movs	r3, #2
 8000d64:	72bb      	strb	r3, [r7, #10]

	//GpioBtn.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_;
	GpioBtn.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_PIN_PU;
 8000d66:	2301      	movs	r3, #1
 8000d68:	72fb      	strb	r3, [r7, #11]

	GPIO_Init(&GpioBtn);
 8000d6a:	1d3b      	adds	r3, r7, #4
 8000d6c:	4618      	mov	r0, r3
 8000d6e:	f000 faed 	bl	800134c <GPIO_Init>

}
 8000d72:	bf00      	nop
 8000d74:	3710      	adds	r7, #16
 8000d76:	46bd      	mov	sp, r7
 8000d78:	bd80      	pop	{r7, pc}
 8000d7a:	bf00      	nop
 8000d7c:	40020800 	.word	0x40020800

08000d80 <main>:
int main(void)
{
 8000d80:	b580      	push	{r7, lr}
 8000d82:	b082      	sub	sp, #8
 8000d84:	af00      	add	r7, sp, #0
	initialise_monitor_handles();
 8000d86:	f005 fc33 	bl	80065f0 <initialise_monitor_handles>

	//GPIO Initialization
	GPIO_ButtonInit();
 8000d8a:	f7ff ffdb 	bl	8000d44 <GPIO_ButtonInit>

    // I2C SCL and SDA Pin selection
	I2C1_GPIOInit();
 8000d8e:	f7ff ff9b 	bl	8000cc8 <I2C1_GPIOInit>

	//Initializing the I2C1 configuration
	I2C1_Init();
 8000d92:	f7ff ffbb 	bl	8000d0c <I2C1_Init>

	//Initialize Peripheral Control
	I2C_PeripheralControl(I2C1, ENABLE);
 8000d96:	2101      	movs	r1, #1
 8000d98:	4812      	ldr	r0, [pc, #72]	; (8000de4 <main+0x64>)
 8000d9a:	f000 fcf0 	bl	800177e <I2C_PeripheralControl>

	// Ack bit is enabled after PE = 1
	I2C_ManageAcking(I2C1_Handle.pI2Cx, I2C_ACK_ENABLE);
 8000d9e:	4b12      	ldr	r3, [pc, #72]	; (8000de8 <main+0x68>)
 8000da0:	681b      	ldr	r3, [r3, #0]
 8000da2:	2101      	movs	r1, #1
 8000da4:	4618      	mov	r0, r3
 8000da6:	f000 ff60 	bl	8001c6a <I2C_ManageAcking>

	printf("We are running \n ");
 8000daa:	4810      	ldr	r0, [pc, #64]	; (8000dec <main+0x6c>)
 8000dac:	f001 fdea 	bl	8002984 <iprintf>

	// Initialize MPU Parameter
	MPU6050_Initialize();
 8000db0:	f000 f866 	bl	8000e80 <MPU6050_Initialize>

	while(1)
	{
		// Function to read raw values.
		MPU6050_GetRawAccelGyro(accel_gyro);
 8000db4:	480e      	ldr	r0, [pc, #56]	; (8000df0 <main+0x70>)
 8000db6:	f000 f8b5 	bl	8000f24 <MPU6050_GetRawAccelGyro>
		for(int i = 0;i<6;i++)
 8000dba:	2300      	movs	r3, #0
 8000dbc:	607b      	str	r3, [r7, #4]
 8000dbe:	e00a      	b.n	8000dd6 <main+0x56>
		{
		printf("%d ",accel_gyro[i]);
 8000dc0:	4a0b      	ldr	r2, [pc, #44]	; (8000df0 <main+0x70>)
 8000dc2:	687b      	ldr	r3, [r7, #4]
 8000dc4:	f932 3013 	ldrsh.w	r3, [r2, r3, lsl #1]
 8000dc8:	4619      	mov	r1, r3
 8000dca:	480a      	ldr	r0, [pc, #40]	; (8000df4 <main+0x74>)
 8000dcc:	f001 fdda 	bl	8002984 <iprintf>
		for(int i = 0;i<6;i++)
 8000dd0:	687b      	ldr	r3, [r7, #4]
 8000dd2:	3301      	adds	r3, #1
 8000dd4:	607b      	str	r3, [r7, #4]
 8000dd6:	687b      	ldr	r3, [r7, #4]
 8000dd8:	2b05      	cmp	r3, #5
 8000dda:	ddf1      	ble.n	8000dc0 <main+0x40>
		}
		printf(" \n");
 8000ddc:	4806      	ldr	r0, [pc, #24]	; (8000df8 <main+0x78>)
 8000dde:	f001 fe45 	bl	8002a6c <puts>
		MPU6050_GetRawAccelGyro(accel_gyro);
 8000de2:	e7e7      	b.n	8000db4 <main+0x34>
 8000de4:	40005400 	.word	0x40005400
 8000de8:	200002d0 	.word	0x200002d0
 8000dec:	08006700 	.word	0x08006700
 8000df0:	20000208 	.word	0x20000208
 8000df4:	08006714 	.word	0x08006714
 8000df8:	08006718 	.word	0x08006718

08000dfc <MPU6050_I2C_ByteWrite>:
* @param  pBuffer : pointer to the buffer  containing the data to be written to the MPU6050.
* @param  writeAddr : address of the register in which the data will be written
* @return None
*/
void MPU6050_I2C_ByteWrite(uint8_t slaveAddr, uint8_t* pBuffer, uint8_t writeAddr)
{
 8000dfc:	b580      	push	{r7, lr}
 8000dfe:	b084      	sub	sp, #16
 8000e00:	af02      	add	r7, sp, #8
 8000e02:	4603      	mov	r3, r0
 8000e04:	6039      	str	r1, [r7, #0]
 8000e06:	71fb      	strb	r3, [r7, #7]
 8000e08:	4613      	mov	r3, r2
 8000e0a:	71bb      	strb	r3, [r7, #6]

	I2C_MasterSendData(&I2C1_Handle,&writeAddr,1,MPU6050_ADDRESS_AD0_LOW,I2C_DISABLE_SR);
 8000e0c:	1db9      	adds	r1, r7, #6
 8000e0e:	2300      	movs	r3, #0
 8000e10:	9300      	str	r3, [sp, #0]
 8000e12:	2368      	movs	r3, #104	; 0x68
 8000e14:	2201      	movs	r2, #1
 8000e16:	4807      	ldr	r0, [pc, #28]	; (8000e34 <MPU6050_I2C_ByteWrite+0x38>)
 8000e18:	f000 fe32 	bl	8001a80 <I2C_MasterSendData>

	I2C_MasterSendData(&I2C1_Handle,pBuffer,1,MPU6050_ADDRESS_AD0_LOW,I2C_DISABLE_SR);
 8000e1c:	2300      	movs	r3, #0
 8000e1e:	9300      	str	r3, [sp, #0]
 8000e20:	2368      	movs	r3, #104	; 0x68
 8000e22:	2201      	movs	r2, #1
 8000e24:	6839      	ldr	r1, [r7, #0]
 8000e26:	4803      	ldr	r0, [pc, #12]	; (8000e34 <MPU6050_I2C_ByteWrite+0x38>)
 8000e28:	f000 fe2a 	bl	8001a80 <I2C_MasterSendData>


}
 8000e2c:	bf00      	nop
 8000e2e:	3708      	adds	r7, #8
 8000e30:	46bd      	mov	sp, r7
 8000e32:	bd80      	pop	{r7, pc}
 8000e34:	200002d0 	.word	0x200002d0

08000e38 <MPU6050_I2C_BufferRead>:
* @param  NumByteToRead : number of bytes to read from the MPU6050 ( NumByteToRead >1  only for the Mgnetometer readinf).
* @return None
*/

void MPU6050_I2C_BufferRead(uint8_t slaveAddr, uint8_t* pBuffer, uint8_t readAddr, uint16_t NumByteToRead)
{
 8000e38:	b580      	push	{r7, lr}
 8000e3a:	b084      	sub	sp, #16
 8000e3c:	af02      	add	r7, sp, #8
 8000e3e:	6039      	str	r1, [r7, #0]
 8000e40:	4611      	mov	r1, r2
 8000e42:	461a      	mov	r2, r3
 8000e44:	4603      	mov	r3, r0
 8000e46:	71fb      	strb	r3, [r7, #7]
 8000e48:	460b      	mov	r3, r1
 8000e4a:	71bb      	strb	r3, [r7, #6]
 8000e4c:	4613      	mov	r3, r2
 8000e4e:	80bb      	strh	r3, [r7, #4]
	//	This Function initiates the start condition , the address phase and sends the address of
	//	the register in MPU6050 to be read.
	//	Note- The overall delay to read 14 bits of data is 2ms.

	I2C_MasterSendData(&I2C1_Handle,&readAddr,1,MPU6050_ADDRESS_AD0_LOW ,I2C_ENABLE_SR);
 8000e50:	1db9      	adds	r1, r7, #6
 8000e52:	2301      	movs	r3, #1
 8000e54:	9300      	str	r3, [sp, #0]
 8000e56:	2368      	movs	r3, #104	; 0x68
 8000e58:	2201      	movs	r2, #1
 8000e5a:	4808      	ldr	r0, [pc, #32]	; (8000e7c <MPU6050_I2C_BufferRead+0x44>)
 8000e5c:	f000 fe10 	bl	8001a80 <I2C_MasterSendData>

	//	2) Reads data from the particular register into the buffer.
	I2C_MasterReceiveData(&I2C1_Handle,pBuffer,NumByteToRead,MPU6050_ADDRESS_AD0_LOW ,I2C_DISABLE_SR);
 8000e60:	88bb      	ldrh	r3, [r7, #4]
 8000e62:	b2da      	uxtb	r2, r3
 8000e64:	2300      	movs	r3, #0
 8000e66:	9300      	str	r3, [sp, #0]
 8000e68:	2368      	movs	r3, #104	; 0x68
 8000e6a:	6839      	ldr	r1, [r7, #0]
 8000e6c:	4803      	ldr	r0, [pc, #12]	; (8000e7c <MPU6050_I2C_BufferRead+0x44>)
 8000e6e:	f000 fe6a 	bl	8001b46 <I2C_MasterReceiveData>

}
 8000e72:	bf00      	nop
 8000e74:	3708      	adds	r7, #8
 8000e76:	46bd      	mov	sp, r7
 8000e78:	bd80      	pop	{r7, pc}
 8000e7a:	bf00      	nop
 8000e7c:	200002d0 	.word	0x200002d0

08000e80 <MPU6050_Initialize>:
 */



void MPU6050_Initialize()
{
 8000e80:	b580      	push	{r7, lr}
 8000e82:	af00      	add	r7, sp, #0
    MPU6050_SetClockSource(MPU6050_CLOCK_PLL_XGYRO);
 8000e84:	2001      	movs	r0, #1
 8000e86:	f000 f80b 	bl	8000ea0 <MPU6050_SetClockSource>
    MPU6050_SetFullScaleGyroRange(MPU6050_GYRO_FS_250);
 8000e8a:	2000      	movs	r0, #0
 8000e8c:	f000 f819 	bl	8000ec2 <MPU6050_SetFullScaleGyroRange>
    MPU6050_SetFullScaleAccelRange(MPU6050_ACCEL_FS_2);
 8000e90:	2000      	movs	r0, #0
 8000e92:	f000 f827 	bl	8000ee4 <MPU6050_SetFullScaleAccelRange>
    MPU6050_SetSleepModeStatus(DISABLE);
 8000e96:	2000      	movs	r0, #0
 8000e98:	f000 f835 	bl	8000f06 <MPU6050_SetSleepModeStatus>
}
 8000e9c:	bf00      	nop
 8000e9e:	bd80      	pop	{r7, pc}

08000ea0 <MPU6050_SetClockSource>:
 * @see MPU6050_RA_PWR_MGMT_1
 * @see MPU6050_PWR1_CLKSEL_BIT
 * @see MPU6050_PWR1_CLKSEL_LENGTH
 */
void MPU6050_SetClockSource(uint8_t source)
{
 8000ea0:	b580      	push	{r7, lr}
 8000ea2:	b084      	sub	sp, #16
 8000ea4:	af02      	add	r7, sp, #8
 8000ea6:	4603      	mov	r3, r0
 8000ea8:	71fb      	strb	r3, [r7, #7]
    MPU6050_WriteBits(MPU6050_DEFAULT_ADDRESS, MPU6050_RA_PWR_MGMT_1, MPU6050_PWR1_CLKSEL_BIT, MPU6050_PWR1_CLKSEL_LENGTH, source);
 8000eaa:	79fb      	ldrb	r3, [r7, #7]
 8000eac:	9300      	str	r3, [sp, #0]
 8000eae:	2303      	movs	r3, #3
 8000eb0:	2202      	movs	r2, #2
 8000eb2:	216b      	movs	r1, #107	; 0x6b
 8000eb4:	20d0      	movs	r0, #208	; 0xd0
 8000eb6:	f000 f88d 	bl	8000fd4 <MPU6050_WriteBits>
}
 8000eba:	bf00      	nop
 8000ebc:	3708      	adds	r7, #8
 8000ebe:	46bd      	mov	sp, r7
 8000ec0:	bd80      	pop	{r7, pc}

08000ec2 <MPU6050_SetFullScaleGyroRange>:
 * @see MPU6050_RA_GYRO_CONFIG
 * @see MPU6050_GCONFIG_FS_SEL_BIT
 * @see MPU6050_GCONFIG_FS_SEL_LENGTH
 */
void MPU6050_SetFullScaleGyroRange(uint8_t range)
{
 8000ec2:	b580      	push	{r7, lr}
 8000ec4:	b084      	sub	sp, #16
 8000ec6:	af02      	add	r7, sp, #8
 8000ec8:	4603      	mov	r3, r0
 8000eca:	71fb      	strb	r3, [r7, #7]
    MPU6050_WriteBits(MPU6050_DEFAULT_ADDRESS, MPU6050_RA_GYRO_CONFIG, MPU6050_GCONFIG_FS_SEL_BIT, MPU6050_GCONFIG_FS_SEL_LENGTH, range);
 8000ecc:	79fb      	ldrb	r3, [r7, #7]
 8000ece:	9300      	str	r3, [sp, #0]
 8000ed0:	2302      	movs	r3, #2
 8000ed2:	2204      	movs	r2, #4
 8000ed4:	211b      	movs	r1, #27
 8000ed6:	20d0      	movs	r0, #208	; 0xd0
 8000ed8:	f000 f87c 	bl	8000fd4 <MPU6050_WriteBits>
}
 8000edc:	bf00      	nop
 8000ede:	3708      	adds	r7, #8
 8000ee0:	46bd      	mov	sp, r7
 8000ee2:	bd80      	pop	{r7, pc}

08000ee4 <MPU6050_SetFullScaleAccelRange>:
/** Set full-scale accelerometer range.
 * @param range New full-scale accelerometer range setting
 * @see MPU6050_GetFullScaleAccelRange()
 */
void MPU6050_SetFullScaleAccelRange(uint8_t range)
{
 8000ee4:	b580      	push	{r7, lr}
 8000ee6:	b084      	sub	sp, #16
 8000ee8:	af02      	add	r7, sp, #8
 8000eea:	4603      	mov	r3, r0
 8000eec:	71fb      	strb	r3, [r7, #7]
    MPU6050_WriteBits(MPU6050_DEFAULT_ADDRESS, MPU6050_RA_ACCEL_CONFIG, MPU6050_ACONFIG_AFS_SEL_BIT, MPU6050_ACONFIG_AFS_SEL_LENGTH, range);
 8000eee:	79fb      	ldrb	r3, [r7, #7]
 8000ef0:	9300      	str	r3, [sp, #0]
 8000ef2:	2302      	movs	r3, #2
 8000ef4:	2204      	movs	r2, #4
 8000ef6:	211c      	movs	r1, #28
 8000ef8:	20d0      	movs	r0, #208	; 0xd0
 8000efa:	f000 f86b 	bl	8000fd4 <MPU6050_WriteBits>
}
 8000efe:	bf00      	nop
 8000f00:	3708      	adds	r7, #8
 8000f02:	46bd      	mov	sp, r7
 8000f04:	bd80      	pop	{r7, pc}

08000f06 <MPU6050_SetSleepModeStatus>:
 * @see MPU6050_GetSleepModeStatus()
 * @see MPU6050_RA_PWR_MGMT_1
 * @see MPU6050_PWR1_SLEEP_BIT
 */
void MPU6050_SetSleepModeStatus(uint8_t NewState)
{
 8000f06:	b580      	push	{r7, lr}
 8000f08:	b082      	sub	sp, #8
 8000f0a:	af00      	add	r7, sp, #0
 8000f0c:	4603      	mov	r3, r0
 8000f0e:	71fb      	strb	r3, [r7, #7]
    MPU6050_WriteBit(MPU6050_DEFAULT_ADDRESS, MPU6050_RA_PWR_MGMT_1, MPU6050_PWR1_SLEEP_BIT, NewState);
 8000f10:	79fb      	ldrb	r3, [r7, #7]
 8000f12:	2206      	movs	r2, #6
 8000f14:	216b      	movs	r1, #107	; 0x6b
 8000f16:	20d0      	movs	r0, #208	; 0xd0
 8000f18:	f000 f8a9 	bl	800106e <MPU6050_WriteBit>
}
 8000f1c:	bf00      	nop
 8000f1e:	3708      	adds	r7, #8
 8000f20:	46bd      	mov	sp, r7
 8000f22:	bd80      	pop	{r7, pc}

08000f24 <MPU6050_GetRawAccelGyro>:
 * Retrieves all currently available motion sensor values.
 * @param AccelGyro 16-bit signed integer array of length 6
 * @see MPU6050_RA_ACCEL_XOUT_H
 */
void MPU6050_GetRawAccelGyro(int16_t* AccelGyro)
{
 8000f24:	b580      	push	{r7, lr}
 8000f26:	b086      	sub	sp, #24
 8000f28:	af00      	add	r7, sp, #0
 8000f2a:	6078      	str	r0, [r7, #4]
    uint8_t tmpBuffer[14],i;
    MPU6050_I2C_BufferRead(MPU6050_DEFAULT_ADDRESS, tmpBuffer, MPU6050_RA_ACCEL_XOUT_H, 14);
 8000f2c:	f107 0108 	add.w	r1, r7, #8
 8000f30:	230e      	movs	r3, #14
 8000f32:	223b      	movs	r2, #59	; 0x3b
 8000f34:	20d0      	movs	r0, #208	; 0xd0
 8000f36:	f7ff ff7f 	bl	8000e38 <MPU6050_I2C_BufferRead>
    /* Get acceleration */
    for(i=0; i<3; i++)
 8000f3a:	2300      	movs	r3, #0
 8000f3c:	75fb      	strb	r3, [r7, #23]
 8000f3e:	e01c      	b.n	8000f7a <MPU6050_GetRawAccelGyro+0x56>
      AccelGyro[i]=((int16_t)((uint16_t)tmpBuffer[2*i] << 8) + tmpBuffer[2*i+1]);
 8000f40:	7dfb      	ldrb	r3, [r7, #23]
 8000f42:	005b      	lsls	r3, r3, #1
 8000f44:	f107 0218 	add.w	r2, r7, #24
 8000f48:	4413      	add	r3, r2
 8000f4a:	f813 3c10 	ldrb.w	r3, [r3, #-16]
 8000f4e:	021b      	lsls	r3, r3, #8
 8000f50:	b29a      	uxth	r2, r3
 8000f52:	7dfb      	ldrb	r3, [r7, #23]
 8000f54:	005b      	lsls	r3, r3, #1
 8000f56:	3301      	adds	r3, #1
 8000f58:	f107 0118 	add.w	r1, r7, #24
 8000f5c:	440b      	add	r3, r1
 8000f5e:	f813 3c10 	ldrb.w	r3, [r3, #-16]
 8000f62:	b29b      	uxth	r3, r3
 8000f64:	4413      	add	r3, r2
 8000f66:	b299      	uxth	r1, r3
 8000f68:	7dfb      	ldrb	r3, [r7, #23]
 8000f6a:	005b      	lsls	r3, r3, #1
 8000f6c:	687a      	ldr	r2, [r7, #4]
 8000f6e:	4413      	add	r3, r2
 8000f70:	b20a      	sxth	r2, r1
 8000f72:	801a      	strh	r2, [r3, #0]
    for(i=0; i<3; i++)
 8000f74:	7dfb      	ldrb	r3, [r7, #23]
 8000f76:	3301      	adds	r3, #1
 8000f78:	75fb      	strb	r3, [r7, #23]
 8000f7a:	7dfb      	ldrb	r3, [r7, #23]
 8000f7c:	2b02      	cmp	r3, #2
 8000f7e:	d9df      	bls.n	8000f40 <MPU6050_GetRawAccelGyro+0x1c>
   /* Get Angular rate */
    for(i=4; i<7; i++)
 8000f80:	2304      	movs	r3, #4
 8000f82:	75fb      	strb	r3, [r7, #23]
 8000f84:	e01f      	b.n	8000fc6 <MPU6050_GetRawAccelGyro+0xa2>
      AccelGyro[i-1]=((int16_t)((uint16_t)tmpBuffer[2*i] << 8) + tmpBuffer[2*i+1]);
 8000f86:	7dfb      	ldrb	r3, [r7, #23]
 8000f88:	005b      	lsls	r3, r3, #1
 8000f8a:	f107 0218 	add.w	r2, r7, #24
 8000f8e:	4413      	add	r3, r2
 8000f90:	f813 3c10 	ldrb.w	r3, [r3, #-16]
 8000f94:	021b      	lsls	r3, r3, #8
 8000f96:	b29a      	uxth	r2, r3
 8000f98:	7dfb      	ldrb	r3, [r7, #23]
 8000f9a:	005b      	lsls	r3, r3, #1
 8000f9c:	3301      	adds	r3, #1
 8000f9e:	f107 0118 	add.w	r1, r7, #24
 8000fa2:	440b      	add	r3, r1
 8000fa4:	f813 3c10 	ldrb.w	r3, [r3, #-16]
 8000fa8:	b29b      	uxth	r3, r3
 8000faa:	4413      	add	r3, r2
 8000fac:	b299      	uxth	r1, r3
 8000fae:	7dfb      	ldrb	r3, [r7, #23]
 8000fb0:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 8000fb4:	3b01      	subs	r3, #1
 8000fb6:	005b      	lsls	r3, r3, #1
 8000fb8:	687a      	ldr	r2, [r7, #4]
 8000fba:	4413      	add	r3, r2
 8000fbc:	b20a      	sxth	r2, r1
 8000fbe:	801a      	strh	r2, [r3, #0]
    for(i=4; i<7; i++)
 8000fc0:	7dfb      	ldrb	r3, [r7, #23]
 8000fc2:	3301      	adds	r3, #1
 8000fc4:	75fb      	strb	r3, [r7, #23]
 8000fc6:	7dfb      	ldrb	r3, [r7, #23]
 8000fc8:	2b06      	cmp	r3, #6
 8000fca:	d9dc      	bls.n	8000f86 <MPU6050_GetRawAccelGyro+0x62>

}
 8000fcc:	bf00      	nop
 8000fce:	3718      	adds	r7, #24
 8000fd0:	46bd      	mov	sp, r7
 8000fd2:	bd80      	pop	{r7, pc}

08000fd4 <MPU6050_WriteBits>:
 * @param bitStart First bit position to write (0-7)
 * @param length Number of bits to write (not more than 8)
 * @param data Right-aligned value to write
 */
void MPU6050_WriteBits(uint8_t slaveAddr, uint8_t regAddr, uint8_t bitStart, uint8_t length, uint8_t data)
{
 8000fd4:	b590      	push	{r4, r7, lr}
 8000fd6:	b085      	sub	sp, #20
 8000fd8:	af00      	add	r7, sp, #0
 8000fda:	4604      	mov	r4, r0
 8000fdc:	4608      	mov	r0, r1
 8000fde:	4611      	mov	r1, r2
 8000fe0:	461a      	mov	r2, r3
 8000fe2:	4623      	mov	r3, r4
 8000fe4:	71fb      	strb	r3, [r7, #7]
 8000fe6:	4603      	mov	r3, r0
 8000fe8:	71bb      	strb	r3, [r7, #6]
 8000fea:	460b      	mov	r3, r1
 8000fec:	717b      	strb	r3, [r7, #5]
 8000fee:	4613      	mov	r3, r2
 8000ff0:	713b      	strb	r3, [r7, #4]
    // 00011100 mask byte
    // 10101111 original value (sample)
    // 10100011 original & ~mask
    // 10101011 masked | value
    uint8_t tmp,mask;
    MPU6050_I2C_BufferRead(slaveAddr, &tmp, regAddr, 1);
 8000ff2:	79ba      	ldrb	r2, [r7, #6]
 8000ff4:	f107 010e 	add.w	r1, r7, #14
 8000ff8:	79f8      	ldrb	r0, [r7, #7]
 8000ffa:	2301      	movs	r3, #1
 8000ffc:	f7ff ff1c 	bl	8000e38 <MPU6050_I2C_BufferRead>
    mask = ((1 << length) - 1) << (bitStart - length + 1);
 8001000:	793b      	ldrb	r3, [r7, #4]
 8001002:	2201      	movs	r2, #1
 8001004:	fa02 f303 	lsl.w	r3, r2, r3
 8001008:	1e5a      	subs	r2, r3, #1
 800100a:	7979      	ldrb	r1, [r7, #5]
 800100c:	793b      	ldrb	r3, [r7, #4]
 800100e:	1acb      	subs	r3, r1, r3
 8001010:	3301      	adds	r3, #1
 8001012:	fa02 f303 	lsl.w	r3, r2, r3
 8001016:	73fb      	strb	r3, [r7, #15]
    data <<= (bitStart - length + 1); // shift data into correct position
 8001018:	f897 2020 	ldrb.w	r2, [r7, #32]
 800101c:	7979      	ldrb	r1, [r7, #5]
 800101e:	793b      	ldrb	r3, [r7, #4]
 8001020:	1acb      	subs	r3, r1, r3
 8001022:	3301      	adds	r3, #1
 8001024:	fa02 f303 	lsl.w	r3, r2, r3
 8001028:	f887 3020 	strb.w	r3, [r7, #32]
    data &= mask; // zero all non-important bits in data
 800102c:	f897 2020 	ldrb.w	r2, [r7, #32]
 8001030:	7bfb      	ldrb	r3, [r7, #15]
 8001032:	4013      	ands	r3, r2
 8001034:	f887 3020 	strb.w	r3, [r7, #32]
    tmp &= ~(mask); // zero all important bits in existing byte
 8001038:	f997 300f 	ldrsb.w	r3, [r7, #15]
 800103c:	43db      	mvns	r3, r3
 800103e:	b25a      	sxtb	r2, r3
 8001040:	7bbb      	ldrb	r3, [r7, #14]
 8001042:	b25b      	sxtb	r3, r3
 8001044:	4013      	ands	r3, r2
 8001046:	b25b      	sxtb	r3, r3
 8001048:	b2db      	uxtb	r3, r3
 800104a:	73bb      	strb	r3, [r7, #14]
    tmp |= data; // combine data with existing byte
 800104c:	7bba      	ldrb	r2, [r7, #14]
 800104e:	f897 3020 	ldrb.w	r3, [r7, #32]
 8001052:	4313      	orrs	r3, r2
 8001054:	b2db      	uxtb	r3, r3
 8001056:	73bb      	strb	r3, [r7, #14]
    MPU6050_I2C_ByteWrite(slaveAddr,&tmp,regAddr);
 8001058:	79ba      	ldrb	r2, [r7, #6]
 800105a:	f107 010e 	add.w	r1, r7, #14
 800105e:	79fb      	ldrb	r3, [r7, #7]
 8001060:	4618      	mov	r0, r3
 8001062:	f7ff fecb 	bl	8000dfc <MPU6050_I2C_ByteWrite>
}
 8001066:	bf00      	nop
 8001068:	3714      	adds	r7, #20
 800106a:	46bd      	mov	sp, r7
 800106c:	bd90      	pop	{r4, r7, pc}

0800106e <MPU6050_WriteBit>:
 * @param regAddr Register regAddr to write to
 * @param bitNum Bit position to write (0-7)
 * @param value New bit value to write
 */
void MPU6050_WriteBit(uint8_t slaveAddr, uint8_t regAddr, uint8_t bitNum, uint8_t data)
{
 800106e:	b590      	push	{r4, r7, lr}
 8001070:	b085      	sub	sp, #20
 8001072:	af00      	add	r7, sp, #0
 8001074:	4604      	mov	r4, r0
 8001076:	4608      	mov	r0, r1
 8001078:	4611      	mov	r1, r2
 800107a:	461a      	mov	r2, r3
 800107c:	4623      	mov	r3, r4
 800107e:	71fb      	strb	r3, [r7, #7]
 8001080:	4603      	mov	r3, r0
 8001082:	71bb      	strb	r3, [r7, #6]
 8001084:	460b      	mov	r3, r1
 8001086:	717b      	strb	r3, [r7, #5]
 8001088:	4613      	mov	r3, r2
 800108a:	713b      	strb	r3, [r7, #4]
    uint8_t tmp;
    MPU6050_I2C_BufferRead(slaveAddr, &tmp, regAddr, 1);
 800108c:	79ba      	ldrb	r2, [r7, #6]
 800108e:	f107 010f 	add.w	r1, r7, #15
 8001092:	79f8      	ldrb	r0, [r7, #7]
 8001094:	2301      	movs	r3, #1
 8001096:	f7ff fecf 	bl	8000e38 <MPU6050_I2C_BufferRead>
    tmp = (data != 0) ? (tmp | (1 << bitNum)) : (tmp & ~(1 << bitNum));
 800109a:	793b      	ldrb	r3, [r7, #4]
 800109c:	2b00      	cmp	r3, #0
 800109e:	d00a      	beq.n	80010b6 <MPU6050_WriteBit+0x48>
 80010a0:	797b      	ldrb	r3, [r7, #5]
 80010a2:	2201      	movs	r2, #1
 80010a4:	fa02 f303 	lsl.w	r3, r2, r3
 80010a8:	b25a      	sxtb	r2, r3
 80010aa:	7bfb      	ldrb	r3, [r7, #15]
 80010ac:	b25b      	sxtb	r3, r3
 80010ae:	4313      	orrs	r3, r2
 80010b0:	b25b      	sxtb	r3, r3
 80010b2:	b2db      	uxtb	r3, r3
 80010b4:	e00b      	b.n	80010ce <MPU6050_WriteBit+0x60>
 80010b6:	797b      	ldrb	r3, [r7, #5]
 80010b8:	2201      	movs	r2, #1
 80010ba:	fa02 f303 	lsl.w	r3, r2, r3
 80010be:	b25b      	sxtb	r3, r3
 80010c0:	43db      	mvns	r3, r3
 80010c2:	b25a      	sxtb	r2, r3
 80010c4:	7bfb      	ldrb	r3, [r7, #15]
 80010c6:	b25b      	sxtb	r3, r3
 80010c8:	4013      	ands	r3, r2
 80010ca:	b25b      	sxtb	r3, r3
 80010cc:	b2db      	uxtb	r3, r3
 80010ce:	73fb      	strb	r3, [r7, #15]
    MPU6050_I2C_ByteWrite(slaveAddr,&tmp,regAddr);
 80010d0:	79ba      	ldrb	r2, [r7, #6]
 80010d2:	f107 010f 	add.w	r1, r7, #15
 80010d6:	79fb      	ldrb	r3, [r7, #7]
 80010d8:	4618      	mov	r0, r3
 80010da:	f7ff fe8f 	bl	8000dfc <MPU6050_I2C_ByteWrite>
}
 80010de:	bf00      	nop
 80010e0:	3714      	adds	r7, #20
 80010e2:	46bd      	mov	sp, r7
 80010e4:	bd90      	pop	{r4, r7, pc}
	...

080010e8 <_sbrk>:
/**
 _sbrk
 Increase program data space. Malloc and related functions depend on this
**/
caddr_t _sbrk(int incr)
{
 80010e8:	b580      	push	{r7, lr}
 80010ea:	b084      	sub	sp, #16
 80010ec:	af00      	add	r7, sp, #0
 80010ee:	6078      	str	r0, [r7, #4]
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 80010f0:	4b11      	ldr	r3, [pc, #68]	; (8001138 <_sbrk+0x50>)
 80010f2:	681b      	ldr	r3, [r3, #0]
 80010f4:	2b00      	cmp	r3, #0
 80010f6:	d102      	bne.n	80010fe <_sbrk+0x16>
		heap_end = &end;
 80010f8:	4b0f      	ldr	r3, [pc, #60]	; (8001138 <_sbrk+0x50>)
 80010fa:	4a10      	ldr	r2, [pc, #64]	; (800113c <_sbrk+0x54>)
 80010fc:	601a      	str	r2, [r3, #0]

	prev_heap_end = heap_end;
 80010fe:	4b0e      	ldr	r3, [pc, #56]	; (8001138 <_sbrk+0x50>)
 8001100:	681b      	ldr	r3, [r3, #0]
 8001102:	60fb      	str	r3, [r7, #12]
	if (heap_end + incr > stack_ptr)
 8001104:	4b0c      	ldr	r3, [pc, #48]	; (8001138 <_sbrk+0x50>)
 8001106:	681a      	ldr	r2, [r3, #0]
 8001108:	687b      	ldr	r3, [r7, #4]
 800110a:	4413      	add	r3, r2
 800110c:	466a      	mov	r2, sp
 800110e:	4293      	cmp	r3, r2
 8001110:	d907      	bls.n	8001122 <_sbrk+0x3a>
	{
		errno = ENOMEM;
 8001112:	f000 fdd9 	bl	8001cc8 <__errno>
 8001116:	4602      	mov	r2, r0
 8001118:	230c      	movs	r3, #12
 800111a:	6013      	str	r3, [r2, #0]
		return (caddr_t) -1;
 800111c:	f04f 33ff 	mov.w	r3, #4294967295
 8001120:	e006      	b.n	8001130 <_sbrk+0x48>
	}

	heap_end += incr;
 8001122:	4b05      	ldr	r3, [pc, #20]	; (8001138 <_sbrk+0x50>)
 8001124:	681a      	ldr	r2, [r3, #0]
 8001126:	687b      	ldr	r3, [r7, #4]
 8001128:	4413      	add	r3, r2
 800112a:	4a03      	ldr	r2, [pc, #12]	; (8001138 <_sbrk+0x50>)
 800112c:	6013      	str	r3, [r2, #0]

	return (caddr_t) prev_heap_end;
 800112e:	68fb      	ldr	r3, [r7, #12]
}
 8001130:	4618      	mov	r0, r3
 8001132:	3710      	adds	r7, #16
 8001134:	46bd      	mov	sp, r7
 8001136:	bd80      	pop	{r7, pc}
 8001138:	20000214 	.word	0x20000214
 800113c:	20000300 	.word	0x20000300

08001140 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8001140:	480d      	ldr	r0, [pc, #52]	; (8001178 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8001142:	4685      	mov	sp, r0

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8001144:	480d      	ldr	r0, [pc, #52]	; (800117c <LoopForever+0x6>)
  ldr r1, =_edata
 8001146:	490e      	ldr	r1, [pc, #56]	; (8001180 <LoopForever+0xa>)
  ldr r2, =_sidata
 8001148:	4a0e      	ldr	r2, [pc, #56]	; (8001184 <LoopForever+0xe>)
  movs r3, #0
 800114a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800114c:	e002      	b.n	8001154 <LoopCopyDataInit>

0800114e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800114e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8001150:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8001152:	3304      	adds	r3, #4

08001154 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8001154:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8001156:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8001158:	d3f9      	bcc.n	800114e <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800115a:	4a0b      	ldr	r2, [pc, #44]	; (8001188 <LoopForever+0x12>)
  ldr r4, =_ebss
 800115c:	4c0b      	ldr	r4, [pc, #44]	; (800118c <LoopForever+0x16>)
  movs r3, #0
 800115e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8001160:	e001      	b.n	8001166 <LoopFillZerobss>

08001162 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8001162:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8001164:	3204      	adds	r2, #4

08001166 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8001166:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8001168:	d3fb      	bcc.n	8001162 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit
 800116a:	f3af 8000 	nop.w
/* Call static constructors */
  bl __libc_init_array
 800116e:	f000 fdb1 	bl	8001cd4 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8001172:	f7ff fe05 	bl	8000d80 <main>

08001176 <LoopForever>:

LoopForever:
    b LoopForever
 8001176:	e7fe      	b.n	8001176 <LoopForever>
  ldr   r0, =_estack
 8001178:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 800117c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8001180:	200001ec 	.word	0x200001ec
  ldr r2, =_sidata
 8001184:	08006a60 	.word	0x08006a60
  ldr r2, =_sbss
 8001188:	200001ec 	.word	0x200001ec
  ldr r4, =_ebss
 800118c:	200002fc 	.word	0x200002fc

08001190 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8001190:	e7fe      	b.n	8001190 <ADC_IRQHandler>
	...

08001194 <GPIO_PeriClockControl>:
 * @return            -  none
 *
 * @Note              -  none
 */
void GPIO_PeriClockControl(GPIO_RegDef_t *pGPIOx, uint8_t EnorDi)
{
 8001194:	b480      	push	{r7}
 8001196:	b083      	sub	sp, #12
 8001198:	af00      	add	r7, sp, #0
 800119a:	6078      	str	r0, [r7, #4]
 800119c:	460b      	mov	r3, r1
 800119e:	70fb      	strb	r3, [r7, #3]
	if(EnorDi == ENABLE)
 80011a0:	78fb      	ldrb	r3, [r7, #3]
 80011a2:	2b01      	cmp	r3, #1
 80011a4:	d162      	bne.n	800126c <GPIO_PeriClockControl+0xd8>
	{
		if(pGPIOx == GPIOA)
 80011a6:	687b      	ldr	r3, [r7, #4]
 80011a8:	4a5e      	ldr	r2, [pc, #376]	; (8001324 <GPIO_PeriClockControl+0x190>)
 80011aa:	4293      	cmp	r3, r2
 80011ac:	d106      	bne.n	80011bc <GPIO_PeriClockControl+0x28>
		{
			GPIOA_PCLK_EN();
 80011ae:	4b5e      	ldr	r3, [pc, #376]	; (8001328 <GPIO_PeriClockControl+0x194>)
 80011b0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80011b2:	4a5d      	ldr	r2, [pc, #372]	; (8001328 <GPIO_PeriClockControl+0x194>)
 80011b4:	f043 0301 	orr.w	r3, r3, #1
 80011b8:	6313      	str	r3, [r2, #48]	; 0x30
		{
			GPIOH_PCLK_DI();
		}
	}

}
 80011ba:	e0ae      	b.n	800131a <GPIO_PeriClockControl+0x186>
		}else if (pGPIOx == GPIOB)
 80011bc:	687b      	ldr	r3, [r7, #4]
 80011be:	4a5b      	ldr	r2, [pc, #364]	; (800132c <GPIO_PeriClockControl+0x198>)
 80011c0:	4293      	cmp	r3, r2
 80011c2:	d106      	bne.n	80011d2 <GPIO_PeriClockControl+0x3e>
			GPIOB_PCLK_EN();
 80011c4:	4b58      	ldr	r3, [pc, #352]	; (8001328 <GPIO_PeriClockControl+0x194>)
 80011c6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80011c8:	4a57      	ldr	r2, [pc, #348]	; (8001328 <GPIO_PeriClockControl+0x194>)
 80011ca:	f043 0302 	orr.w	r3, r3, #2
 80011ce:	6313      	str	r3, [r2, #48]	; 0x30
}
 80011d0:	e0a3      	b.n	800131a <GPIO_PeriClockControl+0x186>
		}else if (pGPIOx == GPIOC)
 80011d2:	687b      	ldr	r3, [r7, #4]
 80011d4:	4a56      	ldr	r2, [pc, #344]	; (8001330 <GPIO_PeriClockControl+0x19c>)
 80011d6:	4293      	cmp	r3, r2
 80011d8:	d106      	bne.n	80011e8 <GPIO_PeriClockControl+0x54>
			GPIOC_PCLK_EN();
 80011da:	4b53      	ldr	r3, [pc, #332]	; (8001328 <GPIO_PeriClockControl+0x194>)
 80011dc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80011de:	4a52      	ldr	r2, [pc, #328]	; (8001328 <GPIO_PeriClockControl+0x194>)
 80011e0:	f043 0304 	orr.w	r3, r3, #4
 80011e4:	6313      	str	r3, [r2, #48]	; 0x30
}
 80011e6:	e098      	b.n	800131a <GPIO_PeriClockControl+0x186>
		}else if (pGPIOx == GPIOD)
 80011e8:	687b      	ldr	r3, [r7, #4]
 80011ea:	4a52      	ldr	r2, [pc, #328]	; (8001334 <GPIO_PeriClockControl+0x1a0>)
 80011ec:	4293      	cmp	r3, r2
 80011ee:	d106      	bne.n	80011fe <GPIO_PeriClockControl+0x6a>
			GPIOD_PCLK_EN();
 80011f0:	4b4d      	ldr	r3, [pc, #308]	; (8001328 <GPIO_PeriClockControl+0x194>)
 80011f2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80011f4:	4a4c      	ldr	r2, [pc, #304]	; (8001328 <GPIO_PeriClockControl+0x194>)
 80011f6:	f043 0308 	orr.w	r3, r3, #8
 80011fa:	6313      	str	r3, [r2, #48]	; 0x30
}
 80011fc:	e08d      	b.n	800131a <GPIO_PeriClockControl+0x186>
		}else if (pGPIOx == GPIOE)
 80011fe:	687b      	ldr	r3, [r7, #4]
 8001200:	4a4d      	ldr	r2, [pc, #308]	; (8001338 <GPIO_PeriClockControl+0x1a4>)
 8001202:	4293      	cmp	r3, r2
 8001204:	d106      	bne.n	8001214 <GPIO_PeriClockControl+0x80>
			GPIOE_PCLK_EN();
 8001206:	4b48      	ldr	r3, [pc, #288]	; (8001328 <GPIO_PeriClockControl+0x194>)
 8001208:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800120a:	4a47      	ldr	r2, [pc, #284]	; (8001328 <GPIO_PeriClockControl+0x194>)
 800120c:	f043 0310 	orr.w	r3, r3, #16
 8001210:	6313      	str	r3, [r2, #48]	; 0x30
}
 8001212:	e082      	b.n	800131a <GPIO_PeriClockControl+0x186>
		}else if (pGPIOx == GPIOF)
 8001214:	687b      	ldr	r3, [r7, #4]
 8001216:	4a49      	ldr	r2, [pc, #292]	; (800133c <GPIO_PeriClockControl+0x1a8>)
 8001218:	4293      	cmp	r3, r2
 800121a:	d106      	bne.n	800122a <GPIO_PeriClockControl+0x96>
			GPIOF_PCLK_EN();
 800121c:	4b42      	ldr	r3, [pc, #264]	; (8001328 <GPIO_PeriClockControl+0x194>)
 800121e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001220:	4a41      	ldr	r2, [pc, #260]	; (8001328 <GPIO_PeriClockControl+0x194>)
 8001222:	f043 0320 	orr.w	r3, r3, #32
 8001226:	6313      	str	r3, [r2, #48]	; 0x30
}
 8001228:	e077      	b.n	800131a <GPIO_PeriClockControl+0x186>
		}else if (pGPIOx == GPIOG)
 800122a:	687b      	ldr	r3, [r7, #4]
 800122c:	4a44      	ldr	r2, [pc, #272]	; (8001340 <GPIO_PeriClockControl+0x1ac>)
 800122e:	4293      	cmp	r3, r2
 8001230:	d106      	bne.n	8001240 <GPIO_PeriClockControl+0xac>
			GPIOG_PCLK_EN();
 8001232:	4b3d      	ldr	r3, [pc, #244]	; (8001328 <GPIO_PeriClockControl+0x194>)
 8001234:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001236:	4a3c      	ldr	r2, [pc, #240]	; (8001328 <GPIO_PeriClockControl+0x194>)
 8001238:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800123c:	6313      	str	r3, [r2, #48]	; 0x30
}
 800123e:	e06c      	b.n	800131a <GPIO_PeriClockControl+0x186>
		}else if (pGPIOx == GPIOH)
 8001240:	687b      	ldr	r3, [r7, #4]
 8001242:	4a40      	ldr	r2, [pc, #256]	; (8001344 <GPIO_PeriClockControl+0x1b0>)
 8001244:	4293      	cmp	r3, r2
 8001246:	d106      	bne.n	8001256 <GPIO_PeriClockControl+0xc2>
			GPIOH_PCLK_EN();
 8001248:	4b37      	ldr	r3, [pc, #220]	; (8001328 <GPIO_PeriClockControl+0x194>)
 800124a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800124c:	4a36      	ldr	r2, [pc, #216]	; (8001328 <GPIO_PeriClockControl+0x194>)
 800124e:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8001252:	6313      	str	r3, [r2, #48]	; 0x30
}
 8001254:	e061      	b.n	800131a <GPIO_PeriClockControl+0x186>
		}else if (pGPIOx == GPIOI)
 8001256:	687b      	ldr	r3, [r7, #4]
 8001258:	4a3b      	ldr	r2, [pc, #236]	; (8001348 <GPIO_PeriClockControl+0x1b4>)
 800125a:	4293      	cmp	r3, r2
 800125c:	d15d      	bne.n	800131a <GPIO_PeriClockControl+0x186>
			GPIOI_PCLK_EN();
 800125e:	4b32      	ldr	r3, [pc, #200]	; (8001328 <GPIO_PeriClockControl+0x194>)
 8001260:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001262:	4a31      	ldr	r2, [pc, #196]	; (8001328 <GPIO_PeriClockControl+0x194>)
 8001264:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8001268:	6313      	str	r3, [r2, #48]	; 0x30
}
 800126a:	e056      	b.n	800131a <GPIO_PeriClockControl+0x186>
		if(pGPIOx == GPIOA)
 800126c:	687b      	ldr	r3, [r7, #4]
 800126e:	4a2d      	ldr	r2, [pc, #180]	; (8001324 <GPIO_PeriClockControl+0x190>)
 8001270:	4293      	cmp	r3, r2
 8001272:	d106      	bne.n	8001282 <GPIO_PeriClockControl+0xee>
			GPIOA_PCLK_DI();
 8001274:	4b2c      	ldr	r3, [pc, #176]	; (8001328 <GPIO_PeriClockControl+0x194>)
 8001276:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001278:	4a2b      	ldr	r2, [pc, #172]	; (8001328 <GPIO_PeriClockControl+0x194>)
 800127a:	f023 0301 	bic.w	r3, r3, #1
 800127e:	6313      	str	r3, [r2, #48]	; 0x30
}
 8001280:	e04b      	b.n	800131a <GPIO_PeriClockControl+0x186>
		}else if (pGPIOx == GPIOB)
 8001282:	687b      	ldr	r3, [r7, #4]
 8001284:	4a29      	ldr	r2, [pc, #164]	; (800132c <GPIO_PeriClockControl+0x198>)
 8001286:	4293      	cmp	r3, r2
 8001288:	d106      	bne.n	8001298 <GPIO_PeriClockControl+0x104>
			GPIOB_PCLK_DI();
 800128a:	4b27      	ldr	r3, [pc, #156]	; (8001328 <GPIO_PeriClockControl+0x194>)
 800128c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800128e:	4a26      	ldr	r2, [pc, #152]	; (8001328 <GPIO_PeriClockControl+0x194>)
 8001290:	f023 0302 	bic.w	r3, r3, #2
 8001294:	6313      	str	r3, [r2, #48]	; 0x30
}
 8001296:	e040      	b.n	800131a <GPIO_PeriClockControl+0x186>
		}else if (pGPIOx == GPIOC)
 8001298:	687b      	ldr	r3, [r7, #4]
 800129a:	4a25      	ldr	r2, [pc, #148]	; (8001330 <GPIO_PeriClockControl+0x19c>)
 800129c:	4293      	cmp	r3, r2
 800129e:	d106      	bne.n	80012ae <GPIO_PeriClockControl+0x11a>
			GPIOC_PCLK_DI();
 80012a0:	4b21      	ldr	r3, [pc, #132]	; (8001328 <GPIO_PeriClockControl+0x194>)
 80012a2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80012a4:	4a20      	ldr	r2, [pc, #128]	; (8001328 <GPIO_PeriClockControl+0x194>)
 80012a6:	f023 0304 	bic.w	r3, r3, #4
 80012aa:	6313      	str	r3, [r2, #48]	; 0x30
}
 80012ac:	e035      	b.n	800131a <GPIO_PeriClockControl+0x186>
		}else if (pGPIOx == GPIOD)
 80012ae:	687b      	ldr	r3, [r7, #4]
 80012b0:	4a20      	ldr	r2, [pc, #128]	; (8001334 <GPIO_PeriClockControl+0x1a0>)
 80012b2:	4293      	cmp	r3, r2
 80012b4:	d106      	bne.n	80012c4 <GPIO_PeriClockControl+0x130>
			GPIOD_PCLK_DI();
 80012b6:	4b1c      	ldr	r3, [pc, #112]	; (8001328 <GPIO_PeriClockControl+0x194>)
 80012b8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80012ba:	4a1b      	ldr	r2, [pc, #108]	; (8001328 <GPIO_PeriClockControl+0x194>)
 80012bc:	f023 0308 	bic.w	r3, r3, #8
 80012c0:	6313      	str	r3, [r2, #48]	; 0x30
}
 80012c2:	e02a      	b.n	800131a <GPIO_PeriClockControl+0x186>
		}else if (pGPIOx == GPIOE)
 80012c4:	687b      	ldr	r3, [r7, #4]
 80012c6:	4a1c      	ldr	r2, [pc, #112]	; (8001338 <GPIO_PeriClockControl+0x1a4>)
 80012c8:	4293      	cmp	r3, r2
 80012ca:	d106      	bne.n	80012da <GPIO_PeriClockControl+0x146>
			GPIOE_PCLK_DI();
 80012cc:	4b16      	ldr	r3, [pc, #88]	; (8001328 <GPIO_PeriClockControl+0x194>)
 80012ce:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80012d0:	4a15      	ldr	r2, [pc, #84]	; (8001328 <GPIO_PeriClockControl+0x194>)
 80012d2:	f023 0310 	bic.w	r3, r3, #16
 80012d6:	6313      	str	r3, [r2, #48]	; 0x30
}
 80012d8:	e01f      	b.n	800131a <GPIO_PeriClockControl+0x186>
		}else if (pGPIOx == GPIOF)
 80012da:	687b      	ldr	r3, [r7, #4]
 80012dc:	4a17      	ldr	r2, [pc, #92]	; (800133c <GPIO_PeriClockControl+0x1a8>)
 80012de:	4293      	cmp	r3, r2
 80012e0:	d106      	bne.n	80012f0 <GPIO_PeriClockControl+0x15c>
			GPIOF_PCLK_DI();
 80012e2:	4b11      	ldr	r3, [pc, #68]	; (8001328 <GPIO_PeriClockControl+0x194>)
 80012e4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80012e6:	4a10      	ldr	r2, [pc, #64]	; (8001328 <GPIO_PeriClockControl+0x194>)
 80012e8:	f023 0320 	bic.w	r3, r3, #32
 80012ec:	6313      	str	r3, [r2, #48]	; 0x30
}
 80012ee:	e014      	b.n	800131a <GPIO_PeriClockControl+0x186>
		}else if (pGPIOx == GPIOG)
 80012f0:	687b      	ldr	r3, [r7, #4]
 80012f2:	4a13      	ldr	r2, [pc, #76]	; (8001340 <GPIO_PeriClockControl+0x1ac>)
 80012f4:	4293      	cmp	r3, r2
 80012f6:	d106      	bne.n	8001306 <GPIO_PeriClockControl+0x172>
			GPIOG_PCLK_DI();
 80012f8:	4b0b      	ldr	r3, [pc, #44]	; (8001328 <GPIO_PeriClockControl+0x194>)
 80012fa:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80012fc:	4a0a      	ldr	r2, [pc, #40]	; (8001328 <GPIO_PeriClockControl+0x194>)
 80012fe:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8001302:	6313      	str	r3, [r2, #48]	; 0x30
}
 8001304:	e009      	b.n	800131a <GPIO_PeriClockControl+0x186>
		}else if (pGPIOx == GPIOH)
 8001306:	687b      	ldr	r3, [r7, #4]
 8001308:	4a0e      	ldr	r2, [pc, #56]	; (8001344 <GPIO_PeriClockControl+0x1b0>)
 800130a:	4293      	cmp	r3, r2
 800130c:	d105      	bne.n	800131a <GPIO_PeriClockControl+0x186>
			GPIOH_PCLK_DI();
 800130e:	4b06      	ldr	r3, [pc, #24]	; (8001328 <GPIO_PeriClockControl+0x194>)
 8001310:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001312:	4a05      	ldr	r2, [pc, #20]	; (8001328 <GPIO_PeriClockControl+0x194>)
 8001314:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8001318:	6313      	str	r3, [r2, #48]	; 0x30
}
 800131a:	bf00      	nop
 800131c:	370c      	adds	r7, #12
 800131e:	46bd      	mov	sp, r7
 8001320:	bc80      	pop	{r7}
 8001322:	4770      	bx	lr
 8001324:	40020000 	.word	0x40020000
 8001328:	40023800 	.word	0x40023800
 800132c:	40020400 	.word	0x40020400
 8001330:	40020800 	.word	0x40020800
 8001334:	40020c00 	.word	0x40020c00
 8001338:	40021000 	.word	0x40021000
 800133c:	40021400 	.word	0x40021400
 8001340:	40021800 	.word	0x40021800
 8001344:	40021c00 	.word	0x40021c00
 8001348:	40022000 	.word	0x40022000

0800134c <GPIO_Init>:
 * @return            -
 *
 * @Note              -
 */
void GPIO_Init(GPIO_Handle_t *pGPIOHandle)
{
 800134c:	b580      	push	{r7, lr}
 800134e:	b086      	sub	sp, #24
 8001350:	af00      	add	r7, sp, #0
 8001352:	6078      	str	r0, [r7, #4]
	 uint32_t temp=0; //temp. register
 8001354:	2300      	movs	r3, #0
 8001356:	617b      	str	r3, [r7, #20]

	 //enable the peripheral clock

	 GPIO_PeriClockControl(pGPIOHandle->pGPIOx, ENABLE);
 8001358:	687b      	ldr	r3, [r7, #4]
 800135a:	681b      	ldr	r3, [r3, #0]
 800135c:	2101      	movs	r1, #1
 800135e:	4618      	mov	r0, r3
 8001360:	f7ff ff18 	bl	8001194 <GPIO_PeriClockControl>

	//1 . configure the mode of gpio pin

	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG)
 8001364:	687b      	ldr	r3, [r7, #4]
 8001366:	795b      	ldrb	r3, [r3, #5]
 8001368:	2b03      	cmp	r3, #3
 800136a:	d820      	bhi.n	80013ae <GPIO_Init+0x62>
	{
		//the non interrupt mode
		temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber ) );
 800136c:	687b      	ldr	r3, [r7, #4]
 800136e:	795b      	ldrb	r3, [r3, #5]
 8001370:	461a      	mov	r2, r3
 8001372:	687b      	ldr	r3, [r7, #4]
 8001374:	791b      	ldrb	r3, [r3, #4]
 8001376:	005b      	lsls	r3, r3, #1
 8001378:	fa02 f303 	lsl.w	r3, r2, r3
 800137c:	617b      	str	r3, [r7, #20]
		pGPIOHandle->pGPIOx->MODER &= ~( 0x3 << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)); //clearing
 800137e:	687b      	ldr	r3, [r7, #4]
 8001380:	681b      	ldr	r3, [r3, #0]
 8001382:	681a      	ldr	r2, [r3, #0]
 8001384:	687b      	ldr	r3, [r7, #4]
 8001386:	791b      	ldrb	r3, [r3, #4]
 8001388:	005b      	lsls	r3, r3, #1
 800138a:	2103      	movs	r1, #3
 800138c:	fa01 f303 	lsl.w	r3, r1, r3
 8001390:	43db      	mvns	r3, r3
 8001392:	4619      	mov	r1, r3
 8001394:	687b      	ldr	r3, [r7, #4]
 8001396:	681b      	ldr	r3, [r3, #0]
 8001398:	400a      	ands	r2, r1
 800139a:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIOx->MODER |= temp; //setting
 800139c:	687b      	ldr	r3, [r7, #4]
 800139e:	681b      	ldr	r3, [r3, #0]
 80013a0:	6819      	ldr	r1, [r3, #0]
 80013a2:	687b      	ldr	r3, [r7, #4]
 80013a4:	681b      	ldr	r3, [r3, #0]
 80013a6:	697a      	ldr	r2, [r7, #20]
 80013a8:	430a      	orrs	r2, r1
 80013aa:	601a      	str	r2, [r3, #0]
 80013ac:	e0c1      	b.n	8001532 <GPIO_Init+0x1e6>

	}

	else
	{
		if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_FT)
 80013ae:	687b      	ldr	r3, [r7, #4]
 80013b0:	795b      	ldrb	r3, [r3, #5]
 80013b2:	2b04      	cmp	r3, #4
 80013b4:	d117      	bne.n	80013e6 <GPIO_Init+0x9a>
		{
			// 1. Configure the FTSR
			EXTI->FTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80013b6:	4b47      	ldr	r3, [pc, #284]	; (80014d4 <GPIO_Init+0x188>)
 80013b8:	68db      	ldr	r3, [r3, #12]
 80013ba:	687a      	ldr	r2, [r7, #4]
 80013bc:	7912      	ldrb	r2, [r2, #4]
 80013be:	4611      	mov	r1, r2
 80013c0:	2201      	movs	r2, #1
 80013c2:	408a      	lsls	r2, r1
 80013c4:	4611      	mov	r1, r2
 80013c6:	4a43      	ldr	r2, [pc, #268]	; (80014d4 <GPIO_Init+0x188>)
 80013c8:	430b      	orrs	r3, r1
 80013ca:	60d3      	str	r3, [r2, #12]
			// Clear corresponding RTSR bit.
			EXTI->RTSR &= ~(1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80013cc:	4b41      	ldr	r3, [pc, #260]	; (80014d4 <GPIO_Init+0x188>)
 80013ce:	689b      	ldr	r3, [r3, #8]
 80013d0:	687a      	ldr	r2, [r7, #4]
 80013d2:	7912      	ldrb	r2, [r2, #4]
 80013d4:	4611      	mov	r1, r2
 80013d6:	2201      	movs	r2, #1
 80013d8:	408a      	lsls	r2, r1
 80013da:	43d2      	mvns	r2, r2
 80013dc:	4611      	mov	r1, r2
 80013de:	4a3d      	ldr	r2, [pc, #244]	; (80014d4 <GPIO_Init+0x188>)
 80013e0:	400b      	ands	r3, r1
 80013e2:	6093      	str	r3, [r2, #8]
 80013e4:	e035      	b.n	8001452 <GPIO_Init+0x106>
		}

		else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RT)
 80013e6:	687b      	ldr	r3, [r7, #4]
 80013e8:	795b      	ldrb	r3, [r3, #5]
 80013ea:	2b05      	cmp	r3, #5
 80013ec:	d117      	bne.n	800141e <GPIO_Init+0xd2>
		{
			// 1. Configure RTSR
			EXTI->RTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80013ee:	4b39      	ldr	r3, [pc, #228]	; (80014d4 <GPIO_Init+0x188>)
 80013f0:	689b      	ldr	r3, [r3, #8]
 80013f2:	687a      	ldr	r2, [r7, #4]
 80013f4:	7912      	ldrb	r2, [r2, #4]
 80013f6:	4611      	mov	r1, r2
 80013f8:	2201      	movs	r2, #1
 80013fa:	408a      	lsls	r2, r1
 80013fc:	4611      	mov	r1, r2
 80013fe:	4a35      	ldr	r2, [pc, #212]	; (80014d4 <GPIO_Init+0x188>)
 8001400:	430b      	orrs	r3, r1
 8001402:	6093      	str	r3, [r2, #8]
			// Clear corresponding RTSR bit.
			EXTI->FTSR &= ~(1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8001404:	4b33      	ldr	r3, [pc, #204]	; (80014d4 <GPIO_Init+0x188>)
 8001406:	68db      	ldr	r3, [r3, #12]
 8001408:	687a      	ldr	r2, [r7, #4]
 800140a:	7912      	ldrb	r2, [r2, #4]
 800140c:	4611      	mov	r1, r2
 800140e:	2201      	movs	r2, #1
 8001410:	408a      	lsls	r2, r1
 8001412:	43d2      	mvns	r2, r2
 8001414:	4611      	mov	r1, r2
 8001416:	4a2f      	ldr	r2, [pc, #188]	; (80014d4 <GPIO_Init+0x188>)
 8001418:	400b      	ands	r3, r1
 800141a:	60d3      	str	r3, [r2, #12]
 800141c:	e019      	b.n	8001452 <GPIO_Init+0x106>
		}

		else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RFT)
 800141e:	687b      	ldr	r3, [r7, #4]
 8001420:	795b      	ldrb	r3, [r3, #5]
 8001422:	2b06      	cmp	r3, #6
 8001424:	d115      	bne.n	8001452 <GPIO_Init+0x106>
		{
			// 1. COnfigure Both FTSR and RTSR
			EXTI->RTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8001426:	4b2b      	ldr	r3, [pc, #172]	; (80014d4 <GPIO_Init+0x188>)
 8001428:	689b      	ldr	r3, [r3, #8]
 800142a:	687a      	ldr	r2, [r7, #4]
 800142c:	7912      	ldrb	r2, [r2, #4]
 800142e:	4611      	mov	r1, r2
 8001430:	2201      	movs	r2, #1
 8001432:	408a      	lsls	r2, r1
 8001434:	4611      	mov	r1, r2
 8001436:	4a27      	ldr	r2, [pc, #156]	; (80014d4 <GPIO_Init+0x188>)
 8001438:	430b      	orrs	r3, r1
 800143a:	6093      	str	r3, [r2, #8]
			EXTI->FTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800143c:	4b25      	ldr	r3, [pc, #148]	; (80014d4 <GPIO_Init+0x188>)
 800143e:	68db      	ldr	r3, [r3, #12]
 8001440:	687a      	ldr	r2, [r7, #4]
 8001442:	7912      	ldrb	r2, [r2, #4]
 8001444:	4611      	mov	r1, r2
 8001446:	2201      	movs	r2, #1
 8001448:	408a      	lsls	r2, r1
 800144a:	4611      	mov	r1, r2
 800144c:	4a21      	ldr	r2, [pc, #132]	; (80014d4 <GPIO_Init+0x188>)
 800144e:	430b      	orrs	r3, r1
 8001450:	60d3      	str	r3, [r2, #12]

		}

		// 2. Configure the port selection in SYSCFG_EXTICR

		uint8_t temp1 = (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 4);
 8001452:	687b      	ldr	r3, [r7, #4]
 8001454:	791b      	ldrb	r3, [r3, #4]
 8001456:	089b      	lsrs	r3, r3, #2
 8001458:	74fb      	strb	r3, [r7, #19]
		uint8_t temp2 = (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 4) ;
 800145a:	687b      	ldr	r3, [r7, #4]
 800145c:	791b      	ldrb	r3, [r3, #4]
 800145e:	f003 0303 	and.w	r3, r3, #3
 8001462:	74bb      	strb	r3, [r7, #18]
		uint8_t portcode = GPIO_BASEADDR_TO_CODE(pGPIOHandle->pGPIOx);
 8001464:	687b      	ldr	r3, [r7, #4]
 8001466:	681b      	ldr	r3, [r3, #0]
 8001468:	4a1b      	ldr	r2, [pc, #108]	; (80014d8 <GPIO_Init+0x18c>)
 800146a:	4293      	cmp	r3, r2
 800146c:	d044      	beq.n	80014f8 <GPIO_Init+0x1ac>
 800146e:	687b      	ldr	r3, [r7, #4]
 8001470:	681b      	ldr	r3, [r3, #0]
 8001472:	4a1a      	ldr	r2, [pc, #104]	; (80014dc <GPIO_Init+0x190>)
 8001474:	4293      	cmp	r3, r2
 8001476:	d02b      	beq.n	80014d0 <GPIO_Init+0x184>
 8001478:	687b      	ldr	r3, [r7, #4]
 800147a:	681b      	ldr	r3, [r3, #0]
 800147c:	4a18      	ldr	r2, [pc, #96]	; (80014e0 <GPIO_Init+0x194>)
 800147e:	4293      	cmp	r3, r2
 8001480:	d024      	beq.n	80014cc <GPIO_Init+0x180>
 8001482:	687b      	ldr	r3, [r7, #4]
 8001484:	681b      	ldr	r3, [r3, #0]
 8001486:	4a17      	ldr	r2, [pc, #92]	; (80014e4 <GPIO_Init+0x198>)
 8001488:	4293      	cmp	r3, r2
 800148a:	d01d      	beq.n	80014c8 <GPIO_Init+0x17c>
 800148c:	687b      	ldr	r3, [r7, #4]
 800148e:	681b      	ldr	r3, [r3, #0]
 8001490:	4a15      	ldr	r2, [pc, #84]	; (80014e8 <GPIO_Init+0x19c>)
 8001492:	4293      	cmp	r3, r2
 8001494:	d016      	beq.n	80014c4 <GPIO_Init+0x178>
 8001496:	687b      	ldr	r3, [r7, #4]
 8001498:	681b      	ldr	r3, [r3, #0]
 800149a:	4a14      	ldr	r2, [pc, #80]	; (80014ec <GPIO_Init+0x1a0>)
 800149c:	4293      	cmp	r3, r2
 800149e:	d00f      	beq.n	80014c0 <GPIO_Init+0x174>
 80014a0:	687b      	ldr	r3, [r7, #4]
 80014a2:	681b      	ldr	r3, [r3, #0]
 80014a4:	4a12      	ldr	r2, [pc, #72]	; (80014f0 <GPIO_Init+0x1a4>)
 80014a6:	4293      	cmp	r3, r2
 80014a8:	d008      	beq.n	80014bc <GPIO_Init+0x170>
 80014aa:	687b      	ldr	r3, [r7, #4]
 80014ac:	681b      	ldr	r3, [r3, #0]
 80014ae:	4a11      	ldr	r2, [pc, #68]	; (80014f4 <GPIO_Init+0x1a8>)
 80014b0:	4293      	cmp	r3, r2
 80014b2:	d101      	bne.n	80014b8 <GPIO_Init+0x16c>
 80014b4:	2307      	movs	r3, #7
 80014b6:	e020      	b.n	80014fa <GPIO_Init+0x1ae>
 80014b8:	2300      	movs	r3, #0
 80014ba:	e01e      	b.n	80014fa <GPIO_Init+0x1ae>
 80014bc:	2306      	movs	r3, #6
 80014be:	e01c      	b.n	80014fa <GPIO_Init+0x1ae>
 80014c0:	2305      	movs	r3, #5
 80014c2:	e01a      	b.n	80014fa <GPIO_Init+0x1ae>
 80014c4:	2304      	movs	r3, #4
 80014c6:	e018      	b.n	80014fa <GPIO_Init+0x1ae>
 80014c8:	2303      	movs	r3, #3
 80014ca:	e016      	b.n	80014fa <GPIO_Init+0x1ae>
 80014cc:	2302      	movs	r3, #2
 80014ce:	e014      	b.n	80014fa <GPIO_Init+0x1ae>
 80014d0:	2301      	movs	r3, #1
 80014d2:	e012      	b.n	80014fa <GPIO_Init+0x1ae>
 80014d4:	40013c00 	.word	0x40013c00
 80014d8:	40020000 	.word	0x40020000
 80014dc:	40020400 	.word	0x40020400
 80014e0:	40020800 	.word	0x40020800
 80014e4:	40020c00 	.word	0x40020c00
 80014e8:	40021000 	.word	0x40021000
 80014ec:	40021400 	.word	0x40021400
 80014f0:	40021800 	.word	0x40021800
 80014f4:	40021c00 	.word	0x40021c00
 80014f8:	2300      	movs	r3, #0
 80014fa:	747b      	strb	r3, [r7, #17]
		SYSCFG_PCLK_EN();
 80014fc:	4b5d      	ldr	r3, [pc, #372]	; (8001674 <GPIO_Init+0x328>)
 80014fe:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001500:	4a5c      	ldr	r2, [pc, #368]	; (8001674 <GPIO_Init+0x328>)
 8001502:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8001506:	6453      	str	r3, [r2, #68]	; 0x44
		SYSCFG->EXTICR[temp1] = portcode << (temp2 * 4);
 8001508:	7c7a      	ldrb	r2, [r7, #17]
 800150a:	7cbb      	ldrb	r3, [r7, #18]
 800150c:	009b      	lsls	r3, r3, #2
 800150e:	fa02 f103 	lsl.w	r1, r2, r3
 8001512:	4a59      	ldr	r2, [pc, #356]	; (8001678 <GPIO_Init+0x32c>)
 8001514:	7cfb      	ldrb	r3, [r7, #19]
 8001516:	3302      	adds	r3, #2
 8001518:	f842 1023 	str.w	r1, [r2, r3, lsl #2]

		//3 . enable the EXTI interrupt delivery using IMR
		EXTI->IMR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800151c:	4b57      	ldr	r3, [pc, #348]	; (800167c <GPIO_Init+0x330>)
 800151e:	681b      	ldr	r3, [r3, #0]
 8001520:	687a      	ldr	r2, [r7, #4]
 8001522:	7912      	ldrb	r2, [r2, #4]
 8001524:	4611      	mov	r1, r2
 8001526:	2201      	movs	r2, #1
 8001528:	408a      	lsls	r2, r1
 800152a:	4611      	mov	r1, r2
 800152c:	4a53      	ldr	r2, [pc, #332]	; (800167c <GPIO_Init+0x330>)
 800152e:	430b      	orrs	r3, r1
 8001530:	6013      	str	r3, [r2, #0]
	}

	temp = 0;
 8001532:	2300      	movs	r3, #0
 8001534:	617b      	str	r3, [r7, #20]

	//2. configure the speed
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed << ( 2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber) );
 8001536:	687b      	ldr	r3, [r7, #4]
 8001538:	799b      	ldrb	r3, [r3, #6]
 800153a:	461a      	mov	r2, r3
 800153c:	687b      	ldr	r3, [r7, #4]
 800153e:	791b      	ldrb	r3, [r3, #4]
 8001540:	005b      	lsls	r3, r3, #1
 8001542:	fa02 f303 	lsl.w	r3, r2, r3
 8001546:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->OSPEEDR &= ~( 0x3 << ( 2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)); //clearing
 8001548:	687b      	ldr	r3, [r7, #4]
 800154a:	681b      	ldr	r3, [r3, #0]
 800154c:	689a      	ldr	r2, [r3, #8]
 800154e:	687b      	ldr	r3, [r7, #4]
 8001550:	791b      	ldrb	r3, [r3, #4]
 8001552:	005b      	lsls	r3, r3, #1
 8001554:	2103      	movs	r1, #3
 8001556:	fa01 f303 	lsl.w	r3, r1, r3
 800155a:	43db      	mvns	r3, r3
 800155c:	4619      	mov	r1, r3
 800155e:	687b      	ldr	r3, [r7, #4]
 8001560:	681b      	ldr	r3, [r3, #0]
 8001562:	400a      	ands	r2, r1
 8001564:	609a      	str	r2, [r3, #8]
	pGPIOHandle->pGPIOx->OSPEEDR |= temp;
 8001566:	687b      	ldr	r3, [r7, #4]
 8001568:	681b      	ldr	r3, [r3, #0]
 800156a:	6899      	ldr	r1, [r3, #8]
 800156c:	687b      	ldr	r3, [r7, #4]
 800156e:	681b      	ldr	r3, [r3, #0]
 8001570:	697a      	ldr	r2, [r7, #20]
 8001572:	430a      	orrs	r2, r1
 8001574:	609a      	str	r2, [r3, #8]

	temp = 0;
 8001576:	2300      	movs	r3, #0
 8001578:	617b      	str	r3, [r7, #20]

	//3. configure the pupd settings
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl << ( 2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber) );
 800157a:	687b      	ldr	r3, [r7, #4]
 800157c:	79db      	ldrb	r3, [r3, #7]
 800157e:	461a      	mov	r2, r3
 8001580:	687b      	ldr	r3, [r7, #4]
 8001582:	791b      	ldrb	r3, [r3, #4]
 8001584:	005b      	lsls	r3, r3, #1
 8001586:	fa02 f303 	lsl.w	r3, r2, r3
 800158a:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->PUPDR &= ~( 0x3 << ( 2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)); //clearing
 800158c:	687b      	ldr	r3, [r7, #4]
 800158e:	681b      	ldr	r3, [r3, #0]
 8001590:	68da      	ldr	r2, [r3, #12]
 8001592:	687b      	ldr	r3, [r7, #4]
 8001594:	791b      	ldrb	r3, [r3, #4]
 8001596:	005b      	lsls	r3, r3, #1
 8001598:	2103      	movs	r1, #3
 800159a:	fa01 f303 	lsl.w	r3, r1, r3
 800159e:	43db      	mvns	r3, r3
 80015a0:	4619      	mov	r1, r3
 80015a2:	687b      	ldr	r3, [r7, #4]
 80015a4:	681b      	ldr	r3, [r3, #0]
 80015a6:	400a      	ands	r2, r1
 80015a8:	60da      	str	r2, [r3, #12]
	pGPIOHandle->pGPIOx->PUPDR |= temp;
 80015aa:	687b      	ldr	r3, [r7, #4]
 80015ac:	681b      	ldr	r3, [r3, #0]
 80015ae:	68d9      	ldr	r1, [r3, #12]
 80015b0:	687b      	ldr	r3, [r7, #4]
 80015b2:	681b      	ldr	r3, [r3, #0]
 80015b4:	697a      	ldr	r2, [r7, #20]
 80015b6:	430a      	orrs	r2, r1
 80015b8:	60da      	str	r2, [r3, #12]

	temp = 0;
 80015ba:	2300      	movs	r3, #0
 80015bc:	617b      	str	r3, [r7, #20]

	//4. configure the optype
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber );
 80015be:	687b      	ldr	r3, [r7, #4]
 80015c0:	7a1b      	ldrb	r3, [r3, #8]
 80015c2:	461a      	mov	r2, r3
 80015c4:	687b      	ldr	r3, [r7, #4]
 80015c6:	791b      	ldrb	r3, [r3, #4]
 80015c8:	fa02 f303 	lsl.w	r3, r2, r3
 80015cc:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->OTYPER &= ~( 0x1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber); //clearing
 80015ce:	687b      	ldr	r3, [r7, #4]
 80015d0:	681b      	ldr	r3, [r3, #0]
 80015d2:	685a      	ldr	r2, [r3, #4]
 80015d4:	687b      	ldr	r3, [r7, #4]
 80015d6:	791b      	ldrb	r3, [r3, #4]
 80015d8:	4619      	mov	r1, r3
 80015da:	2301      	movs	r3, #1
 80015dc:	408b      	lsls	r3, r1
 80015de:	43db      	mvns	r3, r3
 80015e0:	4619      	mov	r1, r3
 80015e2:	687b      	ldr	r3, [r7, #4]
 80015e4:	681b      	ldr	r3, [r3, #0]
 80015e6:	400a      	ands	r2, r1
 80015e8:	605a      	str	r2, [r3, #4]
	pGPIOHandle->pGPIOx->OTYPER |= temp;
 80015ea:	687b      	ldr	r3, [r7, #4]
 80015ec:	681b      	ldr	r3, [r3, #0]
 80015ee:	6859      	ldr	r1, [r3, #4]
 80015f0:	687b      	ldr	r3, [r7, #4]
 80015f2:	681b      	ldr	r3, [r3, #0]
 80015f4:	697a      	ldr	r2, [r7, #20]
 80015f6:	430a      	orrs	r2, r1
 80015f8:	605a      	str	r2, [r3, #4]

	temp = 0;
 80015fa:	2300      	movs	r3, #0
 80015fc:	617b      	str	r3, [r7, #20]

	//5. configure the alt functionality
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_ALTFN)
 80015fe:	687b      	ldr	r3, [r7, #4]
 8001600:	795b      	ldrb	r3, [r3, #5]
 8001602:	2b02      	cmp	r3, #2
 8001604:	d131      	bne.n	800166a <GPIO_Init+0x31e>
	{
		//configure the alt function registers.
		uint8_t temp1, temp2;

		temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 8;
 8001606:	687b      	ldr	r3, [r7, #4]
 8001608:	791b      	ldrb	r3, [r3, #4]
 800160a:	08db      	lsrs	r3, r3, #3
 800160c:	743b      	strb	r3, [r7, #16]
		temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber  % 8;
 800160e:	687b      	ldr	r3, [r7, #4]
 8001610:	791b      	ldrb	r3, [r3, #4]
 8001612:	f003 0307 	and.w	r3, r3, #7
 8001616:	73fb      	strb	r3, [r7, #15]
		pGPIOHandle->pGPIOx->AFR[temp1] &= ~(0xF << ( 4 * temp2 ) ); //clearing
 8001618:	687b      	ldr	r3, [r7, #4]
 800161a:	681b      	ldr	r3, [r3, #0]
 800161c:	7c3a      	ldrb	r2, [r7, #16]
 800161e:	3208      	adds	r2, #8
 8001620:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8001624:	7bfb      	ldrb	r3, [r7, #15]
 8001626:	009b      	lsls	r3, r3, #2
 8001628:	220f      	movs	r2, #15
 800162a:	fa02 f303 	lsl.w	r3, r2, r3
 800162e:	43db      	mvns	r3, r3
 8001630:	4618      	mov	r0, r3
 8001632:	687b      	ldr	r3, [r7, #4]
 8001634:	681b      	ldr	r3, [r3, #0]
 8001636:	7c3a      	ldrb	r2, [r7, #16]
 8001638:	4001      	ands	r1, r0
 800163a:	3208      	adds	r2, #8
 800163c:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		pGPIOHandle->pGPIOx->AFR[temp1] |= (pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << ( 4 * temp2 ) );
 8001640:	687b      	ldr	r3, [r7, #4]
 8001642:	681b      	ldr	r3, [r3, #0]
 8001644:	7c3a      	ldrb	r2, [r7, #16]
 8001646:	3208      	adds	r2, #8
 8001648:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 800164c:	687b      	ldr	r3, [r7, #4]
 800164e:	7a5b      	ldrb	r3, [r3, #9]
 8001650:	461a      	mov	r2, r3
 8001652:	7bfb      	ldrb	r3, [r7, #15]
 8001654:	009b      	lsls	r3, r3, #2
 8001656:	fa02 f303 	lsl.w	r3, r2, r3
 800165a:	4618      	mov	r0, r3
 800165c:	687b      	ldr	r3, [r7, #4]
 800165e:	681b      	ldr	r3, [r3, #0]
 8001660:	7c3a      	ldrb	r2, [r7, #16]
 8001662:	4301      	orrs	r1, r0
 8001664:	3208      	adds	r2, #8
 8001666:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
	}

}
 800166a:	bf00      	nop
 800166c:	3718      	adds	r7, #24
 800166e:	46bd      	mov	sp, r7
 8001670:	bd80      	pop	{r7, pc}
 8001672:	bf00      	nop
 8001674:	40023800 	.word	0x40023800
 8001678:	40013800 	.word	0x40013800
 800167c:	40013c00 	.word	0x40013c00

08001680 <I2C_GenerateStartCondition>:

static void I2C_MasterHandleTXEInterrupt(I2C_Handle_t *pI2Chandle);
static void I2C_MasterHandleRXNEInterrupt(I2C_Handle_t *pI2CHandle);

static void I2C_GenerateStartCondition(I2C_RegDef_t *pI2Cx)
{
 8001680:	b480      	push	{r7}
 8001682:	b083      	sub	sp, #12
 8001684:	af00      	add	r7, sp, #0
 8001686:	6078      	str	r0, [r7, #4]
	pI2Cx->I2C_CR1 |= 1 << I2C_CR1_START ;
 8001688:	687b      	ldr	r3, [r7, #4]
 800168a:	681b      	ldr	r3, [r3, #0]
 800168c:	f443 7280 	orr.w	r2, r3, #256	; 0x100
 8001690:	687b      	ldr	r3, [r7, #4]
 8001692:	601a      	str	r2, [r3, #0]
}
 8001694:	bf00      	nop
 8001696:	370c      	adds	r7, #12
 8001698:	46bd      	mov	sp, r7
 800169a:	bc80      	pop	{r7}
 800169c:	4770      	bx	lr

0800169e <I2C_ExecuteAddressPhaseWrite>:

static void I2C_ExecuteAddressPhaseWrite(I2C_RegDef_t *pI2Cx,uint8_t SlaveAddr)
{
 800169e:	b480      	push	{r7}
 80016a0:	b083      	sub	sp, #12
 80016a2:	af00      	add	r7, sp, #0
 80016a4:	6078      	str	r0, [r7, #4]
 80016a6:	460b      	mov	r3, r1
 80016a8:	70fb      	strb	r3, [r7, #3]
	SlaveAddr = SlaveAddr << 1; // Space for R/W bit
 80016aa:	78fb      	ldrb	r3, [r7, #3]
 80016ac:	005b      	lsls	r3, r3, #1
 80016ae:	70fb      	strb	r3, [r7, #3]
	SlaveAddr &= ~(1);          // Slave Address  + R/W bit
 80016b0:	78fb      	ldrb	r3, [r7, #3]
 80016b2:	f023 0301 	bic.w	r3, r3, #1
 80016b6:	70fb      	strb	r3, [r7, #3]
	pI2Cx->I2C_DR = SlaveAddr;
 80016b8:	78fa      	ldrb	r2, [r7, #3]
 80016ba:	687b      	ldr	r3, [r7, #4]
 80016bc:	611a      	str	r2, [r3, #16]
}
 80016be:	bf00      	nop
 80016c0:	370c      	adds	r7, #12
 80016c2:	46bd      	mov	sp, r7
 80016c4:	bc80      	pop	{r7}
 80016c6:	4770      	bx	lr

080016c8 <I2C_ExecuteAddressPhaseRead>:

static void I2C_ExecuteAddressPhaseRead(I2C_RegDef_t *pI2Cx, uint8_t SlaveAddr)
{
 80016c8:	b480      	push	{r7}
 80016ca:	b083      	sub	sp, #12
 80016cc:	af00      	add	r7, sp, #0
 80016ce:	6078      	str	r0, [r7, #4]
 80016d0:	460b      	mov	r3, r1
 80016d2:	70fb      	strb	r3, [r7, #3]
	SlaveAddr = SlaveAddr << 1;
 80016d4:	78fb      	ldrb	r3, [r7, #3]
 80016d6:	005b      	lsls	r3, r3, #1
 80016d8:	70fb      	strb	r3, [r7, #3]
	SlaveAddr |= 1; //SlaveAddr is Slave address + r/nw bit=1
 80016da:	78fb      	ldrb	r3, [r7, #3]
 80016dc:	f043 0301 	orr.w	r3, r3, #1
 80016e0:	70fb      	strb	r3, [r7, #3]
	pI2Cx->I2C_DR = SlaveAddr;
 80016e2:	78fa      	ldrb	r2, [r7, #3]
 80016e4:	687b      	ldr	r3, [r7, #4]
 80016e6:	611a      	str	r2, [r3, #16]
}
 80016e8:	bf00      	nop
 80016ea:	370c      	adds	r7, #12
 80016ec:	46bd      	mov	sp, r7
 80016ee:	bc80      	pop	{r7}
 80016f0:	4770      	bx	lr

080016f2 <I2C_ClearADDRFlag>:

static void I2C_ClearADDRFlag(I2C_Handle_t *pI2CHandle)
{
 80016f2:	b580      	push	{r7, lr}
 80016f4:	b084      	sub	sp, #16
 80016f6:	af00      	add	r7, sp, #0
 80016f8:	6078      	str	r0, [r7, #4]
	uint32_t dummy_read;
	// Check for device in Master Mode or Slave Mode
	if(pI2CHandle->pI2Cx->I2C_SR2 & ( 1 << I2C_SR2_MSL))
 80016fa:	687b      	ldr	r3, [r7, #4]
 80016fc:	681b      	ldr	r3, [r3, #0]
 80016fe:	699b      	ldr	r3, [r3, #24]
 8001700:	f003 0301 	and.w	r3, r3, #1
 8001704:	2b00      	cmp	r3, #0
 8001706:	d01f      	beq.n	8001748 <I2C_ClearADDRFlag+0x56>
	{
		// Device is in Master Mode
		if(pI2CHandle->TxRxState == I2C_BUSY_IN_RX)
 8001708:	687b      	ldr	r3, [r7, #4]
 800170a:	7f1b      	ldrb	r3, [r3, #28]
 800170c:	2b01      	cmp	r3, #1
 800170e:	d112      	bne.n	8001736 <I2C_ClearADDRFlag+0x44>
		{
			if(pI2CHandle->RxSize == 1)
 8001710:	687b      	ldr	r3, [r7, #4]
 8001712:	6a1b      	ldr	r3, [r3, #32]
 8001714:	2b01      	cmp	r3, #1
 8001716:	d11f      	bne.n	8001758 <I2C_ClearADDRFlag+0x66>
			{
				// First Disable the ACK
				I2C_ManageAcking(pI2CHandle->pI2Cx, DISABLE);
 8001718:	687b      	ldr	r3, [r7, #4]
 800171a:	681b      	ldr	r3, [r3, #0]
 800171c:	2100      	movs	r1, #0
 800171e:	4618      	mov	r0, r3
 8001720:	f000 faa3 	bl	8001c6a <I2C_ManageAcking>

				// Clear ADDR Flag ( read SR1 , Read SR2)
				dummy_read = pI2CHandle->pI2Cx->I2C_SR1;
 8001724:	687b      	ldr	r3, [r7, #4]
 8001726:	681b      	ldr	r3, [r3, #0]
 8001728:	695b      	ldr	r3, [r3, #20]
 800172a:	60fb      	str	r3, [r7, #12]
				dummy_read = pI2CHandle->pI2Cx->I2C_SR2;
 800172c:	687b      	ldr	r3, [r7, #4]
 800172e:	681b      	ldr	r3, [r3, #0]
 8001730:	699b      	ldr	r3, [r3, #24]
 8001732:	60fb      	str	r3, [r7, #12]
		dummy_read = pI2CHandle->pI2Cx->I2C_SR1;
		dummy_read = pI2CHandle->pI2Cx->I2C_SR2;
		(void)dummy_read;
	}

}
 8001734:	e010      	b.n	8001758 <I2C_ClearADDRFlag+0x66>
			dummy_read = pI2CHandle->pI2Cx->I2C_SR1;
 8001736:	687b      	ldr	r3, [r7, #4]
 8001738:	681b      	ldr	r3, [r3, #0]
 800173a:	695b      	ldr	r3, [r3, #20]
 800173c:	60fb      	str	r3, [r7, #12]
			dummy_read = pI2CHandle->pI2Cx->I2C_SR2;
 800173e:	687b      	ldr	r3, [r7, #4]
 8001740:	681b      	ldr	r3, [r3, #0]
 8001742:	699b      	ldr	r3, [r3, #24]
 8001744:	60fb      	str	r3, [r7, #12]
}
 8001746:	e007      	b.n	8001758 <I2C_ClearADDRFlag+0x66>
		dummy_read = pI2CHandle->pI2Cx->I2C_SR1;
 8001748:	687b      	ldr	r3, [r7, #4]
 800174a:	681b      	ldr	r3, [r3, #0]
 800174c:	695b      	ldr	r3, [r3, #20]
 800174e:	60fb      	str	r3, [r7, #12]
		dummy_read = pI2CHandle->pI2Cx->I2C_SR2;
 8001750:	687b      	ldr	r3, [r7, #4]
 8001752:	681b      	ldr	r3, [r3, #0]
 8001754:	699b      	ldr	r3, [r3, #24]
 8001756:	60fb      	str	r3, [r7, #12]
}
 8001758:	bf00      	nop
 800175a:	3710      	adds	r7, #16
 800175c:	46bd      	mov	sp, r7
 800175e:	bd80      	pop	{r7, pc}

08001760 <I2C_GenerateStopCondition>:

void I2C_GenerateStopCondition(I2C_RegDef_t *pI2Cx)
{
 8001760:	b480      	push	{r7}
 8001762:	b083      	sub	sp, #12
 8001764:	af00      	add	r7, sp, #0
 8001766:	6078      	str	r0, [r7, #4]
	pI2Cx->I2C_CR1 |= 1 << I2C_CR1_STOP ;
 8001768:	687b      	ldr	r3, [r7, #4]
 800176a:	681b      	ldr	r3, [r3, #0]
 800176c:	f443 7200 	orr.w	r2, r3, #512	; 0x200
 8001770:	687b      	ldr	r3, [r7, #4]
 8001772:	601a      	str	r2, [r3, #0]
}
 8001774:	bf00      	nop
 8001776:	370c      	adds	r7, #12
 8001778:	46bd      	mov	sp, r7
 800177a:	bc80      	pop	{r7}
 800177c:	4770      	bx	lr

0800177e <I2C_PeripheralControl>:
 *
 * @Note              -
 */

void I2C_PeripheralControl(I2C_RegDef_t *pI2Cx, uint8_t EnorDi)
{
 800177e:	b480      	push	{r7}
 8001780:	b083      	sub	sp, #12
 8001782:	af00      	add	r7, sp, #0
 8001784:	6078      	str	r0, [r7, #4]
 8001786:	460b      	mov	r3, r1
 8001788:	70fb      	strb	r3, [r7, #3]
	if(EnorDi == ENABLE)
 800178a:	78fb      	ldrb	r3, [r7, #3]
 800178c:	2b01      	cmp	r3, #1
 800178e:	d106      	bne.n	800179e <I2C_PeripheralControl+0x20>
	{
		pI2Cx->I2C_CR1 |= ( 1 << I2C_CR1_PE);
 8001790:	687b      	ldr	r3, [r7, #4]
 8001792:	681b      	ldr	r3, [r3, #0]
 8001794:	f043 0201 	orr.w	r2, r3, #1
 8001798:	687b      	ldr	r3, [r7, #4]
 800179a:	601a      	str	r2, [r3, #0]
	}
	else
	{
		pI2Cx->I2C_CR1 &= ~( 1 << I2C_CR1_PE);
	}
}
 800179c:	e005      	b.n	80017aa <I2C_PeripheralControl+0x2c>
		pI2Cx->I2C_CR1 &= ~( 1 << I2C_CR1_PE);
 800179e:	687b      	ldr	r3, [r7, #4]
 80017a0:	681b      	ldr	r3, [r3, #0]
 80017a2:	f023 0201 	bic.w	r2, r3, #1
 80017a6:	687b      	ldr	r3, [r7, #4]
 80017a8:	601a      	str	r2, [r3, #0]
}
 80017aa:	bf00      	nop
 80017ac:	370c      	adds	r7, #12
 80017ae:	46bd      	mov	sp, r7
 80017b0:	bc80      	pop	{r7}
 80017b2:	4770      	bx	lr

080017b4 <I2C_PeriClockControl>:
 *
 * @Note              -
 */

void I2C_PeriClockControl(I2C_RegDef_t *pI2Cx, uint8_t EnorDi)
{
 80017b4:	b480      	push	{r7}
 80017b6:	b083      	sub	sp, #12
 80017b8:	af00      	add	r7, sp, #0
 80017ba:	6078      	str	r0, [r7, #4]
 80017bc:	460b      	mov	r3, r1
 80017be:	70fb      	strb	r3, [r7, #3]
	if(EnorDi == ENABLE)
 80017c0:	78fb      	ldrb	r3, [r7, #3]
 80017c2:	2b01      	cmp	r3, #1
 80017c4:	d120      	bne.n	8001808 <I2C_PeriClockControl+0x54>
	{
		if(pI2Cx == I2C1)
 80017c6:	687b      	ldr	r3, [r7, #4]
 80017c8:	4a22      	ldr	r2, [pc, #136]	; (8001854 <I2C_PeriClockControl+0xa0>)
 80017ca:	4293      	cmp	r3, r2
 80017cc:	d106      	bne.n	80017dc <I2C_PeriClockControl+0x28>
		{
			I2C1_PCLK_EN();
 80017ce:	4b22      	ldr	r3, [pc, #136]	; (8001858 <I2C_PeriClockControl+0xa4>)
 80017d0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80017d2:	4a21      	ldr	r2, [pc, #132]	; (8001858 <I2C_PeriClockControl+0xa4>)
 80017d4:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 80017d8:	6413      	str	r3, [r2, #64]	; 0x40
		}else if (pI2Cx == I2C3)
		{
			I2C3_PCLK_DI();
		}
	}
}
 80017da:	e035      	b.n	8001848 <I2C_PeriClockControl+0x94>
		}else if (pI2Cx == I2C2)
 80017dc:	687b      	ldr	r3, [r7, #4]
 80017de:	4a1f      	ldr	r2, [pc, #124]	; (800185c <I2C_PeriClockControl+0xa8>)
 80017e0:	4293      	cmp	r3, r2
 80017e2:	d106      	bne.n	80017f2 <I2C_PeriClockControl+0x3e>
			I2C2_PCLK_EN();
 80017e4:	4b1c      	ldr	r3, [pc, #112]	; (8001858 <I2C_PeriClockControl+0xa4>)
 80017e6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80017e8:	4a1b      	ldr	r2, [pc, #108]	; (8001858 <I2C_PeriClockControl+0xa4>)
 80017ea:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 80017ee:	6413      	str	r3, [r2, #64]	; 0x40
}
 80017f0:	e02a      	b.n	8001848 <I2C_PeriClockControl+0x94>
		}else if (pI2Cx == I2C3)
 80017f2:	687b      	ldr	r3, [r7, #4]
 80017f4:	4a1a      	ldr	r2, [pc, #104]	; (8001860 <I2C_PeriClockControl+0xac>)
 80017f6:	4293      	cmp	r3, r2
 80017f8:	d126      	bne.n	8001848 <I2C_PeriClockControl+0x94>
			I2C3_PCLK_EN();
 80017fa:	4b17      	ldr	r3, [pc, #92]	; (8001858 <I2C_PeriClockControl+0xa4>)
 80017fc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80017fe:	4a16      	ldr	r2, [pc, #88]	; (8001858 <I2C_PeriClockControl+0xa4>)
 8001800:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8001804:	6413      	str	r3, [r2, #64]	; 0x40
}
 8001806:	e01f      	b.n	8001848 <I2C_PeriClockControl+0x94>
		if(pI2Cx == I2C1)
 8001808:	687b      	ldr	r3, [r7, #4]
 800180a:	4a12      	ldr	r2, [pc, #72]	; (8001854 <I2C_PeriClockControl+0xa0>)
 800180c:	4293      	cmp	r3, r2
 800180e:	d106      	bne.n	800181e <I2C_PeriClockControl+0x6a>
			I2C1_PCLK_DI();
 8001810:	4b11      	ldr	r3, [pc, #68]	; (8001858 <I2C_PeriClockControl+0xa4>)
 8001812:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001814:	4a10      	ldr	r2, [pc, #64]	; (8001858 <I2C_PeriClockControl+0xa4>)
 8001816:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 800181a:	6413      	str	r3, [r2, #64]	; 0x40
}
 800181c:	e014      	b.n	8001848 <I2C_PeriClockControl+0x94>
		}else if (pI2Cx == I2C2)
 800181e:	687b      	ldr	r3, [r7, #4]
 8001820:	4a0e      	ldr	r2, [pc, #56]	; (800185c <I2C_PeriClockControl+0xa8>)
 8001822:	4293      	cmp	r3, r2
 8001824:	d106      	bne.n	8001834 <I2C_PeriClockControl+0x80>
			I2C2_PCLK_DI();
 8001826:	4b0c      	ldr	r3, [pc, #48]	; (8001858 <I2C_PeriClockControl+0xa4>)
 8001828:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800182a:	4a0b      	ldr	r2, [pc, #44]	; (8001858 <I2C_PeriClockControl+0xa4>)
 800182c:	f423 0380 	bic.w	r3, r3, #4194304	; 0x400000
 8001830:	6413      	str	r3, [r2, #64]	; 0x40
}
 8001832:	e009      	b.n	8001848 <I2C_PeriClockControl+0x94>
		}else if (pI2Cx == I2C3)
 8001834:	687b      	ldr	r3, [r7, #4]
 8001836:	4a0a      	ldr	r2, [pc, #40]	; (8001860 <I2C_PeriClockControl+0xac>)
 8001838:	4293      	cmp	r3, r2
 800183a:	d105      	bne.n	8001848 <I2C_PeriClockControl+0x94>
			I2C3_PCLK_DI();
 800183c:	4b06      	ldr	r3, [pc, #24]	; (8001858 <I2C_PeriClockControl+0xa4>)
 800183e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001840:	4a05      	ldr	r2, [pc, #20]	; (8001858 <I2C_PeriClockControl+0xa4>)
 8001842:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 8001846:	6413      	str	r3, [r2, #64]	; 0x40
}
 8001848:	bf00      	nop
 800184a:	370c      	adds	r7, #12
 800184c:	46bd      	mov	sp, r7
 800184e:	bc80      	pop	{r7}
 8001850:	4770      	bx	lr
 8001852:	bf00      	nop
 8001854:	40005400 	.word	0x40005400
 8001858:	40023800 	.word	0x40023800
 800185c:	40005800 	.word	0x40005800
 8001860:	40005c00 	.word	0x40005c00

08001864 <RCC_PLLOutputCLock>:

uint8_t RCC_PLLOutputCLock()
{
 8001864:	b480      	push	{r7}
 8001866:	af00      	add	r7, sp, #0
	return 0;
 8001868:	2300      	movs	r3, #0
}
 800186a:	4618      	mov	r0, r3
 800186c:	46bd      	mov	sp, r7
 800186e:	bc80      	pop	{r7}
 8001870:	4770      	bx	lr
	...

08001874 <RCC_GetPCLK1Value>:


uint32_t RCC_GetPCLK1Value(void)
{
 8001874:	b580      	push	{r7, lr}
 8001876:	b084      	sub	sp, #16
 8001878:	af00      	add	r7, sp, #0
	uint32_t pclk1,SystemClk;

	uint8_t clk_src,temp, ahb_pre,apb1_pre;
	// Here we are reading the bits CFGR register to know the source of clock
	clk_src = (RCC->CFGR >> 2) & 0x3;
 800187a:	4b26      	ldr	r3, [pc, #152]	; (8001914 <RCC_GetPCLK1Value+0xa0>)
 800187c:	689b      	ldr	r3, [r3, #8]
 800187e:	089b      	lsrs	r3, r3, #2
 8001880:	b2db      	uxtb	r3, r3
 8001882:	f003 0303 	and.w	r3, r3, #3
 8001886:	727b      	strb	r3, [r7, #9]

	if(clk_src == 0)
 8001888:	7a7b      	ldrb	r3, [r7, #9]
 800188a:	2b00      	cmp	r3, #0
 800188c:	d102      	bne.n	8001894 <RCC_GetPCLK1Value+0x20>
	{
		// System Clock is HSI
		SystemClk = 16000000;
 800188e:	4b22      	ldr	r3, [pc, #136]	; (8001918 <RCC_GetPCLK1Value+0xa4>)
 8001890:	60fb      	str	r3, [r7, #12]
 8001892:	e00c      	b.n	80018ae <RCC_GetPCLK1Value+0x3a>
	}
	else if (clk_src == 1)
 8001894:	7a7b      	ldrb	r3, [r7, #9]
 8001896:	2b01      	cmp	r3, #1
 8001898:	d102      	bne.n	80018a0 <RCC_GetPCLK1Value+0x2c>
	{
		// System CLock is HSE
		SystemClk = 8000000;
 800189a:	4b20      	ldr	r3, [pc, #128]	; (800191c <RCC_GetPCLK1Value+0xa8>)
 800189c:	60fb      	str	r3, [r7, #12]
 800189e:	e006      	b.n	80018ae <RCC_GetPCLK1Value+0x3a>
	}
	else if (clk_src == 2)
 80018a0:	7a7b      	ldrb	r3, [r7, #9]
 80018a2:	2b02      	cmp	r3, #2
 80018a4:	d103      	bne.n	80018ae <RCC_GetPCLK1Value+0x3a>
	{
		// System CLock is PLL
		SystemClk = RCC_PLLOutputCLock();
 80018a6:	f7ff ffdd 	bl	8001864 <RCC_PLLOutputCLock>
 80018aa:	4603      	mov	r3, r0
 80018ac:	60fb      	str	r3, [r7, #12]
	}
	// Here we are reading the bits CFGR register to know the values of AHB1
	temp = (RCC->CFGR >> 4) & 0xF;
 80018ae:	4b19      	ldr	r3, [pc, #100]	; (8001914 <RCC_GetPCLK1Value+0xa0>)
 80018b0:	689b      	ldr	r3, [r3, #8]
 80018b2:	091b      	lsrs	r3, r3, #4
 80018b4:	b2db      	uxtb	r3, r3
 80018b6:	f003 030f 	and.w	r3, r3, #15
 80018ba:	723b      	strb	r3, [r7, #8]

	// Refer to the reference manual
	// if AHB Bits of CGFR is less than 8 it has no Prescaler
	if(temp < 8)
 80018bc:	7a3b      	ldrb	r3, [r7, #8]
 80018be:	2b07      	cmp	r3, #7
 80018c0:	d802      	bhi.n	80018c8 <RCC_GetPCLK1Value+0x54>
	{
		ahb_pre = 1;
 80018c2:	2301      	movs	r3, #1
 80018c4:	72fb      	strb	r3, [r7, #11]
 80018c6:	e005      	b.n	80018d4 <RCC_GetPCLK1Value+0x60>
	}

	else
	{
		ahb_pre = AHB_Prescaler[temp - 8];
 80018c8:	7a3b      	ldrb	r3, [r7, #8]
 80018ca:	3b08      	subs	r3, #8
 80018cc:	4a14      	ldr	r2, [pc, #80]	; (8001920 <RCC_GetPCLK1Value+0xac>)
 80018ce:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 80018d2:	72fb      	strb	r3, [r7, #11]
	}
	// Here we are reading the bits CFGR register to know the values of APB1
	temp = (RCC->CFGR >> 10) & 0x7;
 80018d4:	4b0f      	ldr	r3, [pc, #60]	; (8001914 <RCC_GetPCLK1Value+0xa0>)
 80018d6:	689b      	ldr	r3, [r3, #8]
 80018d8:	0a9b      	lsrs	r3, r3, #10
 80018da:	b2db      	uxtb	r3, r3
 80018dc:	f003 0307 	and.w	r3, r3, #7
 80018e0:	723b      	strb	r3, [r7, #8]

	// Refer to the reference manual
	// if APB Bits of CGFR is less than 4 it has no Prescaler
	if(temp < 4)
 80018e2:	7a3b      	ldrb	r3, [r7, #8]
 80018e4:	2b03      	cmp	r3, #3
 80018e6:	d802      	bhi.n	80018ee <RCC_GetPCLK1Value+0x7a>
	{
		apb1_pre = 1;
 80018e8:	2301      	movs	r3, #1
 80018ea:	72bb      	strb	r3, [r7, #10]
 80018ec:	e004      	b.n	80018f8 <RCC_GetPCLK1Value+0x84>
	}

	else
	{
		apb1_pre = APB1_Prescaler[temp - 4];
 80018ee:	7a3b      	ldrb	r3, [r7, #8]
 80018f0:	3b04      	subs	r3, #4
 80018f2:	4a0c      	ldr	r2, [pc, #48]	; (8001924 <RCC_GetPCLK1Value+0xb0>)
 80018f4:	5cd3      	ldrb	r3, [r2, r3]
 80018f6:	72bb      	strb	r3, [r7, #10]
	}

	pclk1 = (SystemClk / ahb_pre) / apb1_pre;
 80018f8:	7afb      	ldrb	r3, [r7, #11]
 80018fa:	68fa      	ldr	r2, [r7, #12]
 80018fc:	fbb2 f2f3 	udiv	r2, r2, r3
 8001900:	7abb      	ldrb	r3, [r7, #10]
 8001902:	fbb2 f3f3 	udiv	r3, r2, r3
 8001906:	607b      	str	r3, [r7, #4]
	return pclk1;
 8001908:	687b      	ldr	r3, [r7, #4]
}
 800190a:	4618      	mov	r0, r3
 800190c:	3710      	adds	r7, #16
 800190e:	46bd      	mov	sp, r7
 8001910:	bd80      	pop	{r7, pc}
 8001912:	bf00      	nop
 8001914:	40023800 	.word	0x40023800
 8001918:	00f42400 	.word	0x00f42400
 800191c:	007a1200 	.word	0x007a1200
 8001920:	20000000 	.word	0x20000000
 8001924:	20000010 	.word	0x20000010

08001928 <I2C_Init>:
 *
 * @Note              -
 */

void I2C_Init(I2C_Handle_t *pI2CHandle)
{
 8001928:	b580      	push	{r7, lr}
 800192a:	b084      	sub	sp, #16
 800192c:	af00      	add	r7, sp, #0
 800192e:	6078      	str	r0, [r7, #4]
	// Enable the clock for I2C peripheral
	I2C_PeriClockControl(pI2CHandle->pI2Cx, ENABLE);
 8001930:	687b      	ldr	r3, [r7, #4]
 8001932:	681b      	ldr	r3, [r3, #0]
 8001934:	2101      	movs	r1, #1
 8001936:	4618      	mov	r0, r3
 8001938:	f7ff ff3c 	bl	80017b4 <I2C_PeriClockControl>

	// ACK control Bit
	uint32_t tempreg =0;
 800193c:	2300      	movs	r3, #0
 800193e:	60fb      	str	r3, [r7, #12]
	tempreg |= pI2CHandle->I2C_Config.I2C_ACKControl << 10 ;
 8001940:	687b      	ldr	r3, [r7, #4]
 8001942:	7a5b      	ldrb	r3, [r3, #9]
 8001944:	029b      	lsls	r3, r3, #10
 8001946:	461a      	mov	r2, r3
 8001948:	68fb      	ldr	r3, [r7, #12]
 800194a:	4313      	orrs	r3, r2
 800194c:	60fb      	str	r3, [r7, #12]

	// Configure the FREQ Field of CR2 Register
	tempreg = 0;
 800194e:	2300      	movs	r3, #0
 8001950:	60fb      	str	r3, [r7, #12]
	tempreg |= RCC_GetPCLK1Value()/1000000U;
 8001952:	f7ff ff8f 	bl	8001874 <RCC_GetPCLK1Value>
 8001956:	4602      	mov	r2, r0
 8001958:	4b47      	ldr	r3, [pc, #284]	; (8001a78 <I2C_Init+0x150>)
 800195a:	fba3 2302 	umull	r2, r3, r3, r2
 800195e:	0c9b      	lsrs	r3, r3, #18
 8001960:	68fa      	ldr	r2, [r7, #12]
 8001962:	4313      	orrs	r3, r2
 8001964:	60fb      	str	r3, [r7, #12]
	pI2CHandle->pI2Cx->I2C_CR2 = (tempreg & 0x3F) ;
 8001966:	687b      	ldr	r3, [r7, #4]
 8001968:	681b      	ldr	r3, [r3, #0]
 800196a:	68fa      	ldr	r2, [r7, #12]
 800196c:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 8001970:	605a      	str	r2, [r3, #4]

	// Program the Device own address
	tempreg = 0;
 8001972:	2300      	movs	r3, #0
 8001974:	60fb      	str	r3, [r7, #12]
	tempreg |= pI2CHandle->I2C_Config.I2C_DeviceAddress << 1;
 8001976:	687b      	ldr	r3, [r7, #4]
 8001978:	7a1b      	ldrb	r3, [r3, #8]
 800197a:	005b      	lsls	r3, r3, #1
 800197c:	461a      	mov	r2, r3
 800197e:	68fb      	ldr	r3, [r7, #12]
 8001980:	4313      	orrs	r3, r2
 8001982:	60fb      	str	r3, [r7, #12]
	tempreg |= 1 << 14; // As instructed by the reference manual to do so
 8001984:	68fb      	ldr	r3, [r7, #12]
 8001986:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800198a:	60fb      	str	r3, [r7, #12]
	pI2CHandle->pI2Cx->I2C_OAR1 = tempreg ;
 800198c:	687b      	ldr	r3, [r7, #4]
 800198e:	681b      	ldr	r3, [r3, #0]
 8001990:	68fa      	ldr	r2, [r7, #12]
 8001992:	609a      	str	r2, [r3, #8]

	// CCR Calculations
	uint16_t ccr_value = 0;
 8001994:	2300      	movs	r3, #0
 8001996:	817b      	strh	r3, [r7, #10]
	tempreg = 0;
 8001998:	2300      	movs	r3, #0
 800199a:	60fb      	str	r3, [r7, #12]
	if(pI2CHandle->I2C_Config.I2C_SCLSpeed <= I2C_SCL_SPEED_SM)
 800199c:	687b      	ldr	r3, [r7, #4]
 800199e:	685b      	ldr	r3, [r3, #4]
 80019a0:	4a36      	ldr	r2, [pc, #216]	; (8001a7c <I2C_Init+0x154>)
 80019a2:	4293      	cmp	r3, r2
 80019a4:	d80f      	bhi.n	80019c6 <I2C_Init+0x9e>
	{
		// The mode is standard mode
		ccr_value =( RCC_GetPCLK1Value() / (2 * pI2CHandle->I2C_Config.I2C_SCLSpeed) );
 80019a6:	f7ff ff65 	bl	8001874 <RCC_GetPCLK1Value>
 80019aa:	4602      	mov	r2, r0
 80019ac:	687b      	ldr	r3, [r7, #4]
 80019ae:	685b      	ldr	r3, [r3, #4]
 80019b0:	005b      	lsls	r3, r3, #1
 80019b2:	fbb2 f3f3 	udiv	r3, r2, r3
 80019b6:	817b      	strh	r3, [r7, #10]
		tempreg |= (ccr_value & 0xFFF);
 80019b8:	897b      	ldrh	r3, [r7, #10]
 80019ba:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80019be:	68fa      	ldr	r2, [r7, #12]
 80019c0:	4313      	orrs	r3, r2
 80019c2:	60fb      	str	r3, [r7, #12]
 80019c4:	e02d      	b.n	8001a22 <I2C_Init+0xfa>
	}
	else
	{
		// the mode is fast mode
		tempreg |= (1 << 15);
 80019c6:	68fb      	ldr	r3, [r7, #12]
 80019c8:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80019cc:	60fb      	str	r3, [r7, #12]
		tempreg |= (pI2CHandle->I2C_Config.I2C_FMDutyCycle << 14) ;
 80019ce:	687b      	ldr	r3, [r7, #4]
 80019d0:	895b      	ldrh	r3, [r3, #10]
 80019d2:	039b      	lsls	r3, r3, #14
 80019d4:	461a      	mov	r2, r3
 80019d6:	68fb      	ldr	r3, [r7, #12]
 80019d8:	4313      	orrs	r3, r2
 80019da:	60fb      	str	r3, [r7, #12]

		if(pI2CHandle->I2C_Config.I2C_FMDutyCycle == I2C_FM_DUTY_2)
 80019dc:	687b      	ldr	r3, [r7, #4]
 80019de:	895b      	ldrh	r3, [r3, #10]
 80019e0:	2b00      	cmp	r3, #0
 80019e2:	d10b      	bne.n	80019fc <I2C_Init+0xd4>
		{
			ccr_value =( RCC_GetPCLK1Value() / (3 * pI2CHandle->I2C_Config.I2C_SCLSpeed) );
 80019e4:	f7ff ff46 	bl	8001874 <RCC_GetPCLK1Value>
 80019e8:	4601      	mov	r1, r0
 80019ea:	687b      	ldr	r3, [r7, #4]
 80019ec:	685a      	ldr	r2, [r3, #4]
 80019ee:	4613      	mov	r3, r2
 80019f0:	005b      	lsls	r3, r3, #1
 80019f2:	4413      	add	r3, r2
 80019f4:	fbb1 f3f3 	udiv	r3, r1, r3
 80019f8:	817b      	strh	r3, [r7, #10]
 80019fa:	e00c      	b.n	8001a16 <I2C_Init+0xee>
		}
		else
		{
			ccr_value =( RCC_GetPCLK1Value() / (25 * pI2CHandle->I2C_Config.I2C_SCLSpeed) );
 80019fc:	f7ff ff3a 	bl	8001874 <RCC_GetPCLK1Value>
 8001a00:	4601      	mov	r1, r0
 8001a02:	687b      	ldr	r3, [r7, #4]
 8001a04:	685a      	ldr	r2, [r3, #4]
 8001a06:	4613      	mov	r3, r2
 8001a08:	009b      	lsls	r3, r3, #2
 8001a0a:	4413      	add	r3, r2
 8001a0c:	009a      	lsls	r2, r3, #2
 8001a0e:	4413      	add	r3, r2
 8001a10:	fbb1 f3f3 	udiv	r3, r1, r3
 8001a14:	817b      	strh	r3, [r7, #10]
		}
		tempreg |= (ccr_value & 0xFFF);
 8001a16:	897b      	ldrh	r3, [r7, #10]
 8001a18:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8001a1c:	68fa      	ldr	r2, [r7, #12]
 8001a1e:	4313      	orrs	r3, r2
 8001a20:	60fb      	str	r3, [r7, #12]
	}
	pI2CHandle->pI2Cx->I2C_CCR = tempreg ;
 8001a22:	687b      	ldr	r3, [r7, #4]
 8001a24:	681b      	ldr	r3, [r3, #0]
 8001a26:	68fa      	ldr	r2, [r7, #12]
 8001a28:	61da      	str	r2, [r3, #28]

	// TRISE Configuration
	if(pI2CHandle->I2C_Config.I2C_SCLSpeed <= I2C_SCL_SPEED_SM)
 8001a2a:	687b      	ldr	r3, [r7, #4]
 8001a2c:	685b      	ldr	r3, [r3, #4]
 8001a2e:	4a13      	ldr	r2, [pc, #76]	; (8001a7c <I2C_Init+0x154>)
 8001a30:	4293      	cmp	r3, r2
 8001a32:	d809      	bhi.n	8001a48 <I2C_Init+0x120>
	{
		// The mode is standard mode
		tempreg =( RCC_GetPCLK1Value() / 1000000U) + 1;
 8001a34:	f7ff ff1e 	bl	8001874 <RCC_GetPCLK1Value>
 8001a38:	4602      	mov	r2, r0
 8001a3a:	4b0f      	ldr	r3, [pc, #60]	; (8001a78 <I2C_Init+0x150>)
 8001a3c:	fba3 2302 	umull	r2, r3, r3, r2
 8001a40:	0c9b      	lsrs	r3, r3, #18
 8001a42:	3301      	adds	r3, #1
 8001a44:	60fb      	str	r3, [r7, #12]
 8001a46:	e00c      	b.n	8001a62 <I2C_Init+0x13a>
	}
	else
	{
		// Fast Mode Trise configuration
		tempreg =( (  RCC_GetPCLK1Value() * 300) / 1000000U) + 1;
 8001a48:	f7ff ff14 	bl	8001874 <RCC_GetPCLK1Value>
 8001a4c:	4602      	mov	r2, r0
 8001a4e:	f44f 7396 	mov.w	r3, #300	; 0x12c
 8001a52:	fb03 f302 	mul.w	r3, r3, r2
 8001a56:	4a08      	ldr	r2, [pc, #32]	; (8001a78 <I2C_Init+0x150>)
 8001a58:	fba2 2303 	umull	r2, r3, r2, r3
 8001a5c:	0c9b      	lsrs	r3, r3, #18
 8001a5e:	3301      	adds	r3, #1
 8001a60:	60fb      	str	r3, [r7, #12]
	}
	pI2CHandle->pI2Cx->I2C_TRISE = (tempreg & 0x3F) ;
 8001a62:	687b      	ldr	r3, [r7, #4]
 8001a64:	681b      	ldr	r3, [r3, #0]
 8001a66:	68fa      	ldr	r2, [r7, #12]
 8001a68:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 8001a6c:	621a      	str	r2, [r3, #32]
}
 8001a6e:	bf00      	nop
 8001a70:	3710      	adds	r7, #16
 8001a72:	46bd      	mov	sp, r7
 8001a74:	bd80      	pop	{r7, pc}
 8001a76:	bf00      	nop
 8001a78:	431bde83 	.word	0x431bde83
 8001a7c:	000186a0 	.word	0x000186a0

08001a80 <I2C_MasterSendData>:
 *
 * @Note              - Refer to the data transfer sequence in the reference manual
 */

void I2C_MasterSendData(I2C_Handle_t *pI2CHandle,uint8_t *pTxbuffer, uint32_t Len, uint8_t SlaveAddr, uint8_t Sr)
{
 8001a80:	b580      	push	{r7, lr}
 8001a82:	b084      	sub	sp, #16
 8001a84:	af00      	add	r7, sp, #0
 8001a86:	60f8      	str	r0, [r7, #12]
 8001a88:	60b9      	str	r1, [r7, #8]
 8001a8a:	607a      	str	r2, [r7, #4]
 8001a8c:	70fb      	strb	r3, [r7, #3]
	//1. Generate the start condition
	I2C_GenerateStartCondition(pI2CHandle->pI2Cx);
 8001a8e:	68fb      	ldr	r3, [r7, #12]
 8001a90:	681b      	ldr	r3, [r3, #0]
 8001a92:	4618      	mov	r0, r3
 8001a94:	f7ff fdf4 	bl	8001680 <I2C_GenerateStartCondition>

	//2. confirm that start generation is completed by checking the SB flag in the SR1
	//   Note: Until SB is cleared SCL will be stretched (pulled to LOW)
	while(! I2C_GetFlagStatus(pI2CHandle->pI2Cx, I2C_FLAG_SB));
 8001a98:	bf00      	nop
 8001a9a:	68fb      	ldr	r3, [r7, #12]
 8001a9c:	681b      	ldr	r3, [r3, #0]
 8001a9e:	2101      	movs	r1, #1
 8001aa0:	4618      	mov	r0, r3
 8001aa2:	f000 f8fd 	bl	8001ca0 <I2C_GetFlagStatus>
 8001aa6:	4603      	mov	r3, r0
 8001aa8:	2b00      	cmp	r3, #0
 8001aaa:	d0f6      	beq.n	8001a9a <I2C_MasterSendData+0x1a>

	//3. Send the address of the slave with r/nw bit set to w(0) (total 8 bits )
	I2C_ExecuteAddressPhaseWrite(pI2CHandle->pI2Cx,SlaveAddr);
 8001aac:	68fb      	ldr	r3, [r7, #12]
 8001aae:	681b      	ldr	r3, [r3, #0]
 8001ab0:	78fa      	ldrb	r2, [r7, #3]
 8001ab2:	4611      	mov	r1, r2
 8001ab4:	4618      	mov	r0, r3
 8001ab6:	f7ff fdf2 	bl	800169e <I2C_ExecuteAddressPhaseWrite>

	//4. Confirm that address phase is completed by checking the ADDR flag in the SR1
	while(! I2C_GetFlagStatus(pI2CHandle->pI2Cx, I2C_FLAG_ADDR));
 8001aba:	bf00      	nop
 8001abc:	68fb      	ldr	r3, [r7, #12]
 8001abe:	681b      	ldr	r3, [r3, #0]
 8001ac0:	2102      	movs	r1, #2
 8001ac2:	4618      	mov	r0, r3
 8001ac4:	f000 f8ec 	bl	8001ca0 <I2C_GetFlagStatus>
 8001ac8:	4603      	mov	r3, r0
 8001aca:	2b00      	cmp	r3, #0
 8001acc:	d0f6      	beq.n	8001abc <I2C_MasterSendData+0x3c>

	//5. clear the ADDR flag according to its software sequence
	//   Note: Until ADDR is cleared SCL will be stretched (pulled to LOW)
	I2C_ClearADDRFlag(pI2CHandle);
 8001ace:	68f8      	ldr	r0, [r7, #12]
 8001ad0:	f7ff fe0f 	bl	80016f2 <I2C_ClearADDRFlag>

	//6. Send data until the Length becomes 0
	while(Len > 0)
 8001ad4:	e014      	b.n	8001b00 <I2C_MasterSendData+0x80>
	{
		while(! I2C_GetFlagStatus(pI2CHandle->pI2Cx, I2C_FLAG_TXE));
 8001ad6:	bf00      	nop
 8001ad8:	68fb      	ldr	r3, [r7, #12]
 8001ada:	681b      	ldr	r3, [r3, #0]
 8001adc:	2180      	movs	r1, #128	; 0x80
 8001ade:	4618      	mov	r0, r3
 8001ae0:	f000 f8de 	bl	8001ca0 <I2C_GetFlagStatus>
 8001ae4:	4603      	mov	r3, r0
 8001ae6:	2b00      	cmp	r3, #0
 8001ae8:	d0f6      	beq.n	8001ad8 <I2C_MasterSendData+0x58>
		pI2CHandle->pI2Cx->I2C_DR = *pTxbuffer;
 8001aea:	68bb      	ldr	r3, [r7, #8]
 8001aec:	781a      	ldrb	r2, [r3, #0]
 8001aee:	68fb      	ldr	r3, [r7, #12]
 8001af0:	681b      	ldr	r3, [r3, #0]
 8001af2:	611a      	str	r2, [r3, #16]
		pTxbuffer++;
 8001af4:	68bb      	ldr	r3, [r7, #8]
 8001af6:	3301      	adds	r3, #1
 8001af8:	60bb      	str	r3, [r7, #8]
		Len--;
 8001afa:	687b      	ldr	r3, [r7, #4]
 8001afc:	3b01      	subs	r3, #1
 8001afe:	607b      	str	r3, [r7, #4]
	while(Len > 0)
 8001b00:	687b      	ldr	r3, [r7, #4]
 8001b02:	2b00      	cmp	r3, #0
 8001b04:	d1e7      	bne.n	8001ad6 <I2C_MasterSendData+0x56>
	}

	//7. when Len becomes zero wait for TXE=1 and BTF=1 before generating the STOP condition
	//   Note: TXE=1 , BTF=1 , means that both SR and DR are empty and next transmission should begin
	//   when BTF=1 SCL will be stretched (pulled to LOW)
	while(! I2C_GetFlagStatus(pI2CHandle->pI2Cx, I2C_FLAG_TXE));
 8001b06:	bf00      	nop
 8001b08:	68fb      	ldr	r3, [r7, #12]
 8001b0a:	681b      	ldr	r3, [r3, #0]
 8001b0c:	2180      	movs	r1, #128	; 0x80
 8001b0e:	4618      	mov	r0, r3
 8001b10:	f000 f8c6 	bl	8001ca0 <I2C_GetFlagStatus>
 8001b14:	4603      	mov	r3, r0
 8001b16:	2b00      	cmp	r3, #0
 8001b18:	d0f6      	beq.n	8001b08 <I2C_MasterSendData+0x88>

	while(! I2C_GetFlagStatus(pI2CHandle->pI2Cx, I2C_FLAG_BTF));
 8001b1a:	bf00      	nop
 8001b1c:	68fb      	ldr	r3, [r7, #12]
 8001b1e:	681b      	ldr	r3, [r3, #0]
 8001b20:	2104      	movs	r1, #4
 8001b22:	4618      	mov	r0, r3
 8001b24:	f000 f8bc 	bl	8001ca0 <I2C_GetFlagStatus>
 8001b28:	4603      	mov	r3, r0
 8001b2a:	2b00      	cmp	r3, #0
 8001b2c:	d0f6      	beq.n	8001b1c <I2C_MasterSendData+0x9c>

	//8. Generate STOP condition and master need not to wait for the completion of stop condition.
	//   Note: generating STOP, automatically clears the BTF
	if(Sr == I2C_ENABLE_SR)
 8001b2e:	7e3b      	ldrb	r3, [r7, #24]
 8001b30:	2b01      	cmp	r3, #1
 8001b32:	d104      	bne.n	8001b3e <I2C_MasterSendData+0xbe>
	{
		I2C_GenerateStopCondition(pI2CHandle->pI2Cx);
 8001b34:	68fb      	ldr	r3, [r7, #12]
 8001b36:	681b      	ldr	r3, [r3, #0]
 8001b38:	4618      	mov	r0, r3
 8001b3a:	f7ff fe11 	bl	8001760 <I2C_GenerateStopCondition>
	}
}
 8001b3e:	bf00      	nop
 8001b40:	3710      	adds	r7, #16
 8001b42:	46bd      	mov	sp, r7
 8001b44:	bd80      	pop	{r7, pc}

08001b46 <I2C_MasterReceiveData>:
 *
 * @Note              - Refer to the data transfer sequence in the reference manual
 */

void I2C_MasterReceiveData(I2C_Handle_t *pI2CHandle,uint8_t *pRxBuffer, uint8_t Len, uint8_t SlaveAddr,uint8_t Sr)
{
 8001b46:	b580      	push	{r7, lr}
 8001b48:	b086      	sub	sp, #24
 8001b4a:	af00      	add	r7, sp, #0
 8001b4c:	60f8      	str	r0, [r7, #12]
 8001b4e:	60b9      	str	r1, [r7, #8]
 8001b50:	4611      	mov	r1, r2
 8001b52:	461a      	mov	r2, r3
 8001b54:	460b      	mov	r3, r1
 8001b56:	71fb      	strb	r3, [r7, #7]
 8001b58:	4613      	mov	r3, r2
 8001b5a:	71bb      	strb	r3, [r7, #6]
	// 1. Generate the Start Condition
	I2C_GenerateStartCondition(pI2CHandle->pI2Cx);
 8001b5c:	68fb      	ldr	r3, [r7, #12]
 8001b5e:	681b      	ldr	r3, [r3, #0]
 8001b60:	4618      	mov	r0, r3
 8001b62:	f7ff fd8d 	bl	8001680 <I2C_GenerateStartCondition>

	// 2. Confirm the start condition is completed by checking the SB Flag in SR1
	// Note: Until SB is cleared SCL will be stretched (pulled to LOW)
	while(!I2C_GetFlagStatus(pI2CHandle->pI2Cx, I2C_FLAG_SB));
 8001b66:	bf00      	nop
 8001b68:	68fb      	ldr	r3, [r7, #12]
 8001b6a:	681b      	ldr	r3, [r3, #0]
 8001b6c:	2101      	movs	r1, #1
 8001b6e:	4618      	mov	r0, r3
 8001b70:	f000 f896 	bl	8001ca0 <I2C_GetFlagStatus>
 8001b74:	4603      	mov	r3, r0
 8001b76:	2b00      	cmp	r3, #0
 8001b78:	d0f6      	beq.n	8001b68 <I2C_MasterReceiveData+0x22>

	// 3. Send the Address of the Slave with r/nw bit set to R(1) (total 8 bits)
	I2C_ExecuteAddressPhaseRead(pI2CHandle->pI2Cx, SlaveAddr);
 8001b7a:	68fb      	ldr	r3, [r7, #12]
 8001b7c:	681b      	ldr	r3, [r3, #0]
 8001b7e:	79ba      	ldrb	r2, [r7, #6]
 8001b80:	4611      	mov	r1, r2
 8001b82:	4618      	mov	r0, r3
 8001b84:	f7ff fda0 	bl	80016c8 <I2C_ExecuteAddressPhaseRead>

	// 4. Wait until address phase is completed by checking the ADDR Flag in the SR1
	while(!I2C_GetFlagStatus(pI2CHandle->pI2Cx, I2C_FLAG_ADDR));
 8001b88:	bf00      	nop
 8001b8a:	68fb      	ldr	r3, [r7, #12]
 8001b8c:	681b      	ldr	r3, [r3, #0]
 8001b8e:	2102      	movs	r1, #2
 8001b90:	4618      	mov	r0, r3
 8001b92:	f000 f885 	bl	8001ca0 <I2C_GetFlagStatus>
 8001b96:	4603      	mov	r3, r0
 8001b98:	2b00      	cmp	r3, #0
 8001b9a:	d0f6      	beq.n	8001b8a <I2C_MasterReceiveData+0x44>


	//procedure to read only 1 byte from slave
	if(Len == 1)
 8001b9c:	79fb      	ldrb	r3, [r7, #7]
 8001b9e:	2b01      	cmp	r3, #1
 8001ba0:	d121      	bne.n	8001be6 <I2C_MasterReceiveData+0xa0>
	{
		//Disable Acking
		I2C_ManageAcking(pI2CHandle->pI2Cx, I2C_ACK_DISABLE);
 8001ba2:	68fb      	ldr	r3, [r7, #12]
 8001ba4:	681b      	ldr	r3, [r3, #0]
 8001ba6:	2100      	movs	r1, #0
 8001ba8:	4618      	mov	r0, r3
 8001baa:	f000 f85e 	bl	8001c6a <I2C_ManageAcking>

		//clear the ADDR flag
		I2C_ClearADDRFlag(pI2CHandle);
 8001bae:	68f8      	ldr	r0, [r7, #12]
 8001bb0:	f7ff fd9f 	bl	80016f2 <I2C_ClearADDRFlag>

		//wait until  RXNE becomes 1
		while(! I2C_GetFlagStatus(pI2CHandle->pI2Cx, I2C_FLAG_RXNE));
 8001bb4:	bf00      	nop
 8001bb6:	68fb      	ldr	r3, [r7, #12]
 8001bb8:	681b      	ldr	r3, [r3, #0]
 8001bba:	2140      	movs	r1, #64	; 0x40
 8001bbc:	4618      	mov	r0, r3
 8001bbe:	f000 f86f 	bl	8001ca0 <I2C_GetFlagStatus>
 8001bc2:	4603      	mov	r3, r0
 8001bc4:	2b00      	cmp	r3, #0
 8001bc6:	d0f6      	beq.n	8001bb6 <I2C_MasterReceiveData+0x70>

		if(Sr == I2C_ENABLE_SR)
 8001bc8:	f897 3020 	ldrb.w	r3, [r7, #32]
 8001bcc:	2b01      	cmp	r3, #1
 8001bce:	d104      	bne.n	8001bda <I2C_MasterReceiveData+0x94>
		{
		//generate STOP condition
		I2C_GenerateStopCondition(pI2CHandle->pI2Cx);
 8001bd0:	68fb      	ldr	r3, [r7, #12]
 8001bd2:	681b      	ldr	r3, [r3, #0]
 8001bd4:	4618      	mov	r0, r3
 8001bd6:	f7ff fdc3 	bl	8001760 <I2C_GenerateStopCondition>
		}

		//read data in to buffer
		*pRxBuffer = pI2CHandle->pI2Cx->I2C_DR;
 8001bda:	68fb      	ldr	r3, [r7, #12]
 8001bdc:	681b      	ldr	r3, [r3, #0]
 8001bde:	691b      	ldr	r3, [r3, #16]
 8001be0:	b2da      	uxtb	r2, r3
 8001be2:	68bb      	ldr	r3, [r7, #8]
 8001be4:	701a      	strb	r2, [r3, #0]

	}


    //procedure to read data from slave when Len > 1
	if(Len > 1)
 8001be6:	79fb      	ldrb	r3, [r7, #7]
 8001be8:	2b01      	cmp	r3, #1
 8001bea:	d930      	bls.n	8001c4e <I2C_MasterReceiveData+0x108>
	{
		//clear the ADDR flag
		I2C_ClearADDRFlag(pI2CHandle);
 8001bec:	68f8      	ldr	r0, [r7, #12]
 8001bee:	f7ff fd80 	bl	80016f2 <I2C_ClearADDRFlag>

		//read the data until Len becomes zero
		for ( uint32_t i = Len ; i > 0 ; i--)
 8001bf2:	79fb      	ldrb	r3, [r7, #7]
 8001bf4:	617b      	str	r3, [r7, #20]
 8001bf6:	e027      	b.n	8001c48 <I2C_MasterReceiveData+0x102>
		{
			//wait until RXNE becomes 1
			while(! I2C_GetFlagStatus(pI2CHandle->pI2Cx, I2C_FLAG_RXNE));
 8001bf8:	bf00      	nop
 8001bfa:	68fb      	ldr	r3, [r7, #12]
 8001bfc:	681b      	ldr	r3, [r3, #0]
 8001bfe:	2140      	movs	r1, #64	; 0x40
 8001c00:	4618      	mov	r0, r3
 8001c02:	f000 f84d 	bl	8001ca0 <I2C_GetFlagStatus>
 8001c06:	4603      	mov	r3, r0
 8001c08:	2b00      	cmp	r3, #0
 8001c0a:	d0f6      	beq.n	8001bfa <I2C_MasterReceiveData+0xb4>

			if(i == 2) //if last 2 bytes are remaining
 8001c0c:	697b      	ldr	r3, [r7, #20]
 8001c0e:	2b02      	cmp	r3, #2
 8001c10:	d10e      	bne.n	8001c30 <I2C_MasterReceiveData+0xea>
			{
				//Disable Acking
				I2C_ManageAcking(pI2CHandle->pI2Cx, I2C_ACK_DISABLE);
 8001c12:	68fb      	ldr	r3, [r7, #12]
 8001c14:	681b      	ldr	r3, [r3, #0]
 8001c16:	2100      	movs	r1, #0
 8001c18:	4618      	mov	r0, r3
 8001c1a:	f000 f826 	bl	8001c6a <I2C_ManageAcking>

				if(Sr == I2C_ENABLE_SR)
 8001c1e:	f897 3020 	ldrb.w	r3, [r7, #32]
 8001c22:	2b01      	cmp	r3, #1
 8001c24:	d104      	bne.n	8001c30 <I2C_MasterReceiveData+0xea>
				{
				//generate STOP condition
				//if(Sr == I2C_DISABLE_SR )
				I2C_GenerateStopCondition(pI2CHandle->pI2Cx);
 8001c26:	68fb      	ldr	r3, [r7, #12]
 8001c28:	681b      	ldr	r3, [r3, #0]
 8001c2a:	4618      	mov	r0, r3
 8001c2c:	f7ff fd98 	bl	8001760 <I2C_GenerateStopCondition>
				}

			}

			//read the data from data register in to buffer
			*pRxBuffer = pI2CHandle->pI2Cx->I2C_DR;
 8001c30:	68fb      	ldr	r3, [r7, #12]
 8001c32:	681b      	ldr	r3, [r3, #0]
 8001c34:	691b      	ldr	r3, [r3, #16]
 8001c36:	b2da      	uxtb	r2, r3
 8001c38:	68bb      	ldr	r3, [r7, #8]
 8001c3a:	701a      	strb	r2, [r3, #0]

			//increment the buffer address
			pRxBuffer++;
 8001c3c:	68bb      	ldr	r3, [r7, #8]
 8001c3e:	3301      	adds	r3, #1
 8001c40:	60bb      	str	r3, [r7, #8]
		for ( uint32_t i = Len ; i > 0 ; i--)
 8001c42:	697b      	ldr	r3, [r7, #20]
 8001c44:	3b01      	subs	r3, #1
 8001c46:	617b      	str	r3, [r7, #20]
 8001c48:	697b      	ldr	r3, [r7, #20]
 8001c4a:	2b00      	cmp	r3, #0
 8001c4c:	d1d4      	bne.n	8001bf8 <I2C_MasterReceiveData+0xb2>
		}

	}

	//re-enable ACKing
	if(pI2CHandle->I2C_Config.I2C_ACKControl == I2C_ACK_ENABLE)
 8001c4e:	68fb      	ldr	r3, [r7, #12]
 8001c50:	7a5b      	ldrb	r3, [r3, #9]
 8001c52:	2b01      	cmp	r3, #1
 8001c54:	d105      	bne.n	8001c62 <I2C_MasterReceiveData+0x11c>
	{
		I2C_ManageAcking(pI2CHandle->pI2Cx,I2C_ACK_ENABLE);
 8001c56:	68fb      	ldr	r3, [r7, #12]
 8001c58:	681b      	ldr	r3, [r3, #0]
 8001c5a:	2101      	movs	r1, #1
 8001c5c:	4618      	mov	r0, r3
 8001c5e:	f000 f804 	bl	8001c6a <I2C_ManageAcking>
	}
}
 8001c62:	bf00      	nop
 8001c64:	3718      	adds	r7, #24
 8001c66:	46bd      	mov	sp, r7
 8001c68:	bd80      	pop	{r7, pc}

08001c6a <I2C_ManageAcking>:



void I2C_ManageAcking(I2C_RegDef_t *pI2Cx, uint8_t EnOrDi)
{
 8001c6a:	b480      	push	{r7}
 8001c6c:	b083      	sub	sp, #12
 8001c6e:	af00      	add	r7, sp, #0
 8001c70:	6078      	str	r0, [r7, #4]
 8001c72:	460b      	mov	r3, r1
 8001c74:	70fb      	strb	r3, [r7, #3]
	if(EnOrDi == I2C_ACK_ENABLE)
 8001c76:	78fb      	ldrb	r3, [r7, #3]
 8001c78:	2b01      	cmp	r3, #1
 8001c7a:	d106      	bne.n	8001c8a <I2C_ManageAcking+0x20>
	{
		// Enable the ACK
		pI2Cx->I2C_CR1 |= ( 1 << I2C_CR1_ACK);
 8001c7c:	687b      	ldr	r3, [r7, #4]
 8001c7e:	681b      	ldr	r3, [r3, #0]
 8001c80:	f443 6280 	orr.w	r2, r3, #1024	; 0x400
 8001c84:	687b      	ldr	r3, [r7, #4]
 8001c86:	601a      	str	r2, [r3, #0]
	else
	{
		// Disable the ack
		pI2Cx->I2C_CR1 &= ~( 1 << I2C_CR1_ACK);
	}
}
 8001c88:	e005      	b.n	8001c96 <I2C_ManageAcking+0x2c>
		pI2Cx->I2C_CR1 &= ~( 1 << I2C_CR1_ACK);
 8001c8a:	687b      	ldr	r3, [r7, #4]
 8001c8c:	681b      	ldr	r3, [r3, #0]
 8001c8e:	f423 6280 	bic.w	r2, r3, #1024	; 0x400
 8001c92:	687b      	ldr	r3, [r7, #4]
 8001c94:	601a      	str	r2, [r3, #0]
}
 8001c96:	bf00      	nop
 8001c98:	370c      	adds	r7, #12
 8001c9a:	46bd      	mov	sp, r7
 8001c9c:	bc80      	pop	{r7}
 8001c9e:	4770      	bx	lr

08001ca0 <I2C_GetFlagStatus>:
 * @Note              - Reading the SR1 register is part of clearing the SB Flag bit
 *
 */

uint8_t I2C_GetFlagStatus(I2C_RegDef_t *pI2Cx, uint32_t FlagName)
{
 8001ca0:	b480      	push	{r7}
 8001ca2:	b083      	sub	sp, #12
 8001ca4:	af00      	add	r7, sp, #0
 8001ca6:	6078      	str	r0, [r7, #4]
 8001ca8:	6039      	str	r1, [r7, #0]
	if(pI2Cx->I2C_SR1 & FlagName)
 8001caa:	687b      	ldr	r3, [r7, #4]
 8001cac:	695a      	ldr	r2, [r3, #20]
 8001cae:	683b      	ldr	r3, [r7, #0]
 8001cb0:	4013      	ands	r3, r2
 8001cb2:	2b00      	cmp	r3, #0
 8001cb4:	d001      	beq.n	8001cba <I2C_GetFlagStatus+0x1a>
	{
		return FLAG_SET;
 8001cb6:	2301      	movs	r3, #1
 8001cb8:	e000      	b.n	8001cbc <I2C_GetFlagStatus+0x1c>
	}

	return FLAG_RESET;
 8001cba:	2300      	movs	r3, #0
}
 8001cbc:	4618      	mov	r0, r3
 8001cbe:	370c      	adds	r7, #12
 8001cc0:	46bd      	mov	sp, r7
 8001cc2:	bc80      	pop	{r7}
 8001cc4:	4770      	bx	lr
	...

08001cc8 <__errno>:
 8001cc8:	4b01      	ldr	r3, [pc, #4]	; (8001cd0 <__errno+0x8>)
 8001cca:	6818      	ldr	r0, [r3, #0]
 8001ccc:	4770      	bx	lr
 8001cce:	bf00      	nop
 8001cd0:	20000014 	.word	0x20000014

08001cd4 <__libc_init_array>:
 8001cd4:	b570      	push	{r4, r5, r6, lr}
 8001cd6:	4e0d      	ldr	r6, [pc, #52]	; (8001d0c <__libc_init_array+0x38>)
 8001cd8:	4c0d      	ldr	r4, [pc, #52]	; (8001d10 <__libc_init_array+0x3c>)
 8001cda:	1ba4      	subs	r4, r4, r6
 8001cdc:	10a4      	asrs	r4, r4, #2
 8001cde:	2500      	movs	r5, #0
 8001ce0:	42a5      	cmp	r5, r4
 8001ce2:	d109      	bne.n	8001cf8 <__libc_init_array+0x24>
 8001ce4:	4e0b      	ldr	r6, [pc, #44]	; (8001d14 <__libc_init_array+0x40>)
 8001ce6:	4c0c      	ldr	r4, [pc, #48]	; (8001d18 <__libc_init_array+0x44>)
 8001ce8:	f004 fcfc 	bl	80066e4 <_init>
 8001cec:	1ba4      	subs	r4, r4, r6
 8001cee:	10a4      	asrs	r4, r4, #2
 8001cf0:	2500      	movs	r5, #0
 8001cf2:	42a5      	cmp	r5, r4
 8001cf4:	d105      	bne.n	8001d02 <__libc_init_array+0x2e>
 8001cf6:	bd70      	pop	{r4, r5, r6, pc}
 8001cf8:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8001cfc:	4798      	blx	r3
 8001cfe:	3501      	adds	r5, #1
 8001d00:	e7ee      	b.n	8001ce0 <__libc_init_array+0xc>
 8001d02:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8001d06:	4798      	blx	r3
 8001d08:	3501      	adds	r5, #1
 8001d0a:	e7f2      	b.n	8001cf2 <__libc_init_array+0x1e>
 8001d0c:	08006a58 	.word	0x08006a58
 8001d10:	08006a58 	.word	0x08006a58
 8001d14:	08006a58 	.word	0x08006a58
 8001d18:	08006a5c 	.word	0x08006a5c

08001d1c <memset>:
 8001d1c:	4402      	add	r2, r0
 8001d1e:	4603      	mov	r3, r0
 8001d20:	4293      	cmp	r3, r2
 8001d22:	d100      	bne.n	8001d26 <memset+0xa>
 8001d24:	4770      	bx	lr
 8001d26:	f803 1b01 	strb.w	r1, [r3], #1
 8001d2a:	e7f9      	b.n	8001d20 <memset+0x4>

08001d2c <__cvt>:
 8001d2c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8001d30:	b088      	sub	sp, #32
 8001d32:	2b00      	cmp	r3, #0
 8001d34:	9f14      	ldr	r7, [sp, #80]	; 0x50
 8001d36:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8001d38:	e9dd 1a12 	ldrd	r1, sl, [sp, #72]	; 0x48
 8001d3c:	461e      	mov	r6, r3
 8001d3e:	f027 0720 	bic.w	r7, r7, #32
 8001d42:	bfbb      	ittet	lt
 8001d44:	f103 4300 	addlt.w	r3, r3, #2147483648	; 0x80000000
 8001d48:	461e      	movlt	r6, r3
 8001d4a:	2300      	movge	r3, #0
 8001d4c:	232d      	movlt	r3, #45	; 0x2d
 8001d4e:	2f46      	cmp	r7, #70	; 0x46
 8001d50:	4614      	mov	r4, r2
 8001d52:	700b      	strb	r3, [r1, #0]
 8001d54:	d004      	beq.n	8001d60 <__cvt+0x34>
 8001d56:	2f45      	cmp	r7, #69	; 0x45
 8001d58:	d100      	bne.n	8001d5c <__cvt+0x30>
 8001d5a:	3501      	adds	r5, #1
 8001d5c:	2302      	movs	r3, #2
 8001d5e:	e000      	b.n	8001d62 <__cvt+0x36>
 8001d60:	2303      	movs	r3, #3
 8001d62:	aa07      	add	r2, sp, #28
 8001d64:	9204      	str	r2, [sp, #16]
 8001d66:	aa06      	add	r2, sp, #24
 8001d68:	e9cd a202 	strd	sl, r2, [sp, #8]
 8001d6c:	e9cd 3500 	strd	r3, r5, [sp]
 8001d70:	4622      	mov	r2, r4
 8001d72:	4633      	mov	r3, r6
 8001d74:	f001 feb4 	bl	8003ae0 <_dtoa_r>
 8001d78:	2f47      	cmp	r7, #71	; 0x47
 8001d7a:	4680      	mov	r8, r0
 8001d7c:	d102      	bne.n	8001d84 <__cvt+0x58>
 8001d7e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8001d80:	07db      	lsls	r3, r3, #31
 8001d82:	d526      	bpl.n	8001dd2 <__cvt+0xa6>
 8001d84:	2f46      	cmp	r7, #70	; 0x46
 8001d86:	eb08 0905 	add.w	r9, r8, r5
 8001d8a:	d111      	bne.n	8001db0 <__cvt+0x84>
 8001d8c:	f898 3000 	ldrb.w	r3, [r8]
 8001d90:	2b30      	cmp	r3, #48	; 0x30
 8001d92:	d10a      	bne.n	8001daa <__cvt+0x7e>
 8001d94:	2200      	movs	r2, #0
 8001d96:	2300      	movs	r3, #0
 8001d98:	4620      	mov	r0, r4
 8001d9a:	4631      	mov	r1, r6
 8001d9c:	f7fe feb4 	bl	8000b08 <__aeabi_dcmpeq>
 8001da0:	b918      	cbnz	r0, 8001daa <__cvt+0x7e>
 8001da2:	f1c5 0501 	rsb	r5, r5, #1
 8001da6:	f8ca 5000 	str.w	r5, [sl]
 8001daa:	f8da 3000 	ldr.w	r3, [sl]
 8001dae:	4499      	add	r9, r3
 8001db0:	2200      	movs	r2, #0
 8001db2:	2300      	movs	r3, #0
 8001db4:	4620      	mov	r0, r4
 8001db6:	4631      	mov	r1, r6
 8001db8:	f7fe fea6 	bl	8000b08 <__aeabi_dcmpeq>
 8001dbc:	b938      	cbnz	r0, 8001dce <__cvt+0xa2>
 8001dbe:	2230      	movs	r2, #48	; 0x30
 8001dc0:	9b07      	ldr	r3, [sp, #28]
 8001dc2:	454b      	cmp	r3, r9
 8001dc4:	d205      	bcs.n	8001dd2 <__cvt+0xa6>
 8001dc6:	1c59      	adds	r1, r3, #1
 8001dc8:	9107      	str	r1, [sp, #28]
 8001dca:	701a      	strb	r2, [r3, #0]
 8001dcc:	e7f8      	b.n	8001dc0 <__cvt+0x94>
 8001dce:	f8cd 901c 	str.w	r9, [sp, #28]
 8001dd2:	9b07      	ldr	r3, [sp, #28]
 8001dd4:	9a15      	ldr	r2, [sp, #84]	; 0x54
 8001dd6:	eba3 0308 	sub.w	r3, r3, r8
 8001dda:	4640      	mov	r0, r8
 8001ddc:	6013      	str	r3, [r2, #0]
 8001dde:	b008      	add	sp, #32
 8001de0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08001de4 <__exponent>:
 8001de4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8001de6:	2900      	cmp	r1, #0
 8001de8:	4604      	mov	r4, r0
 8001dea:	bfba      	itte	lt
 8001dec:	4249      	neglt	r1, r1
 8001dee:	232d      	movlt	r3, #45	; 0x2d
 8001df0:	232b      	movge	r3, #43	; 0x2b
 8001df2:	2909      	cmp	r1, #9
 8001df4:	f804 2b02 	strb.w	r2, [r4], #2
 8001df8:	7043      	strb	r3, [r0, #1]
 8001dfa:	dd20      	ble.n	8001e3e <__exponent+0x5a>
 8001dfc:	f10d 0307 	add.w	r3, sp, #7
 8001e00:	461f      	mov	r7, r3
 8001e02:	260a      	movs	r6, #10
 8001e04:	fb91 f5f6 	sdiv	r5, r1, r6
 8001e08:	fb06 1115 	mls	r1, r6, r5, r1
 8001e0c:	3130      	adds	r1, #48	; 0x30
 8001e0e:	2d09      	cmp	r5, #9
 8001e10:	f803 1c01 	strb.w	r1, [r3, #-1]
 8001e14:	f103 32ff 	add.w	r2, r3, #4294967295
 8001e18:	4629      	mov	r1, r5
 8001e1a:	dc09      	bgt.n	8001e30 <__exponent+0x4c>
 8001e1c:	3130      	adds	r1, #48	; 0x30
 8001e1e:	3b02      	subs	r3, #2
 8001e20:	f802 1c01 	strb.w	r1, [r2, #-1]
 8001e24:	42bb      	cmp	r3, r7
 8001e26:	4622      	mov	r2, r4
 8001e28:	d304      	bcc.n	8001e34 <__exponent+0x50>
 8001e2a:	1a10      	subs	r0, r2, r0
 8001e2c:	b003      	add	sp, #12
 8001e2e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001e30:	4613      	mov	r3, r2
 8001e32:	e7e7      	b.n	8001e04 <__exponent+0x20>
 8001e34:	f813 2b01 	ldrb.w	r2, [r3], #1
 8001e38:	f804 2b01 	strb.w	r2, [r4], #1
 8001e3c:	e7f2      	b.n	8001e24 <__exponent+0x40>
 8001e3e:	2330      	movs	r3, #48	; 0x30
 8001e40:	4419      	add	r1, r3
 8001e42:	7083      	strb	r3, [r0, #2]
 8001e44:	1d02      	adds	r2, r0, #4
 8001e46:	70c1      	strb	r1, [r0, #3]
 8001e48:	e7ef      	b.n	8001e2a <__exponent+0x46>
	...

08001e4c <_printf_float>:
 8001e4c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001e50:	b091      	sub	sp, #68	; 0x44
 8001e52:	460c      	mov	r4, r1
 8001e54:	9f1a      	ldr	r7, [sp, #104]	; 0x68
 8001e56:	4693      	mov	fp, r2
 8001e58:	461e      	mov	r6, r3
 8001e5a:	4605      	mov	r5, r0
 8001e5c:	f003 f8a0 	bl	8004fa0 <_localeconv_r>
 8001e60:	6803      	ldr	r3, [r0, #0]
 8001e62:	9309      	str	r3, [sp, #36]	; 0x24
 8001e64:	4618      	mov	r0, r3
 8001e66:	f7fe f9d3 	bl	8000210 <strlen>
 8001e6a:	2300      	movs	r3, #0
 8001e6c:	930e      	str	r3, [sp, #56]	; 0x38
 8001e6e:	683b      	ldr	r3, [r7, #0]
 8001e70:	900a      	str	r0, [sp, #40]	; 0x28
 8001e72:	3307      	adds	r3, #7
 8001e74:	f023 0307 	bic.w	r3, r3, #7
 8001e78:	f103 0208 	add.w	r2, r3, #8
 8001e7c:	f894 8018 	ldrb.w	r8, [r4, #24]
 8001e80:	f8d4 a000 	ldr.w	sl, [r4]
 8001e84:	603a      	str	r2, [r7, #0]
 8001e86:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001e8a:	e9c4 2312 	strd	r2, r3, [r4, #72]	; 0x48
 8001e8e:	e9d4 7912 	ldrd	r7, r9, [r4, #72]	; 0x48
 8001e92:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 8001e96:	930b      	str	r3, [sp, #44]	; 0x2c
 8001e98:	f04f 32ff 	mov.w	r2, #4294967295
 8001e9c:	4ba6      	ldr	r3, [pc, #664]	; (8002138 <_printf_float+0x2ec>)
 8001e9e:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8001ea0:	4638      	mov	r0, r7
 8001ea2:	f7fe fe63 	bl	8000b6c <__aeabi_dcmpun>
 8001ea6:	bb68      	cbnz	r0, 8001f04 <_printf_float+0xb8>
 8001ea8:	f04f 32ff 	mov.w	r2, #4294967295
 8001eac:	4ba2      	ldr	r3, [pc, #648]	; (8002138 <_printf_float+0x2ec>)
 8001eae:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8001eb0:	4638      	mov	r0, r7
 8001eb2:	f7fe fe3d 	bl	8000b30 <__aeabi_dcmple>
 8001eb6:	bb28      	cbnz	r0, 8001f04 <_printf_float+0xb8>
 8001eb8:	2200      	movs	r2, #0
 8001eba:	2300      	movs	r3, #0
 8001ebc:	4638      	mov	r0, r7
 8001ebe:	4649      	mov	r1, r9
 8001ec0:	f7fe fe2c 	bl	8000b1c <__aeabi_dcmplt>
 8001ec4:	b110      	cbz	r0, 8001ecc <_printf_float+0x80>
 8001ec6:	232d      	movs	r3, #45	; 0x2d
 8001ec8:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8001ecc:	4f9b      	ldr	r7, [pc, #620]	; (800213c <_printf_float+0x2f0>)
 8001ece:	4b9c      	ldr	r3, [pc, #624]	; (8002140 <_printf_float+0x2f4>)
 8001ed0:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
 8001ed4:	bf98      	it	ls
 8001ed6:	461f      	movls	r7, r3
 8001ed8:	2303      	movs	r3, #3
 8001eda:	6123      	str	r3, [r4, #16]
 8001edc:	f02a 0304 	bic.w	r3, sl, #4
 8001ee0:	6023      	str	r3, [r4, #0]
 8001ee2:	f04f 0900 	mov.w	r9, #0
 8001ee6:	9600      	str	r6, [sp, #0]
 8001ee8:	465b      	mov	r3, fp
 8001eea:	aa0f      	add	r2, sp, #60	; 0x3c
 8001eec:	4621      	mov	r1, r4
 8001eee:	4628      	mov	r0, r5
 8001ef0:	f000 f9e2 	bl	80022b8 <_printf_common>
 8001ef4:	3001      	adds	r0, #1
 8001ef6:	f040 8090 	bne.w	800201a <_printf_float+0x1ce>
 8001efa:	f04f 30ff 	mov.w	r0, #4294967295
 8001efe:	b011      	add	sp, #68	; 0x44
 8001f00:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8001f04:	463a      	mov	r2, r7
 8001f06:	464b      	mov	r3, r9
 8001f08:	4638      	mov	r0, r7
 8001f0a:	4649      	mov	r1, r9
 8001f0c:	f7fe fe2e 	bl	8000b6c <__aeabi_dcmpun>
 8001f10:	b110      	cbz	r0, 8001f18 <_printf_float+0xcc>
 8001f12:	4f8c      	ldr	r7, [pc, #560]	; (8002144 <_printf_float+0x2f8>)
 8001f14:	4b8c      	ldr	r3, [pc, #560]	; (8002148 <_printf_float+0x2fc>)
 8001f16:	e7db      	b.n	8001ed0 <_printf_float+0x84>
 8001f18:	6863      	ldr	r3, [r4, #4]
 8001f1a:	1c59      	adds	r1, r3, #1
 8001f1c:	f44a 6280 	orr.w	r2, sl, #1024	; 0x400
 8001f20:	a90e      	add	r1, sp, #56	; 0x38
 8001f22:	a80d      	add	r0, sp, #52	; 0x34
 8001f24:	d140      	bne.n	8001fa8 <_printf_float+0x15c>
 8001f26:	2306      	movs	r3, #6
 8001f28:	6063      	str	r3, [r4, #4]
 8001f2a:	f10d 0333 	add.w	r3, sp, #51	; 0x33
 8001f2e:	e9cd 2301 	strd	r2, r3, [sp, #4]
 8001f32:	f04f 0c00 	mov.w	ip, #0
 8001f36:	6863      	ldr	r3, [r4, #4]
 8001f38:	6022      	str	r2, [r4, #0]
 8001f3a:	e9cd 0803 	strd	r0, r8, [sp, #12]
 8001f3e:	9300      	str	r3, [sp, #0]
 8001f40:	463a      	mov	r2, r7
 8001f42:	464b      	mov	r3, r9
 8001f44:	e9cd 1c05 	strd	r1, ip, [sp, #20]
 8001f48:	4628      	mov	r0, r5
 8001f4a:	f7ff feef 	bl	8001d2c <__cvt>
 8001f4e:	f008 03df 	and.w	r3, r8, #223	; 0xdf
 8001f52:	2b47      	cmp	r3, #71	; 0x47
 8001f54:	4607      	mov	r7, r0
 8001f56:	d109      	bne.n	8001f6c <_printf_float+0x120>
 8001f58:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8001f5a:	1cd8      	adds	r0, r3, #3
 8001f5c:	db02      	blt.n	8001f64 <_printf_float+0x118>
 8001f5e:	6862      	ldr	r2, [r4, #4]
 8001f60:	4293      	cmp	r3, r2
 8001f62:	dd47      	ble.n	8001ff4 <_printf_float+0x1a8>
 8001f64:	f1a8 0802 	sub.w	r8, r8, #2
 8001f68:	fa5f f888 	uxtb.w	r8, r8
 8001f6c:	f1b8 0f65 	cmp.w	r8, #101	; 0x65
 8001f70:	990d      	ldr	r1, [sp, #52]	; 0x34
 8001f72:	d824      	bhi.n	8001fbe <_printf_float+0x172>
 8001f74:	3901      	subs	r1, #1
 8001f76:	4642      	mov	r2, r8
 8001f78:	f104 0050 	add.w	r0, r4, #80	; 0x50
 8001f7c:	910d      	str	r1, [sp, #52]	; 0x34
 8001f7e:	f7ff ff31 	bl	8001de4 <__exponent>
 8001f82:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8001f84:	1813      	adds	r3, r2, r0
 8001f86:	2a01      	cmp	r2, #1
 8001f88:	4681      	mov	r9, r0
 8001f8a:	6123      	str	r3, [r4, #16]
 8001f8c:	dc02      	bgt.n	8001f94 <_printf_float+0x148>
 8001f8e:	6822      	ldr	r2, [r4, #0]
 8001f90:	07d1      	lsls	r1, r2, #31
 8001f92:	d501      	bpl.n	8001f98 <_printf_float+0x14c>
 8001f94:	3301      	adds	r3, #1
 8001f96:	6123      	str	r3, [r4, #16]
 8001f98:	f89d 3033 	ldrb.w	r3, [sp, #51]	; 0x33
 8001f9c:	2b00      	cmp	r3, #0
 8001f9e:	d0a2      	beq.n	8001ee6 <_printf_float+0x9a>
 8001fa0:	232d      	movs	r3, #45	; 0x2d
 8001fa2:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8001fa6:	e79e      	b.n	8001ee6 <_printf_float+0x9a>
 8001fa8:	f1b8 0f67 	cmp.w	r8, #103	; 0x67
 8001fac:	f000 816e 	beq.w	800228c <_printf_float+0x440>
 8001fb0:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
 8001fb4:	d1b9      	bne.n	8001f2a <_printf_float+0xde>
 8001fb6:	2b00      	cmp	r3, #0
 8001fb8:	d1b7      	bne.n	8001f2a <_printf_float+0xde>
 8001fba:	2301      	movs	r3, #1
 8001fbc:	e7b4      	b.n	8001f28 <_printf_float+0xdc>
 8001fbe:	f1b8 0f66 	cmp.w	r8, #102	; 0x66
 8001fc2:	d119      	bne.n	8001ff8 <_printf_float+0x1ac>
 8001fc4:	2900      	cmp	r1, #0
 8001fc6:	6863      	ldr	r3, [r4, #4]
 8001fc8:	dd0c      	ble.n	8001fe4 <_printf_float+0x198>
 8001fca:	6121      	str	r1, [r4, #16]
 8001fcc:	b913      	cbnz	r3, 8001fd4 <_printf_float+0x188>
 8001fce:	6822      	ldr	r2, [r4, #0]
 8001fd0:	07d2      	lsls	r2, r2, #31
 8001fd2:	d502      	bpl.n	8001fda <_printf_float+0x18e>
 8001fd4:	3301      	adds	r3, #1
 8001fd6:	440b      	add	r3, r1
 8001fd8:	6123      	str	r3, [r4, #16]
 8001fda:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8001fdc:	65a3      	str	r3, [r4, #88]	; 0x58
 8001fde:	f04f 0900 	mov.w	r9, #0
 8001fe2:	e7d9      	b.n	8001f98 <_printf_float+0x14c>
 8001fe4:	b913      	cbnz	r3, 8001fec <_printf_float+0x1a0>
 8001fe6:	6822      	ldr	r2, [r4, #0]
 8001fe8:	07d0      	lsls	r0, r2, #31
 8001fea:	d501      	bpl.n	8001ff0 <_printf_float+0x1a4>
 8001fec:	3302      	adds	r3, #2
 8001fee:	e7f3      	b.n	8001fd8 <_printf_float+0x18c>
 8001ff0:	2301      	movs	r3, #1
 8001ff2:	e7f1      	b.n	8001fd8 <_printf_float+0x18c>
 8001ff4:	f04f 0867 	mov.w	r8, #103	; 0x67
 8001ff8:	e9dd 320d 	ldrd	r3, r2, [sp, #52]	; 0x34
 8001ffc:	4293      	cmp	r3, r2
 8001ffe:	db05      	blt.n	800200c <_printf_float+0x1c0>
 8002000:	6822      	ldr	r2, [r4, #0]
 8002002:	6123      	str	r3, [r4, #16]
 8002004:	07d1      	lsls	r1, r2, #31
 8002006:	d5e8      	bpl.n	8001fda <_printf_float+0x18e>
 8002008:	3301      	adds	r3, #1
 800200a:	e7e5      	b.n	8001fd8 <_printf_float+0x18c>
 800200c:	2b00      	cmp	r3, #0
 800200e:	bfd4      	ite	le
 8002010:	f1c3 0302 	rsble	r3, r3, #2
 8002014:	2301      	movgt	r3, #1
 8002016:	4413      	add	r3, r2
 8002018:	e7de      	b.n	8001fd8 <_printf_float+0x18c>
 800201a:	6823      	ldr	r3, [r4, #0]
 800201c:	055a      	lsls	r2, r3, #21
 800201e:	d407      	bmi.n	8002030 <_printf_float+0x1e4>
 8002020:	6923      	ldr	r3, [r4, #16]
 8002022:	463a      	mov	r2, r7
 8002024:	4659      	mov	r1, fp
 8002026:	4628      	mov	r0, r5
 8002028:	47b0      	blx	r6
 800202a:	3001      	adds	r0, #1
 800202c:	d129      	bne.n	8002082 <_printf_float+0x236>
 800202e:	e764      	b.n	8001efa <_printf_float+0xae>
 8002030:	f1b8 0f65 	cmp.w	r8, #101	; 0x65
 8002034:	f240 80d7 	bls.w	80021e6 <_printf_float+0x39a>
 8002038:	2200      	movs	r2, #0
 800203a:	2300      	movs	r3, #0
 800203c:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 8002040:	f7fe fd62 	bl	8000b08 <__aeabi_dcmpeq>
 8002044:	b388      	cbz	r0, 80020aa <_printf_float+0x25e>
 8002046:	2301      	movs	r3, #1
 8002048:	4a40      	ldr	r2, [pc, #256]	; (800214c <_printf_float+0x300>)
 800204a:	4659      	mov	r1, fp
 800204c:	4628      	mov	r0, r5
 800204e:	47b0      	blx	r6
 8002050:	3001      	adds	r0, #1
 8002052:	f43f af52 	beq.w	8001efa <_printf_float+0xae>
 8002056:	e9dd 230d 	ldrd	r2, r3, [sp, #52]	; 0x34
 800205a:	429a      	cmp	r2, r3
 800205c:	db02      	blt.n	8002064 <_printf_float+0x218>
 800205e:	6823      	ldr	r3, [r4, #0]
 8002060:	07d8      	lsls	r0, r3, #31
 8002062:	d50e      	bpl.n	8002082 <_printf_float+0x236>
 8002064:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8002068:	4659      	mov	r1, fp
 800206a:	4628      	mov	r0, r5
 800206c:	47b0      	blx	r6
 800206e:	3001      	adds	r0, #1
 8002070:	f43f af43 	beq.w	8001efa <_printf_float+0xae>
 8002074:	2700      	movs	r7, #0
 8002076:	f104 081a 	add.w	r8, r4, #26
 800207a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800207c:	3b01      	subs	r3, #1
 800207e:	42bb      	cmp	r3, r7
 8002080:	dc09      	bgt.n	8002096 <_printf_float+0x24a>
 8002082:	6823      	ldr	r3, [r4, #0]
 8002084:	079f      	lsls	r7, r3, #30
 8002086:	f100 80fd 	bmi.w	8002284 <_printf_float+0x438>
 800208a:	68e0      	ldr	r0, [r4, #12]
 800208c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800208e:	4298      	cmp	r0, r3
 8002090:	bfb8      	it	lt
 8002092:	4618      	movlt	r0, r3
 8002094:	e733      	b.n	8001efe <_printf_float+0xb2>
 8002096:	2301      	movs	r3, #1
 8002098:	4642      	mov	r2, r8
 800209a:	4659      	mov	r1, fp
 800209c:	4628      	mov	r0, r5
 800209e:	47b0      	blx	r6
 80020a0:	3001      	adds	r0, #1
 80020a2:	f43f af2a 	beq.w	8001efa <_printf_float+0xae>
 80020a6:	3701      	adds	r7, #1
 80020a8:	e7e7      	b.n	800207a <_printf_float+0x22e>
 80020aa:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80020ac:	2b00      	cmp	r3, #0
 80020ae:	dc2b      	bgt.n	8002108 <_printf_float+0x2bc>
 80020b0:	2301      	movs	r3, #1
 80020b2:	4a26      	ldr	r2, [pc, #152]	; (800214c <_printf_float+0x300>)
 80020b4:	4659      	mov	r1, fp
 80020b6:	4628      	mov	r0, r5
 80020b8:	47b0      	blx	r6
 80020ba:	3001      	adds	r0, #1
 80020bc:	f43f af1d 	beq.w	8001efa <_printf_float+0xae>
 80020c0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80020c2:	b923      	cbnz	r3, 80020ce <_printf_float+0x282>
 80020c4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80020c6:	b913      	cbnz	r3, 80020ce <_printf_float+0x282>
 80020c8:	6823      	ldr	r3, [r4, #0]
 80020ca:	07d9      	lsls	r1, r3, #31
 80020cc:	d5d9      	bpl.n	8002082 <_printf_float+0x236>
 80020ce:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 80020d2:	4659      	mov	r1, fp
 80020d4:	4628      	mov	r0, r5
 80020d6:	47b0      	blx	r6
 80020d8:	3001      	adds	r0, #1
 80020da:	f43f af0e 	beq.w	8001efa <_printf_float+0xae>
 80020de:	f04f 0800 	mov.w	r8, #0
 80020e2:	f104 091a 	add.w	r9, r4, #26
 80020e6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80020e8:	425b      	negs	r3, r3
 80020ea:	4543      	cmp	r3, r8
 80020ec:	dc01      	bgt.n	80020f2 <_printf_float+0x2a6>
 80020ee:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80020f0:	e797      	b.n	8002022 <_printf_float+0x1d6>
 80020f2:	2301      	movs	r3, #1
 80020f4:	464a      	mov	r2, r9
 80020f6:	4659      	mov	r1, fp
 80020f8:	4628      	mov	r0, r5
 80020fa:	47b0      	blx	r6
 80020fc:	3001      	adds	r0, #1
 80020fe:	f43f aefc 	beq.w	8001efa <_printf_float+0xae>
 8002102:	f108 0801 	add.w	r8, r8, #1
 8002106:	e7ee      	b.n	80020e6 <_printf_float+0x29a>
 8002108:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800210a:	6da3      	ldr	r3, [r4, #88]	; 0x58
 800210c:	429a      	cmp	r2, r3
 800210e:	bfa8      	it	ge
 8002110:	461a      	movge	r2, r3
 8002112:	2a00      	cmp	r2, #0
 8002114:	4690      	mov	r8, r2
 8002116:	dd07      	ble.n	8002128 <_printf_float+0x2dc>
 8002118:	4613      	mov	r3, r2
 800211a:	4659      	mov	r1, fp
 800211c:	463a      	mov	r2, r7
 800211e:	4628      	mov	r0, r5
 8002120:	47b0      	blx	r6
 8002122:	3001      	adds	r0, #1
 8002124:	f43f aee9 	beq.w	8001efa <_printf_float+0xae>
 8002128:	f104 031a 	add.w	r3, r4, #26
 800212c:	f04f 0a00 	mov.w	sl, #0
 8002130:	ea28 78e8 	bic.w	r8, r8, r8, asr #31
 8002134:	930b      	str	r3, [sp, #44]	; 0x2c
 8002136:	e015      	b.n	8002164 <_printf_float+0x318>
 8002138:	7fefffff 	.word	0x7fefffff
 800213c:	08006724 	.word	0x08006724
 8002140:	08006720 	.word	0x08006720
 8002144:	0800672c 	.word	0x0800672c
 8002148:	08006728 	.word	0x08006728
 800214c:	08006730 	.word	0x08006730
 8002150:	2301      	movs	r3, #1
 8002152:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8002154:	4659      	mov	r1, fp
 8002156:	4628      	mov	r0, r5
 8002158:	47b0      	blx	r6
 800215a:	3001      	adds	r0, #1
 800215c:	f43f aecd 	beq.w	8001efa <_printf_float+0xae>
 8002160:	f10a 0a01 	add.w	sl, sl, #1
 8002164:	f8d4 9058 	ldr.w	r9, [r4, #88]	; 0x58
 8002168:	eba9 0308 	sub.w	r3, r9, r8
 800216c:	4553      	cmp	r3, sl
 800216e:	dcef      	bgt.n	8002150 <_printf_float+0x304>
 8002170:	e9dd 230d 	ldrd	r2, r3, [sp, #52]	; 0x34
 8002174:	429a      	cmp	r2, r3
 8002176:	444f      	add	r7, r9
 8002178:	db14      	blt.n	80021a4 <_printf_float+0x358>
 800217a:	6823      	ldr	r3, [r4, #0]
 800217c:	07da      	lsls	r2, r3, #31
 800217e:	d411      	bmi.n	80021a4 <_printf_float+0x358>
 8002180:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8002182:	990d      	ldr	r1, [sp, #52]	; 0x34
 8002184:	eba3 0209 	sub.w	r2, r3, r9
 8002188:	eba3 0901 	sub.w	r9, r3, r1
 800218c:	4591      	cmp	r9, r2
 800218e:	bfa8      	it	ge
 8002190:	4691      	movge	r9, r2
 8002192:	f1b9 0f00 	cmp.w	r9, #0
 8002196:	dc0d      	bgt.n	80021b4 <_printf_float+0x368>
 8002198:	2700      	movs	r7, #0
 800219a:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 800219e:	f104 081a 	add.w	r8, r4, #26
 80021a2:	e018      	b.n	80021d6 <_printf_float+0x38a>
 80021a4:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 80021a8:	4659      	mov	r1, fp
 80021aa:	4628      	mov	r0, r5
 80021ac:	47b0      	blx	r6
 80021ae:	3001      	adds	r0, #1
 80021b0:	d1e6      	bne.n	8002180 <_printf_float+0x334>
 80021b2:	e6a2      	b.n	8001efa <_printf_float+0xae>
 80021b4:	464b      	mov	r3, r9
 80021b6:	463a      	mov	r2, r7
 80021b8:	4659      	mov	r1, fp
 80021ba:	4628      	mov	r0, r5
 80021bc:	47b0      	blx	r6
 80021be:	3001      	adds	r0, #1
 80021c0:	d1ea      	bne.n	8002198 <_printf_float+0x34c>
 80021c2:	e69a      	b.n	8001efa <_printf_float+0xae>
 80021c4:	2301      	movs	r3, #1
 80021c6:	4642      	mov	r2, r8
 80021c8:	4659      	mov	r1, fp
 80021ca:	4628      	mov	r0, r5
 80021cc:	47b0      	blx	r6
 80021ce:	3001      	adds	r0, #1
 80021d0:	f43f ae93 	beq.w	8001efa <_printf_float+0xae>
 80021d4:	3701      	adds	r7, #1
 80021d6:	e9dd 230d 	ldrd	r2, r3, [sp, #52]	; 0x34
 80021da:	1a9b      	subs	r3, r3, r2
 80021dc:	eba3 0309 	sub.w	r3, r3, r9
 80021e0:	42bb      	cmp	r3, r7
 80021e2:	dcef      	bgt.n	80021c4 <_printf_float+0x378>
 80021e4:	e74d      	b.n	8002082 <_printf_float+0x236>
 80021e6:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80021e8:	2a01      	cmp	r2, #1
 80021ea:	dc01      	bgt.n	80021f0 <_printf_float+0x3a4>
 80021ec:	07db      	lsls	r3, r3, #31
 80021ee:	d538      	bpl.n	8002262 <_printf_float+0x416>
 80021f0:	2301      	movs	r3, #1
 80021f2:	463a      	mov	r2, r7
 80021f4:	4659      	mov	r1, fp
 80021f6:	4628      	mov	r0, r5
 80021f8:	47b0      	blx	r6
 80021fa:	3001      	adds	r0, #1
 80021fc:	f43f ae7d 	beq.w	8001efa <_printf_float+0xae>
 8002200:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8002204:	4659      	mov	r1, fp
 8002206:	4628      	mov	r0, r5
 8002208:	47b0      	blx	r6
 800220a:	3001      	adds	r0, #1
 800220c:	f107 0701 	add.w	r7, r7, #1
 8002210:	f43f ae73 	beq.w	8001efa <_printf_float+0xae>
 8002214:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8002216:	2200      	movs	r2, #0
 8002218:	f103 38ff 	add.w	r8, r3, #4294967295
 800221c:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 8002220:	2300      	movs	r3, #0
 8002222:	f7fe fc71 	bl	8000b08 <__aeabi_dcmpeq>
 8002226:	b9c0      	cbnz	r0, 800225a <_printf_float+0x40e>
 8002228:	4643      	mov	r3, r8
 800222a:	463a      	mov	r2, r7
 800222c:	4659      	mov	r1, fp
 800222e:	4628      	mov	r0, r5
 8002230:	47b0      	blx	r6
 8002232:	3001      	adds	r0, #1
 8002234:	d10d      	bne.n	8002252 <_printf_float+0x406>
 8002236:	e660      	b.n	8001efa <_printf_float+0xae>
 8002238:	2301      	movs	r3, #1
 800223a:	4642      	mov	r2, r8
 800223c:	4659      	mov	r1, fp
 800223e:	4628      	mov	r0, r5
 8002240:	47b0      	blx	r6
 8002242:	3001      	adds	r0, #1
 8002244:	f43f ae59 	beq.w	8001efa <_printf_float+0xae>
 8002248:	3701      	adds	r7, #1
 800224a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800224c:	3b01      	subs	r3, #1
 800224e:	42bb      	cmp	r3, r7
 8002250:	dcf2      	bgt.n	8002238 <_printf_float+0x3ec>
 8002252:	464b      	mov	r3, r9
 8002254:	f104 0250 	add.w	r2, r4, #80	; 0x50
 8002258:	e6e4      	b.n	8002024 <_printf_float+0x1d8>
 800225a:	2700      	movs	r7, #0
 800225c:	f104 081a 	add.w	r8, r4, #26
 8002260:	e7f3      	b.n	800224a <_printf_float+0x3fe>
 8002262:	2301      	movs	r3, #1
 8002264:	e7e1      	b.n	800222a <_printf_float+0x3de>
 8002266:	2301      	movs	r3, #1
 8002268:	4642      	mov	r2, r8
 800226a:	4659      	mov	r1, fp
 800226c:	4628      	mov	r0, r5
 800226e:	47b0      	blx	r6
 8002270:	3001      	adds	r0, #1
 8002272:	f43f ae42 	beq.w	8001efa <_printf_float+0xae>
 8002276:	3701      	adds	r7, #1
 8002278:	68e3      	ldr	r3, [r4, #12]
 800227a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800227c:	1a9b      	subs	r3, r3, r2
 800227e:	42bb      	cmp	r3, r7
 8002280:	dcf1      	bgt.n	8002266 <_printf_float+0x41a>
 8002282:	e702      	b.n	800208a <_printf_float+0x23e>
 8002284:	2700      	movs	r7, #0
 8002286:	f104 0819 	add.w	r8, r4, #25
 800228a:	e7f5      	b.n	8002278 <_printf_float+0x42c>
 800228c:	2b00      	cmp	r3, #0
 800228e:	f43f ae94 	beq.w	8001fba <_printf_float+0x16e>
 8002292:	f04f 0c00 	mov.w	ip, #0
 8002296:	e9cd 1c05 	strd	r1, ip, [sp, #20]
 800229a:	f10d 0133 	add.w	r1, sp, #51	; 0x33
 800229e:	6022      	str	r2, [r4, #0]
 80022a0:	e9cd 0803 	strd	r0, r8, [sp, #12]
 80022a4:	e9cd 2101 	strd	r2, r1, [sp, #4]
 80022a8:	9300      	str	r3, [sp, #0]
 80022aa:	463a      	mov	r2, r7
 80022ac:	464b      	mov	r3, r9
 80022ae:	4628      	mov	r0, r5
 80022b0:	f7ff fd3c 	bl	8001d2c <__cvt>
 80022b4:	4607      	mov	r7, r0
 80022b6:	e64f      	b.n	8001f58 <_printf_float+0x10c>

080022b8 <_printf_common>:
 80022b8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80022bc:	4691      	mov	r9, r2
 80022be:	461f      	mov	r7, r3
 80022c0:	688a      	ldr	r2, [r1, #8]
 80022c2:	690b      	ldr	r3, [r1, #16]
 80022c4:	f8dd 8020 	ldr.w	r8, [sp, #32]
 80022c8:	4293      	cmp	r3, r2
 80022ca:	bfb8      	it	lt
 80022cc:	4613      	movlt	r3, r2
 80022ce:	f8c9 3000 	str.w	r3, [r9]
 80022d2:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 80022d6:	4606      	mov	r6, r0
 80022d8:	460c      	mov	r4, r1
 80022da:	b112      	cbz	r2, 80022e2 <_printf_common+0x2a>
 80022dc:	3301      	adds	r3, #1
 80022de:	f8c9 3000 	str.w	r3, [r9]
 80022e2:	6823      	ldr	r3, [r4, #0]
 80022e4:	0699      	lsls	r1, r3, #26
 80022e6:	bf42      	ittt	mi
 80022e8:	f8d9 3000 	ldrmi.w	r3, [r9]
 80022ec:	3302      	addmi	r3, #2
 80022ee:	f8c9 3000 	strmi.w	r3, [r9]
 80022f2:	6825      	ldr	r5, [r4, #0]
 80022f4:	f015 0506 	ands.w	r5, r5, #6
 80022f8:	d107      	bne.n	800230a <_printf_common+0x52>
 80022fa:	f104 0a19 	add.w	sl, r4, #25
 80022fe:	68e3      	ldr	r3, [r4, #12]
 8002300:	f8d9 2000 	ldr.w	r2, [r9]
 8002304:	1a9b      	subs	r3, r3, r2
 8002306:	42ab      	cmp	r3, r5
 8002308:	dc28      	bgt.n	800235c <_printf_common+0xa4>
 800230a:	f894 3043 	ldrb.w	r3, [r4, #67]	; 0x43
 800230e:	6822      	ldr	r2, [r4, #0]
 8002310:	3300      	adds	r3, #0
 8002312:	bf18      	it	ne
 8002314:	2301      	movne	r3, #1
 8002316:	0692      	lsls	r2, r2, #26
 8002318:	d42d      	bmi.n	8002376 <_printf_common+0xbe>
 800231a:	f104 0243 	add.w	r2, r4, #67	; 0x43
 800231e:	4639      	mov	r1, r7
 8002320:	4630      	mov	r0, r6
 8002322:	47c0      	blx	r8
 8002324:	3001      	adds	r0, #1
 8002326:	d020      	beq.n	800236a <_printf_common+0xb2>
 8002328:	6823      	ldr	r3, [r4, #0]
 800232a:	68e5      	ldr	r5, [r4, #12]
 800232c:	f8d9 2000 	ldr.w	r2, [r9]
 8002330:	f003 0306 	and.w	r3, r3, #6
 8002334:	2b04      	cmp	r3, #4
 8002336:	bf08      	it	eq
 8002338:	1aad      	subeq	r5, r5, r2
 800233a:	68a3      	ldr	r3, [r4, #8]
 800233c:	6922      	ldr	r2, [r4, #16]
 800233e:	bf0c      	ite	eq
 8002340:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8002344:	2500      	movne	r5, #0
 8002346:	4293      	cmp	r3, r2
 8002348:	bfc4      	itt	gt
 800234a:	1a9b      	subgt	r3, r3, r2
 800234c:	18ed      	addgt	r5, r5, r3
 800234e:	f04f 0900 	mov.w	r9, #0
 8002352:	341a      	adds	r4, #26
 8002354:	454d      	cmp	r5, r9
 8002356:	d11a      	bne.n	800238e <_printf_common+0xd6>
 8002358:	2000      	movs	r0, #0
 800235a:	e008      	b.n	800236e <_printf_common+0xb6>
 800235c:	2301      	movs	r3, #1
 800235e:	4652      	mov	r2, sl
 8002360:	4639      	mov	r1, r7
 8002362:	4630      	mov	r0, r6
 8002364:	47c0      	blx	r8
 8002366:	3001      	adds	r0, #1
 8002368:	d103      	bne.n	8002372 <_printf_common+0xba>
 800236a:	f04f 30ff 	mov.w	r0, #4294967295
 800236e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8002372:	3501      	adds	r5, #1
 8002374:	e7c3      	b.n	80022fe <_printf_common+0x46>
 8002376:	18e1      	adds	r1, r4, r3
 8002378:	1c5a      	adds	r2, r3, #1
 800237a:	2030      	movs	r0, #48	; 0x30
 800237c:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8002380:	4422      	add	r2, r4
 8002382:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8002386:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 800238a:	3302      	adds	r3, #2
 800238c:	e7c5      	b.n	800231a <_printf_common+0x62>
 800238e:	2301      	movs	r3, #1
 8002390:	4622      	mov	r2, r4
 8002392:	4639      	mov	r1, r7
 8002394:	4630      	mov	r0, r6
 8002396:	47c0      	blx	r8
 8002398:	3001      	adds	r0, #1
 800239a:	d0e6      	beq.n	800236a <_printf_common+0xb2>
 800239c:	f109 0901 	add.w	r9, r9, #1
 80023a0:	e7d8      	b.n	8002354 <_printf_common+0x9c>
	...

080023a4 <_printf_i>:
 80023a4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80023a8:	f101 0c43 	add.w	ip, r1, #67	; 0x43
 80023ac:	460c      	mov	r4, r1
 80023ae:	7e09      	ldrb	r1, [r1, #24]
 80023b0:	b085      	sub	sp, #20
 80023b2:	296e      	cmp	r1, #110	; 0x6e
 80023b4:	4617      	mov	r7, r2
 80023b6:	4606      	mov	r6, r0
 80023b8:	4698      	mov	r8, r3
 80023ba:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80023bc:	f000 80b3 	beq.w	8002526 <_printf_i+0x182>
 80023c0:	d822      	bhi.n	8002408 <_printf_i+0x64>
 80023c2:	2963      	cmp	r1, #99	; 0x63
 80023c4:	d036      	beq.n	8002434 <_printf_i+0x90>
 80023c6:	d80a      	bhi.n	80023de <_printf_i+0x3a>
 80023c8:	2900      	cmp	r1, #0
 80023ca:	f000 80b9 	beq.w	8002540 <_printf_i+0x19c>
 80023ce:	2958      	cmp	r1, #88	; 0x58
 80023d0:	f000 8083 	beq.w	80024da <_printf_i+0x136>
 80023d4:	f104 0542 	add.w	r5, r4, #66	; 0x42
 80023d8:	f884 1042 	strb.w	r1, [r4, #66]	; 0x42
 80023dc:	e032      	b.n	8002444 <_printf_i+0xa0>
 80023de:	2964      	cmp	r1, #100	; 0x64
 80023e0:	d001      	beq.n	80023e6 <_printf_i+0x42>
 80023e2:	2969      	cmp	r1, #105	; 0x69
 80023e4:	d1f6      	bne.n	80023d4 <_printf_i+0x30>
 80023e6:	6820      	ldr	r0, [r4, #0]
 80023e8:	6813      	ldr	r3, [r2, #0]
 80023ea:	0605      	lsls	r5, r0, #24
 80023ec:	f103 0104 	add.w	r1, r3, #4
 80023f0:	d52a      	bpl.n	8002448 <_printf_i+0xa4>
 80023f2:	681b      	ldr	r3, [r3, #0]
 80023f4:	6011      	str	r1, [r2, #0]
 80023f6:	2b00      	cmp	r3, #0
 80023f8:	da03      	bge.n	8002402 <_printf_i+0x5e>
 80023fa:	222d      	movs	r2, #45	; 0x2d
 80023fc:	425b      	negs	r3, r3
 80023fe:	f884 2043 	strb.w	r2, [r4, #67]	; 0x43
 8002402:	486f      	ldr	r0, [pc, #444]	; (80025c0 <_printf_i+0x21c>)
 8002404:	220a      	movs	r2, #10
 8002406:	e039      	b.n	800247c <_printf_i+0xd8>
 8002408:	2973      	cmp	r1, #115	; 0x73
 800240a:	f000 809d 	beq.w	8002548 <_printf_i+0x1a4>
 800240e:	d808      	bhi.n	8002422 <_printf_i+0x7e>
 8002410:	296f      	cmp	r1, #111	; 0x6f
 8002412:	d020      	beq.n	8002456 <_printf_i+0xb2>
 8002414:	2970      	cmp	r1, #112	; 0x70
 8002416:	d1dd      	bne.n	80023d4 <_printf_i+0x30>
 8002418:	6823      	ldr	r3, [r4, #0]
 800241a:	f043 0320 	orr.w	r3, r3, #32
 800241e:	6023      	str	r3, [r4, #0]
 8002420:	e003      	b.n	800242a <_printf_i+0x86>
 8002422:	2975      	cmp	r1, #117	; 0x75
 8002424:	d017      	beq.n	8002456 <_printf_i+0xb2>
 8002426:	2978      	cmp	r1, #120	; 0x78
 8002428:	d1d4      	bne.n	80023d4 <_printf_i+0x30>
 800242a:	2378      	movs	r3, #120	; 0x78
 800242c:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8002430:	4864      	ldr	r0, [pc, #400]	; (80025c4 <_printf_i+0x220>)
 8002432:	e055      	b.n	80024e0 <_printf_i+0x13c>
 8002434:	6813      	ldr	r3, [r2, #0]
 8002436:	1d19      	adds	r1, r3, #4
 8002438:	681b      	ldr	r3, [r3, #0]
 800243a:	6011      	str	r1, [r2, #0]
 800243c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8002440:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8002444:	2301      	movs	r3, #1
 8002446:	e08c      	b.n	8002562 <_printf_i+0x1be>
 8002448:	681b      	ldr	r3, [r3, #0]
 800244a:	6011      	str	r1, [r2, #0]
 800244c:	f010 0f40 	tst.w	r0, #64	; 0x40
 8002450:	bf18      	it	ne
 8002452:	b21b      	sxthne	r3, r3
 8002454:	e7cf      	b.n	80023f6 <_printf_i+0x52>
 8002456:	6813      	ldr	r3, [r2, #0]
 8002458:	6825      	ldr	r5, [r4, #0]
 800245a:	1d18      	adds	r0, r3, #4
 800245c:	6010      	str	r0, [r2, #0]
 800245e:	0628      	lsls	r0, r5, #24
 8002460:	d501      	bpl.n	8002466 <_printf_i+0xc2>
 8002462:	681b      	ldr	r3, [r3, #0]
 8002464:	e002      	b.n	800246c <_printf_i+0xc8>
 8002466:	0668      	lsls	r0, r5, #25
 8002468:	d5fb      	bpl.n	8002462 <_printf_i+0xbe>
 800246a:	881b      	ldrh	r3, [r3, #0]
 800246c:	4854      	ldr	r0, [pc, #336]	; (80025c0 <_printf_i+0x21c>)
 800246e:	296f      	cmp	r1, #111	; 0x6f
 8002470:	bf14      	ite	ne
 8002472:	220a      	movne	r2, #10
 8002474:	2208      	moveq	r2, #8
 8002476:	2100      	movs	r1, #0
 8002478:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 800247c:	6865      	ldr	r5, [r4, #4]
 800247e:	60a5      	str	r5, [r4, #8]
 8002480:	2d00      	cmp	r5, #0
 8002482:	f2c0 8095 	blt.w	80025b0 <_printf_i+0x20c>
 8002486:	6821      	ldr	r1, [r4, #0]
 8002488:	f021 0104 	bic.w	r1, r1, #4
 800248c:	6021      	str	r1, [r4, #0]
 800248e:	2b00      	cmp	r3, #0
 8002490:	d13d      	bne.n	800250e <_printf_i+0x16a>
 8002492:	2d00      	cmp	r5, #0
 8002494:	f040 808e 	bne.w	80025b4 <_printf_i+0x210>
 8002498:	4665      	mov	r5, ip
 800249a:	2a08      	cmp	r2, #8
 800249c:	d10b      	bne.n	80024b6 <_printf_i+0x112>
 800249e:	6823      	ldr	r3, [r4, #0]
 80024a0:	07db      	lsls	r3, r3, #31
 80024a2:	d508      	bpl.n	80024b6 <_printf_i+0x112>
 80024a4:	6923      	ldr	r3, [r4, #16]
 80024a6:	6862      	ldr	r2, [r4, #4]
 80024a8:	429a      	cmp	r2, r3
 80024aa:	bfde      	ittt	le
 80024ac:	2330      	movle	r3, #48	; 0x30
 80024ae:	f805 3c01 	strble.w	r3, [r5, #-1]
 80024b2:	f105 35ff 	addle.w	r5, r5, #4294967295
 80024b6:	ebac 0305 	sub.w	r3, ip, r5
 80024ba:	6123      	str	r3, [r4, #16]
 80024bc:	f8cd 8000 	str.w	r8, [sp]
 80024c0:	463b      	mov	r3, r7
 80024c2:	aa03      	add	r2, sp, #12
 80024c4:	4621      	mov	r1, r4
 80024c6:	4630      	mov	r0, r6
 80024c8:	f7ff fef6 	bl	80022b8 <_printf_common>
 80024cc:	3001      	adds	r0, #1
 80024ce:	d14d      	bne.n	800256c <_printf_i+0x1c8>
 80024d0:	f04f 30ff 	mov.w	r0, #4294967295
 80024d4:	b005      	add	sp, #20
 80024d6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80024da:	4839      	ldr	r0, [pc, #228]	; (80025c0 <_printf_i+0x21c>)
 80024dc:	f884 1045 	strb.w	r1, [r4, #69]	; 0x45
 80024e0:	6813      	ldr	r3, [r2, #0]
 80024e2:	6821      	ldr	r1, [r4, #0]
 80024e4:	1d1d      	adds	r5, r3, #4
 80024e6:	681b      	ldr	r3, [r3, #0]
 80024e8:	6015      	str	r5, [r2, #0]
 80024ea:	060a      	lsls	r2, r1, #24
 80024ec:	d50b      	bpl.n	8002506 <_printf_i+0x162>
 80024ee:	07ca      	lsls	r2, r1, #31
 80024f0:	bf44      	itt	mi
 80024f2:	f041 0120 	orrmi.w	r1, r1, #32
 80024f6:	6021      	strmi	r1, [r4, #0]
 80024f8:	b91b      	cbnz	r3, 8002502 <_printf_i+0x15e>
 80024fa:	6822      	ldr	r2, [r4, #0]
 80024fc:	f022 0220 	bic.w	r2, r2, #32
 8002500:	6022      	str	r2, [r4, #0]
 8002502:	2210      	movs	r2, #16
 8002504:	e7b7      	b.n	8002476 <_printf_i+0xd2>
 8002506:	064d      	lsls	r5, r1, #25
 8002508:	bf48      	it	mi
 800250a:	b29b      	uxthmi	r3, r3
 800250c:	e7ef      	b.n	80024ee <_printf_i+0x14a>
 800250e:	4665      	mov	r5, ip
 8002510:	fbb3 f1f2 	udiv	r1, r3, r2
 8002514:	fb02 3311 	mls	r3, r2, r1, r3
 8002518:	5cc3      	ldrb	r3, [r0, r3]
 800251a:	f805 3d01 	strb.w	r3, [r5, #-1]!
 800251e:	460b      	mov	r3, r1
 8002520:	2900      	cmp	r1, #0
 8002522:	d1f5      	bne.n	8002510 <_printf_i+0x16c>
 8002524:	e7b9      	b.n	800249a <_printf_i+0xf6>
 8002526:	6813      	ldr	r3, [r2, #0]
 8002528:	6825      	ldr	r5, [r4, #0]
 800252a:	6961      	ldr	r1, [r4, #20]
 800252c:	1d18      	adds	r0, r3, #4
 800252e:	6010      	str	r0, [r2, #0]
 8002530:	0628      	lsls	r0, r5, #24
 8002532:	681b      	ldr	r3, [r3, #0]
 8002534:	d501      	bpl.n	800253a <_printf_i+0x196>
 8002536:	6019      	str	r1, [r3, #0]
 8002538:	e002      	b.n	8002540 <_printf_i+0x19c>
 800253a:	066a      	lsls	r2, r5, #25
 800253c:	d5fb      	bpl.n	8002536 <_printf_i+0x192>
 800253e:	8019      	strh	r1, [r3, #0]
 8002540:	2300      	movs	r3, #0
 8002542:	6123      	str	r3, [r4, #16]
 8002544:	4665      	mov	r5, ip
 8002546:	e7b9      	b.n	80024bc <_printf_i+0x118>
 8002548:	6813      	ldr	r3, [r2, #0]
 800254a:	1d19      	adds	r1, r3, #4
 800254c:	6011      	str	r1, [r2, #0]
 800254e:	681d      	ldr	r5, [r3, #0]
 8002550:	6862      	ldr	r2, [r4, #4]
 8002552:	2100      	movs	r1, #0
 8002554:	4628      	mov	r0, r5
 8002556:	f7fd fe63 	bl	8000220 <memchr>
 800255a:	b108      	cbz	r0, 8002560 <_printf_i+0x1bc>
 800255c:	1b40      	subs	r0, r0, r5
 800255e:	6060      	str	r0, [r4, #4]
 8002560:	6863      	ldr	r3, [r4, #4]
 8002562:	6123      	str	r3, [r4, #16]
 8002564:	2300      	movs	r3, #0
 8002566:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800256a:	e7a7      	b.n	80024bc <_printf_i+0x118>
 800256c:	6923      	ldr	r3, [r4, #16]
 800256e:	462a      	mov	r2, r5
 8002570:	4639      	mov	r1, r7
 8002572:	4630      	mov	r0, r6
 8002574:	47c0      	blx	r8
 8002576:	3001      	adds	r0, #1
 8002578:	d0aa      	beq.n	80024d0 <_printf_i+0x12c>
 800257a:	6823      	ldr	r3, [r4, #0]
 800257c:	079b      	lsls	r3, r3, #30
 800257e:	d413      	bmi.n	80025a8 <_printf_i+0x204>
 8002580:	68e0      	ldr	r0, [r4, #12]
 8002582:	9b03      	ldr	r3, [sp, #12]
 8002584:	4298      	cmp	r0, r3
 8002586:	bfb8      	it	lt
 8002588:	4618      	movlt	r0, r3
 800258a:	e7a3      	b.n	80024d4 <_printf_i+0x130>
 800258c:	2301      	movs	r3, #1
 800258e:	464a      	mov	r2, r9
 8002590:	4639      	mov	r1, r7
 8002592:	4630      	mov	r0, r6
 8002594:	47c0      	blx	r8
 8002596:	3001      	adds	r0, #1
 8002598:	d09a      	beq.n	80024d0 <_printf_i+0x12c>
 800259a:	3501      	adds	r5, #1
 800259c:	68e3      	ldr	r3, [r4, #12]
 800259e:	9a03      	ldr	r2, [sp, #12]
 80025a0:	1a9b      	subs	r3, r3, r2
 80025a2:	42ab      	cmp	r3, r5
 80025a4:	dcf2      	bgt.n	800258c <_printf_i+0x1e8>
 80025a6:	e7eb      	b.n	8002580 <_printf_i+0x1dc>
 80025a8:	2500      	movs	r5, #0
 80025aa:	f104 0919 	add.w	r9, r4, #25
 80025ae:	e7f5      	b.n	800259c <_printf_i+0x1f8>
 80025b0:	2b00      	cmp	r3, #0
 80025b2:	d1ac      	bne.n	800250e <_printf_i+0x16a>
 80025b4:	7803      	ldrb	r3, [r0, #0]
 80025b6:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 80025ba:	f104 0542 	add.w	r5, r4, #66	; 0x42
 80025be:	e76c      	b.n	800249a <_printf_i+0xf6>
 80025c0:	08006732 	.word	0x08006732
 80025c4:	08006743 	.word	0x08006743

080025c8 <_scanf_float>:
 80025c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80025cc:	469a      	mov	sl, r3
 80025ce:	688b      	ldr	r3, [r1, #8]
 80025d0:	4616      	mov	r6, r2
 80025d2:	1e5a      	subs	r2, r3, #1
 80025d4:	f5b2 7fae 	cmp.w	r2, #348	; 0x15c
 80025d8:	b087      	sub	sp, #28
 80025da:	bf83      	ittte	hi
 80025dc:	f46f 72ae 	mvnhi.w	r2, #348	; 0x15c
 80025e0:	189b      	addhi	r3, r3, r2
 80025e2:	9301      	strhi	r3, [sp, #4]
 80025e4:	2300      	movls	r3, #0
 80025e6:	bf86      	itte	hi
 80025e8:	f240 135d 	movwhi	r3, #349	; 0x15d
 80025ec:	608b      	strhi	r3, [r1, #8]
 80025ee:	9301      	strls	r3, [sp, #4]
 80025f0:	680b      	ldr	r3, [r1, #0]
 80025f2:	4688      	mov	r8, r1
 80025f4:	f04f 0b00 	mov.w	fp, #0
 80025f8:	f443 63f0 	orr.w	r3, r3, #1920	; 0x780
 80025fc:	f848 3b1c 	str.w	r3, [r8], #28
 8002600:	e9cd bb03 	strd	fp, fp, [sp, #12]
 8002604:	4607      	mov	r7, r0
 8002606:	460c      	mov	r4, r1
 8002608:	4645      	mov	r5, r8
 800260a:	465a      	mov	r2, fp
 800260c:	46d9      	mov	r9, fp
 800260e:	f8cd b008 	str.w	fp, [sp, #8]
 8002612:	68a1      	ldr	r1, [r4, #8]
 8002614:	b181      	cbz	r1, 8002638 <_scanf_float+0x70>
 8002616:	6833      	ldr	r3, [r6, #0]
 8002618:	781b      	ldrb	r3, [r3, #0]
 800261a:	2b49      	cmp	r3, #73	; 0x49
 800261c:	d071      	beq.n	8002702 <_scanf_float+0x13a>
 800261e:	d84d      	bhi.n	80026bc <_scanf_float+0xf4>
 8002620:	2b39      	cmp	r3, #57	; 0x39
 8002622:	d840      	bhi.n	80026a6 <_scanf_float+0xde>
 8002624:	2b31      	cmp	r3, #49	; 0x31
 8002626:	f080 8088 	bcs.w	800273a <_scanf_float+0x172>
 800262a:	2b2d      	cmp	r3, #45	; 0x2d
 800262c:	f000 8090 	beq.w	8002750 <_scanf_float+0x188>
 8002630:	d815      	bhi.n	800265e <_scanf_float+0x96>
 8002632:	2b2b      	cmp	r3, #43	; 0x2b
 8002634:	f000 808c 	beq.w	8002750 <_scanf_float+0x188>
 8002638:	f1b9 0f00 	cmp.w	r9, #0
 800263c:	d003      	beq.n	8002646 <_scanf_float+0x7e>
 800263e:	6823      	ldr	r3, [r4, #0]
 8002640:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8002644:	6023      	str	r3, [r4, #0]
 8002646:	3a01      	subs	r2, #1
 8002648:	2a01      	cmp	r2, #1
 800264a:	f200 80ea 	bhi.w	8002822 <_scanf_float+0x25a>
 800264e:	4545      	cmp	r5, r8
 8002650:	f200 80dc 	bhi.w	800280c <_scanf_float+0x244>
 8002654:	2601      	movs	r6, #1
 8002656:	4630      	mov	r0, r6
 8002658:	b007      	add	sp, #28
 800265a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800265e:	2b2e      	cmp	r3, #46	; 0x2e
 8002660:	f000 809f 	beq.w	80027a2 <_scanf_float+0x1da>
 8002664:	2b30      	cmp	r3, #48	; 0x30
 8002666:	d1e7      	bne.n	8002638 <_scanf_float+0x70>
 8002668:	6820      	ldr	r0, [r4, #0]
 800266a:	f410 7f80 	tst.w	r0, #256	; 0x100
 800266e:	d064      	beq.n	800273a <_scanf_float+0x172>
 8002670:	9b01      	ldr	r3, [sp, #4]
 8002672:	f020 0080 	bic.w	r0, r0, #128	; 0x80
 8002676:	6020      	str	r0, [r4, #0]
 8002678:	f109 0901 	add.w	r9, r9, #1
 800267c:	b11b      	cbz	r3, 8002686 <_scanf_float+0xbe>
 800267e:	3b01      	subs	r3, #1
 8002680:	3101      	adds	r1, #1
 8002682:	9301      	str	r3, [sp, #4]
 8002684:	60a1      	str	r1, [r4, #8]
 8002686:	68a3      	ldr	r3, [r4, #8]
 8002688:	3b01      	subs	r3, #1
 800268a:	60a3      	str	r3, [r4, #8]
 800268c:	6923      	ldr	r3, [r4, #16]
 800268e:	3301      	adds	r3, #1
 8002690:	6123      	str	r3, [r4, #16]
 8002692:	6873      	ldr	r3, [r6, #4]
 8002694:	3b01      	subs	r3, #1
 8002696:	2b00      	cmp	r3, #0
 8002698:	6073      	str	r3, [r6, #4]
 800269a:	f340 80ac 	ble.w	80027f6 <_scanf_float+0x22e>
 800269e:	6833      	ldr	r3, [r6, #0]
 80026a0:	3301      	adds	r3, #1
 80026a2:	6033      	str	r3, [r6, #0]
 80026a4:	e7b5      	b.n	8002612 <_scanf_float+0x4a>
 80026a6:	2b45      	cmp	r3, #69	; 0x45
 80026a8:	f000 8085 	beq.w	80027b6 <_scanf_float+0x1ee>
 80026ac:	2b46      	cmp	r3, #70	; 0x46
 80026ae:	d06a      	beq.n	8002786 <_scanf_float+0x1be>
 80026b0:	2b41      	cmp	r3, #65	; 0x41
 80026b2:	d1c1      	bne.n	8002638 <_scanf_float+0x70>
 80026b4:	2a01      	cmp	r2, #1
 80026b6:	d1bf      	bne.n	8002638 <_scanf_float+0x70>
 80026b8:	2202      	movs	r2, #2
 80026ba:	e046      	b.n	800274a <_scanf_float+0x182>
 80026bc:	2b65      	cmp	r3, #101	; 0x65
 80026be:	d07a      	beq.n	80027b6 <_scanf_float+0x1ee>
 80026c0:	d818      	bhi.n	80026f4 <_scanf_float+0x12c>
 80026c2:	2b54      	cmp	r3, #84	; 0x54
 80026c4:	d066      	beq.n	8002794 <_scanf_float+0x1cc>
 80026c6:	d811      	bhi.n	80026ec <_scanf_float+0x124>
 80026c8:	2b4e      	cmp	r3, #78	; 0x4e
 80026ca:	d1b5      	bne.n	8002638 <_scanf_float+0x70>
 80026cc:	2a00      	cmp	r2, #0
 80026ce:	d146      	bne.n	800275e <_scanf_float+0x196>
 80026d0:	f1b9 0f00 	cmp.w	r9, #0
 80026d4:	d145      	bne.n	8002762 <_scanf_float+0x19a>
 80026d6:	6821      	ldr	r1, [r4, #0]
 80026d8:	f401 60e0 	and.w	r0, r1, #1792	; 0x700
 80026dc:	f5b0 6fe0 	cmp.w	r0, #1792	; 0x700
 80026e0:	d13f      	bne.n	8002762 <_scanf_float+0x19a>
 80026e2:	f421 61f0 	bic.w	r1, r1, #1920	; 0x780
 80026e6:	6021      	str	r1, [r4, #0]
 80026e8:	2201      	movs	r2, #1
 80026ea:	e02e      	b.n	800274a <_scanf_float+0x182>
 80026ec:	2b59      	cmp	r3, #89	; 0x59
 80026ee:	d01e      	beq.n	800272e <_scanf_float+0x166>
 80026f0:	2b61      	cmp	r3, #97	; 0x61
 80026f2:	e7de      	b.n	80026b2 <_scanf_float+0xea>
 80026f4:	2b6e      	cmp	r3, #110	; 0x6e
 80026f6:	d0e9      	beq.n	80026cc <_scanf_float+0x104>
 80026f8:	d815      	bhi.n	8002726 <_scanf_float+0x15e>
 80026fa:	2b66      	cmp	r3, #102	; 0x66
 80026fc:	d043      	beq.n	8002786 <_scanf_float+0x1be>
 80026fe:	2b69      	cmp	r3, #105	; 0x69
 8002700:	d19a      	bne.n	8002638 <_scanf_float+0x70>
 8002702:	f1bb 0f00 	cmp.w	fp, #0
 8002706:	d138      	bne.n	800277a <_scanf_float+0x1b2>
 8002708:	f1b9 0f00 	cmp.w	r9, #0
 800270c:	d197      	bne.n	800263e <_scanf_float+0x76>
 800270e:	6821      	ldr	r1, [r4, #0]
 8002710:	f401 60e0 	and.w	r0, r1, #1792	; 0x700
 8002714:	f5b0 6fe0 	cmp.w	r0, #1792	; 0x700
 8002718:	d195      	bne.n	8002646 <_scanf_float+0x7e>
 800271a:	f421 61f0 	bic.w	r1, r1, #1920	; 0x780
 800271e:	6021      	str	r1, [r4, #0]
 8002720:	f04f 0b01 	mov.w	fp, #1
 8002724:	e011      	b.n	800274a <_scanf_float+0x182>
 8002726:	2b74      	cmp	r3, #116	; 0x74
 8002728:	d034      	beq.n	8002794 <_scanf_float+0x1cc>
 800272a:	2b79      	cmp	r3, #121	; 0x79
 800272c:	d184      	bne.n	8002638 <_scanf_float+0x70>
 800272e:	f1bb 0f07 	cmp.w	fp, #7
 8002732:	d181      	bne.n	8002638 <_scanf_float+0x70>
 8002734:	f04f 0b08 	mov.w	fp, #8
 8002738:	e007      	b.n	800274a <_scanf_float+0x182>
 800273a:	eb12 0f0b 	cmn.w	r2, fp
 800273e:	f47f af7b 	bne.w	8002638 <_scanf_float+0x70>
 8002742:	6821      	ldr	r1, [r4, #0]
 8002744:	f421 71c0 	bic.w	r1, r1, #384	; 0x180
 8002748:	6021      	str	r1, [r4, #0]
 800274a:	702b      	strb	r3, [r5, #0]
 800274c:	3501      	adds	r5, #1
 800274e:	e79a      	b.n	8002686 <_scanf_float+0xbe>
 8002750:	6821      	ldr	r1, [r4, #0]
 8002752:	0608      	lsls	r0, r1, #24
 8002754:	f57f af70 	bpl.w	8002638 <_scanf_float+0x70>
 8002758:	f021 0180 	bic.w	r1, r1, #128	; 0x80
 800275c:	e7f4      	b.n	8002748 <_scanf_float+0x180>
 800275e:	2a02      	cmp	r2, #2
 8002760:	d047      	beq.n	80027f2 <_scanf_float+0x22a>
 8002762:	f1bb 0f01 	cmp.w	fp, #1
 8002766:	d003      	beq.n	8002770 <_scanf_float+0x1a8>
 8002768:	f1bb 0f04 	cmp.w	fp, #4
 800276c:	f47f af64 	bne.w	8002638 <_scanf_float+0x70>
 8002770:	f10b 0b01 	add.w	fp, fp, #1
 8002774:	fa5f fb8b 	uxtb.w	fp, fp
 8002778:	e7e7      	b.n	800274a <_scanf_float+0x182>
 800277a:	f1bb 0f03 	cmp.w	fp, #3
 800277e:	d0f7      	beq.n	8002770 <_scanf_float+0x1a8>
 8002780:	f1bb 0f05 	cmp.w	fp, #5
 8002784:	e7f2      	b.n	800276c <_scanf_float+0x1a4>
 8002786:	f1bb 0f02 	cmp.w	fp, #2
 800278a:	f47f af55 	bne.w	8002638 <_scanf_float+0x70>
 800278e:	f04f 0b03 	mov.w	fp, #3
 8002792:	e7da      	b.n	800274a <_scanf_float+0x182>
 8002794:	f1bb 0f06 	cmp.w	fp, #6
 8002798:	f47f af4e 	bne.w	8002638 <_scanf_float+0x70>
 800279c:	f04f 0b07 	mov.w	fp, #7
 80027a0:	e7d3      	b.n	800274a <_scanf_float+0x182>
 80027a2:	6821      	ldr	r1, [r4, #0]
 80027a4:	0588      	lsls	r0, r1, #22
 80027a6:	f57f af47 	bpl.w	8002638 <_scanf_float+0x70>
 80027aa:	f421 7120 	bic.w	r1, r1, #640	; 0x280
 80027ae:	6021      	str	r1, [r4, #0]
 80027b0:	f8cd 9008 	str.w	r9, [sp, #8]
 80027b4:	e7c9      	b.n	800274a <_scanf_float+0x182>
 80027b6:	6821      	ldr	r1, [r4, #0]
 80027b8:	f401 60a0 	and.w	r0, r1, #1280	; 0x500
 80027bc:	f5b0 6f80 	cmp.w	r0, #1024	; 0x400
 80027c0:	d006      	beq.n	80027d0 <_scanf_float+0x208>
 80027c2:	0548      	lsls	r0, r1, #21
 80027c4:	f57f af38 	bpl.w	8002638 <_scanf_float+0x70>
 80027c8:	f1b9 0f00 	cmp.w	r9, #0
 80027cc:	f43f af3b 	beq.w	8002646 <_scanf_float+0x7e>
 80027d0:	0588      	lsls	r0, r1, #22
 80027d2:	bf58      	it	pl
 80027d4:	9802      	ldrpl	r0, [sp, #8]
 80027d6:	f421 61f0 	bic.w	r1, r1, #1920	; 0x780
 80027da:	bf58      	it	pl
 80027dc:	eba9 0000 	subpl.w	r0, r9, r0
 80027e0:	f441 71c0 	orr.w	r1, r1, #384	; 0x180
 80027e4:	bf58      	it	pl
 80027e6:	e9cd 0503 	strdpl	r0, r5, [sp, #12]
 80027ea:	6021      	str	r1, [r4, #0]
 80027ec:	f04f 0900 	mov.w	r9, #0
 80027f0:	e7ab      	b.n	800274a <_scanf_float+0x182>
 80027f2:	2203      	movs	r2, #3
 80027f4:	e7a9      	b.n	800274a <_scanf_float+0x182>
 80027f6:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
 80027fa:	9205      	str	r2, [sp, #20]
 80027fc:	4631      	mov	r1, r6
 80027fe:	4638      	mov	r0, r7
 8002800:	4798      	blx	r3
 8002802:	9a05      	ldr	r2, [sp, #20]
 8002804:	2800      	cmp	r0, #0
 8002806:	f43f af04 	beq.w	8002612 <_scanf_float+0x4a>
 800280a:	e715      	b.n	8002638 <_scanf_float+0x70>
 800280c:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8002810:	f815 1d01 	ldrb.w	r1, [r5, #-1]!
 8002814:	4632      	mov	r2, r6
 8002816:	4638      	mov	r0, r7
 8002818:	4798      	blx	r3
 800281a:	6923      	ldr	r3, [r4, #16]
 800281c:	3b01      	subs	r3, #1
 800281e:	6123      	str	r3, [r4, #16]
 8002820:	e715      	b.n	800264e <_scanf_float+0x86>
 8002822:	f10b 33ff 	add.w	r3, fp, #4294967295
 8002826:	2b06      	cmp	r3, #6
 8002828:	d80a      	bhi.n	8002840 <_scanf_float+0x278>
 800282a:	f1bb 0f02 	cmp.w	fp, #2
 800282e:	d967      	bls.n	8002900 <_scanf_float+0x338>
 8002830:	f1ab 0b03 	sub.w	fp, fp, #3
 8002834:	fa5f fb8b 	uxtb.w	fp, fp
 8002838:	eba5 0b0b 	sub.w	fp, r5, fp
 800283c:	455d      	cmp	r5, fp
 800283e:	d14a      	bne.n	80028d6 <_scanf_float+0x30e>
 8002840:	6823      	ldr	r3, [r4, #0]
 8002842:	05da      	lsls	r2, r3, #23
 8002844:	d51f      	bpl.n	8002886 <_scanf_float+0x2be>
 8002846:	055b      	lsls	r3, r3, #21
 8002848:	d467      	bmi.n	800291a <_scanf_float+0x352>
 800284a:	f815 1c01 	ldrb.w	r1, [r5, #-1]
 800284e:	6923      	ldr	r3, [r4, #16]
 8002850:	2965      	cmp	r1, #101	; 0x65
 8002852:	f103 33ff 	add.w	r3, r3, #4294967295
 8002856:	f105 3bff 	add.w	fp, r5, #4294967295
 800285a:	6123      	str	r3, [r4, #16]
 800285c:	d00d      	beq.n	800287a <_scanf_float+0x2b2>
 800285e:	2945      	cmp	r1, #69	; 0x45
 8002860:	d00b      	beq.n	800287a <_scanf_float+0x2b2>
 8002862:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8002866:	4632      	mov	r2, r6
 8002868:	4638      	mov	r0, r7
 800286a:	4798      	blx	r3
 800286c:	6923      	ldr	r3, [r4, #16]
 800286e:	f815 1c02 	ldrb.w	r1, [r5, #-2]
 8002872:	3b01      	subs	r3, #1
 8002874:	f1a5 0b02 	sub.w	fp, r5, #2
 8002878:	6123      	str	r3, [r4, #16]
 800287a:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 800287e:	4632      	mov	r2, r6
 8002880:	4638      	mov	r0, r7
 8002882:	4798      	blx	r3
 8002884:	465d      	mov	r5, fp
 8002886:	6826      	ldr	r6, [r4, #0]
 8002888:	f016 0610 	ands.w	r6, r6, #16
 800288c:	d176      	bne.n	800297c <_scanf_float+0x3b4>
 800288e:	702e      	strb	r6, [r5, #0]
 8002890:	6823      	ldr	r3, [r4, #0]
 8002892:	f403 63c0 	and.w	r3, r3, #1536	; 0x600
 8002896:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800289a:	d141      	bne.n	8002920 <_scanf_float+0x358>
 800289c:	9b02      	ldr	r3, [sp, #8]
 800289e:	eba9 0303 	sub.w	r3, r9, r3
 80028a2:	425a      	negs	r2, r3
 80028a4:	2b00      	cmp	r3, #0
 80028a6:	d148      	bne.n	800293a <_scanf_float+0x372>
 80028a8:	4641      	mov	r1, r8
 80028aa:	2200      	movs	r2, #0
 80028ac:	4638      	mov	r0, r7
 80028ae:	f000 ff2b 	bl	8003708 <_strtod_r>
 80028b2:	6825      	ldr	r5, [r4, #0]
 80028b4:	f8da 3000 	ldr.w	r3, [sl]
 80028b8:	f015 0f02 	tst.w	r5, #2
 80028bc:	4680      	mov	r8, r0
 80028be:	4689      	mov	r9, r1
 80028c0:	d046      	beq.n	8002950 <_scanf_float+0x388>
 80028c2:	1d1a      	adds	r2, r3, #4
 80028c4:	f8ca 2000 	str.w	r2, [sl]
 80028c8:	681b      	ldr	r3, [r3, #0]
 80028ca:	e9c3 8900 	strd	r8, r9, [r3]
 80028ce:	68e3      	ldr	r3, [r4, #12]
 80028d0:	3301      	adds	r3, #1
 80028d2:	60e3      	str	r3, [r4, #12]
 80028d4:	e6bf      	b.n	8002656 <_scanf_float+0x8e>
 80028d6:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 80028da:	f815 1d01 	ldrb.w	r1, [r5, #-1]!
 80028de:	4632      	mov	r2, r6
 80028e0:	4638      	mov	r0, r7
 80028e2:	4798      	blx	r3
 80028e4:	6923      	ldr	r3, [r4, #16]
 80028e6:	3b01      	subs	r3, #1
 80028e8:	6123      	str	r3, [r4, #16]
 80028ea:	e7a7      	b.n	800283c <_scanf_float+0x274>
 80028ec:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 80028f0:	f815 1d01 	ldrb.w	r1, [r5, #-1]!
 80028f4:	4632      	mov	r2, r6
 80028f6:	4638      	mov	r0, r7
 80028f8:	4798      	blx	r3
 80028fa:	6923      	ldr	r3, [r4, #16]
 80028fc:	3b01      	subs	r3, #1
 80028fe:	6123      	str	r3, [r4, #16]
 8002900:	4545      	cmp	r5, r8
 8002902:	d8f3      	bhi.n	80028ec <_scanf_float+0x324>
 8002904:	e6a6      	b.n	8002654 <_scanf_float+0x8c>
 8002906:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 800290a:	f815 1d01 	ldrb.w	r1, [r5, #-1]!
 800290e:	4632      	mov	r2, r6
 8002910:	4638      	mov	r0, r7
 8002912:	4798      	blx	r3
 8002914:	6923      	ldr	r3, [r4, #16]
 8002916:	3b01      	subs	r3, #1
 8002918:	6123      	str	r3, [r4, #16]
 800291a:	4545      	cmp	r5, r8
 800291c:	d8f3      	bhi.n	8002906 <_scanf_float+0x33e>
 800291e:	e699      	b.n	8002654 <_scanf_float+0x8c>
 8002920:	9b03      	ldr	r3, [sp, #12]
 8002922:	2b00      	cmp	r3, #0
 8002924:	d0c0      	beq.n	80028a8 <_scanf_float+0x2e0>
 8002926:	9904      	ldr	r1, [sp, #16]
 8002928:	230a      	movs	r3, #10
 800292a:	4632      	mov	r2, r6
 800292c:	3101      	adds	r1, #1
 800292e:	4638      	mov	r0, r7
 8002930:	f000 ff76 	bl	8003820 <_strtol_r>
 8002934:	9b03      	ldr	r3, [sp, #12]
 8002936:	9d04      	ldr	r5, [sp, #16]
 8002938:	1ac2      	subs	r2, r0, r3
 800293a:	f204 136f 	addw	r3, r4, #367	; 0x16f
 800293e:	429d      	cmp	r5, r3
 8002940:	bf28      	it	cs
 8002942:	f504 75b7 	addcs.w	r5, r4, #366	; 0x16e
 8002946:	490e      	ldr	r1, [pc, #56]	; (8002980 <_scanf_float+0x3b8>)
 8002948:	4628      	mov	r0, r5
 800294a:	f000 f89b 	bl	8002a84 <siprintf>
 800294e:	e7ab      	b.n	80028a8 <_scanf_float+0x2e0>
 8002950:	1d1f      	adds	r7, r3, #4
 8002952:	f015 0504 	ands.w	r5, r5, #4
 8002956:	f8ca 7000 	str.w	r7, [sl]
 800295a:	d1b5      	bne.n	80028c8 <_scanf_float+0x300>
 800295c:	681f      	ldr	r7, [r3, #0]
 800295e:	4602      	mov	r2, r0
 8002960:	460b      	mov	r3, r1
 8002962:	f7fe f903 	bl	8000b6c <__aeabi_dcmpun>
 8002966:	b120      	cbz	r0, 8002972 <_scanf_float+0x3aa>
 8002968:	4628      	mov	r0, r5
 800296a:	f000 f887 	bl	8002a7c <nanf>
 800296e:	6038      	str	r0, [r7, #0]
 8002970:	e7ad      	b.n	80028ce <_scanf_float+0x306>
 8002972:	4640      	mov	r0, r8
 8002974:	4649      	mov	r1, r9
 8002976:	f7fe f957 	bl	8000c28 <__aeabi_d2f>
 800297a:	e7f8      	b.n	800296e <_scanf_float+0x3a6>
 800297c:	2600      	movs	r6, #0
 800297e:	e66a      	b.n	8002656 <_scanf_float+0x8e>
 8002980:	08006754 	.word	0x08006754

08002984 <iprintf>:
 8002984:	b40f      	push	{r0, r1, r2, r3}
 8002986:	4b0a      	ldr	r3, [pc, #40]	; (80029b0 <iprintf+0x2c>)
 8002988:	b513      	push	{r0, r1, r4, lr}
 800298a:	681c      	ldr	r4, [r3, #0]
 800298c:	b124      	cbz	r4, 8002998 <iprintf+0x14>
 800298e:	69a3      	ldr	r3, [r4, #24]
 8002990:	b913      	cbnz	r3, 8002998 <iprintf+0x14>
 8002992:	4620      	mov	r0, r4
 8002994:	f001 ff4e 	bl	8004834 <__sinit>
 8002998:	ab05      	add	r3, sp, #20
 800299a:	9a04      	ldr	r2, [sp, #16]
 800299c:	68a1      	ldr	r1, [r4, #8]
 800299e:	9301      	str	r3, [sp, #4]
 80029a0:	4620      	mov	r0, r4
 80029a2:	f003 f9bd 	bl	8005d20 <_vfiprintf_r>
 80029a6:	b002      	add	sp, #8
 80029a8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80029ac:	b004      	add	sp, #16
 80029ae:	4770      	bx	lr
 80029b0:	20000014 	.word	0x20000014

080029b4 <_puts_r>:
 80029b4:	b570      	push	{r4, r5, r6, lr}
 80029b6:	460e      	mov	r6, r1
 80029b8:	4605      	mov	r5, r0
 80029ba:	b118      	cbz	r0, 80029c4 <_puts_r+0x10>
 80029bc:	6983      	ldr	r3, [r0, #24]
 80029be:	b90b      	cbnz	r3, 80029c4 <_puts_r+0x10>
 80029c0:	f001 ff38 	bl	8004834 <__sinit>
 80029c4:	69ab      	ldr	r3, [r5, #24]
 80029c6:	68ac      	ldr	r4, [r5, #8]
 80029c8:	b913      	cbnz	r3, 80029d0 <_puts_r+0x1c>
 80029ca:	4628      	mov	r0, r5
 80029cc:	f001 ff32 	bl	8004834 <__sinit>
 80029d0:	4b23      	ldr	r3, [pc, #140]	; (8002a60 <_puts_r+0xac>)
 80029d2:	429c      	cmp	r4, r3
 80029d4:	d117      	bne.n	8002a06 <_puts_r+0x52>
 80029d6:	686c      	ldr	r4, [r5, #4]
 80029d8:	89a3      	ldrh	r3, [r4, #12]
 80029da:	071b      	lsls	r3, r3, #28
 80029dc:	d51d      	bpl.n	8002a1a <_puts_r+0x66>
 80029de:	6923      	ldr	r3, [r4, #16]
 80029e0:	b1db      	cbz	r3, 8002a1a <_puts_r+0x66>
 80029e2:	3e01      	subs	r6, #1
 80029e4:	68a3      	ldr	r3, [r4, #8]
 80029e6:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 80029ea:	3b01      	subs	r3, #1
 80029ec:	60a3      	str	r3, [r4, #8]
 80029ee:	b9e9      	cbnz	r1, 8002a2c <_puts_r+0x78>
 80029f0:	2b00      	cmp	r3, #0
 80029f2:	da2e      	bge.n	8002a52 <_puts_r+0x9e>
 80029f4:	4622      	mov	r2, r4
 80029f6:	210a      	movs	r1, #10
 80029f8:	4628      	mov	r0, r5
 80029fa:	f000 ff23 	bl	8003844 <__swbuf_r>
 80029fe:	3001      	adds	r0, #1
 8002a00:	d011      	beq.n	8002a26 <_puts_r+0x72>
 8002a02:	200a      	movs	r0, #10
 8002a04:	e011      	b.n	8002a2a <_puts_r+0x76>
 8002a06:	4b17      	ldr	r3, [pc, #92]	; (8002a64 <_puts_r+0xb0>)
 8002a08:	429c      	cmp	r4, r3
 8002a0a:	d101      	bne.n	8002a10 <_puts_r+0x5c>
 8002a0c:	68ac      	ldr	r4, [r5, #8]
 8002a0e:	e7e3      	b.n	80029d8 <_puts_r+0x24>
 8002a10:	4b15      	ldr	r3, [pc, #84]	; (8002a68 <_puts_r+0xb4>)
 8002a12:	429c      	cmp	r4, r3
 8002a14:	bf08      	it	eq
 8002a16:	68ec      	ldreq	r4, [r5, #12]
 8002a18:	e7de      	b.n	80029d8 <_puts_r+0x24>
 8002a1a:	4621      	mov	r1, r4
 8002a1c:	4628      	mov	r0, r5
 8002a1e:	f000 ff63 	bl	80038e8 <__swsetup_r>
 8002a22:	2800      	cmp	r0, #0
 8002a24:	d0dd      	beq.n	80029e2 <_puts_r+0x2e>
 8002a26:	f04f 30ff 	mov.w	r0, #4294967295
 8002a2a:	bd70      	pop	{r4, r5, r6, pc}
 8002a2c:	2b00      	cmp	r3, #0
 8002a2e:	da04      	bge.n	8002a3a <_puts_r+0x86>
 8002a30:	69a2      	ldr	r2, [r4, #24]
 8002a32:	429a      	cmp	r2, r3
 8002a34:	dc06      	bgt.n	8002a44 <_puts_r+0x90>
 8002a36:	290a      	cmp	r1, #10
 8002a38:	d004      	beq.n	8002a44 <_puts_r+0x90>
 8002a3a:	6823      	ldr	r3, [r4, #0]
 8002a3c:	1c5a      	adds	r2, r3, #1
 8002a3e:	6022      	str	r2, [r4, #0]
 8002a40:	7019      	strb	r1, [r3, #0]
 8002a42:	e7cf      	b.n	80029e4 <_puts_r+0x30>
 8002a44:	4622      	mov	r2, r4
 8002a46:	4628      	mov	r0, r5
 8002a48:	f000 fefc 	bl	8003844 <__swbuf_r>
 8002a4c:	3001      	adds	r0, #1
 8002a4e:	d1c9      	bne.n	80029e4 <_puts_r+0x30>
 8002a50:	e7e9      	b.n	8002a26 <_puts_r+0x72>
 8002a52:	6823      	ldr	r3, [r4, #0]
 8002a54:	200a      	movs	r0, #10
 8002a56:	1c5a      	adds	r2, r3, #1
 8002a58:	6022      	str	r2, [r4, #0]
 8002a5a:	7018      	strb	r0, [r3, #0]
 8002a5c:	e7e5      	b.n	8002a2a <_puts_r+0x76>
 8002a5e:	bf00      	nop
 8002a60:	080067e0 	.word	0x080067e0
 8002a64:	08006800 	.word	0x08006800
 8002a68:	080067c0 	.word	0x080067c0

08002a6c <puts>:
 8002a6c:	4b02      	ldr	r3, [pc, #8]	; (8002a78 <puts+0xc>)
 8002a6e:	4601      	mov	r1, r0
 8002a70:	6818      	ldr	r0, [r3, #0]
 8002a72:	f7ff bf9f 	b.w	80029b4 <_puts_r>
 8002a76:	bf00      	nop
 8002a78:	20000014 	.word	0x20000014

08002a7c <nanf>:
 8002a7c:	4800      	ldr	r0, [pc, #0]	; (8002a80 <nanf+0x4>)
 8002a7e:	4770      	bx	lr
 8002a80:	7fc00000 	.word	0x7fc00000

08002a84 <siprintf>:
 8002a84:	b40e      	push	{r1, r2, r3}
 8002a86:	b500      	push	{lr}
 8002a88:	b09c      	sub	sp, #112	; 0x70
 8002a8a:	ab1d      	add	r3, sp, #116	; 0x74
 8002a8c:	9002      	str	r0, [sp, #8]
 8002a8e:	9006      	str	r0, [sp, #24]
 8002a90:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 8002a94:	4809      	ldr	r0, [pc, #36]	; (8002abc <siprintf+0x38>)
 8002a96:	9107      	str	r1, [sp, #28]
 8002a98:	9104      	str	r1, [sp, #16]
 8002a9a:	4909      	ldr	r1, [pc, #36]	; (8002ac0 <siprintf+0x3c>)
 8002a9c:	f853 2b04 	ldr.w	r2, [r3], #4
 8002aa0:	9105      	str	r1, [sp, #20]
 8002aa2:	6800      	ldr	r0, [r0, #0]
 8002aa4:	9301      	str	r3, [sp, #4]
 8002aa6:	a902      	add	r1, sp, #8
 8002aa8:	f003 f81a 	bl	8005ae0 <_svfiprintf_r>
 8002aac:	9b02      	ldr	r3, [sp, #8]
 8002aae:	2200      	movs	r2, #0
 8002ab0:	701a      	strb	r2, [r3, #0]
 8002ab2:	b01c      	add	sp, #112	; 0x70
 8002ab4:	f85d eb04 	ldr.w	lr, [sp], #4
 8002ab8:	b003      	add	sp, #12
 8002aba:	4770      	bx	lr
 8002abc:	20000014 	.word	0x20000014
 8002ac0:	ffff0208 	.word	0xffff0208

08002ac4 <sulp>:
 8002ac4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002ac8:	460f      	mov	r7, r1
 8002aca:	4690      	mov	r8, r2
 8002acc:	f002 fdca 	bl	8005664 <__ulp>
 8002ad0:	4604      	mov	r4, r0
 8002ad2:	460d      	mov	r5, r1
 8002ad4:	f1b8 0f00 	cmp.w	r8, #0
 8002ad8:	d011      	beq.n	8002afe <sulp+0x3a>
 8002ada:	f3c7 530a 	ubfx	r3, r7, #20, #11
 8002ade:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
 8002ae2:	2b00      	cmp	r3, #0
 8002ae4:	dd0b      	ble.n	8002afe <sulp+0x3a>
 8002ae6:	051b      	lsls	r3, r3, #20
 8002ae8:	f103 557f 	add.w	r5, r3, #1069547520	; 0x3fc00000
 8002aec:	2400      	movs	r4, #0
 8002aee:	f505 1540 	add.w	r5, r5, #3145728	; 0x300000
 8002af2:	4622      	mov	r2, r4
 8002af4:	462b      	mov	r3, r5
 8002af6:	f7fd fd9f 	bl	8000638 <__aeabi_dmul>
 8002afa:	4604      	mov	r4, r0
 8002afc:	460d      	mov	r5, r1
 8002afe:	4620      	mov	r0, r4
 8002b00:	4629      	mov	r1, r5
 8002b02:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

08002b08 <_strtod_l>:
 8002b08:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002b0c:	461f      	mov	r7, r3
 8002b0e:	b0a1      	sub	sp, #132	; 0x84
 8002b10:	2300      	movs	r3, #0
 8002b12:	4683      	mov	fp, r0
 8002b14:	4638      	mov	r0, r7
 8002b16:	460e      	mov	r6, r1
 8002b18:	9217      	str	r2, [sp, #92]	; 0x5c
 8002b1a:	931c      	str	r3, [sp, #112]	; 0x70
 8002b1c:	f002 fa3d 	bl	8004f9a <__localeconv_l>
 8002b20:	4680      	mov	r8, r0
 8002b22:	6800      	ldr	r0, [r0, #0]
 8002b24:	f7fd fb74 	bl	8000210 <strlen>
 8002b28:	f04f 0900 	mov.w	r9, #0
 8002b2c:	4604      	mov	r4, r0
 8002b2e:	f04f 0a00 	mov.w	sl, #0
 8002b32:	961b      	str	r6, [sp, #108]	; 0x6c
 8002b34:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8002b36:	781a      	ldrb	r2, [r3, #0]
 8002b38:	2a0d      	cmp	r2, #13
 8002b3a:	d832      	bhi.n	8002ba2 <_strtod_l+0x9a>
 8002b3c:	2a09      	cmp	r2, #9
 8002b3e:	d236      	bcs.n	8002bae <_strtod_l+0xa6>
 8002b40:	2a00      	cmp	r2, #0
 8002b42:	d03e      	beq.n	8002bc2 <_strtod_l+0xba>
 8002b44:	2300      	movs	r3, #0
 8002b46:	930d      	str	r3, [sp, #52]	; 0x34
 8002b48:	9d1b      	ldr	r5, [sp, #108]	; 0x6c
 8002b4a:	782b      	ldrb	r3, [r5, #0]
 8002b4c:	2b30      	cmp	r3, #48	; 0x30
 8002b4e:	f040 80ac 	bne.w	8002caa <_strtod_l+0x1a2>
 8002b52:	786b      	ldrb	r3, [r5, #1]
 8002b54:	2b58      	cmp	r3, #88	; 0x58
 8002b56:	d001      	beq.n	8002b5c <_strtod_l+0x54>
 8002b58:	2b78      	cmp	r3, #120	; 0x78
 8002b5a:	d167      	bne.n	8002c2c <_strtod_l+0x124>
 8002b5c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8002b5e:	9301      	str	r3, [sp, #4]
 8002b60:	ab1c      	add	r3, sp, #112	; 0x70
 8002b62:	9300      	str	r3, [sp, #0]
 8002b64:	9702      	str	r7, [sp, #8]
 8002b66:	ab1d      	add	r3, sp, #116	; 0x74
 8002b68:	4a88      	ldr	r2, [pc, #544]	; (8002d8c <_strtod_l+0x284>)
 8002b6a:	a91b      	add	r1, sp, #108	; 0x6c
 8002b6c:	4658      	mov	r0, fp
 8002b6e:	f001 ff3a 	bl	80049e6 <__gethex>
 8002b72:	f010 0407 	ands.w	r4, r0, #7
 8002b76:	4606      	mov	r6, r0
 8002b78:	d005      	beq.n	8002b86 <_strtod_l+0x7e>
 8002b7a:	2c06      	cmp	r4, #6
 8002b7c:	d12b      	bne.n	8002bd6 <_strtod_l+0xce>
 8002b7e:	3501      	adds	r5, #1
 8002b80:	2300      	movs	r3, #0
 8002b82:	951b      	str	r5, [sp, #108]	; 0x6c
 8002b84:	930d      	str	r3, [sp, #52]	; 0x34
 8002b86:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8002b88:	2b00      	cmp	r3, #0
 8002b8a:	f040 85a6 	bne.w	80036da <_strtod_l+0xbd2>
 8002b8e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8002b90:	b1e3      	cbz	r3, 8002bcc <_strtod_l+0xc4>
 8002b92:	464a      	mov	r2, r9
 8002b94:	f10a 4300 	add.w	r3, sl, #2147483648	; 0x80000000
 8002b98:	4610      	mov	r0, r2
 8002b9a:	4619      	mov	r1, r3
 8002b9c:	b021      	add	sp, #132	; 0x84
 8002b9e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002ba2:	2a2b      	cmp	r2, #43	; 0x2b
 8002ba4:	d015      	beq.n	8002bd2 <_strtod_l+0xca>
 8002ba6:	2a2d      	cmp	r2, #45	; 0x2d
 8002ba8:	d004      	beq.n	8002bb4 <_strtod_l+0xac>
 8002baa:	2a20      	cmp	r2, #32
 8002bac:	d1ca      	bne.n	8002b44 <_strtod_l+0x3c>
 8002bae:	3301      	adds	r3, #1
 8002bb0:	931b      	str	r3, [sp, #108]	; 0x6c
 8002bb2:	e7bf      	b.n	8002b34 <_strtod_l+0x2c>
 8002bb4:	2201      	movs	r2, #1
 8002bb6:	920d      	str	r2, [sp, #52]	; 0x34
 8002bb8:	1c5a      	adds	r2, r3, #1
 8002bba:	921b      	str	r2, [sp, #108]	; 0x6c
 8002bbc:	785b      	ldrb	r3, [r3, #1]
 8002bbe:	2b00      	cmp	r3, #0
 8002bc0:	d1c2      	bne.n	8002b48 <_strtod_l+0x40>
 8002bc2:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8002bc4:	961b      	str	r6, [sp, #108]	; 0x6c
 8002bc6:	2b00      	cmp	r3, #0
 8002bc8:	f040 8585 	bne.w	80036d6 <_strtod_l+0xbce>
 8002bcc:	464a      	mov	r2, r9
 8002bce:	4653      	mov	r3, sl
 8002bd0:	e7e2      	b.n	8002b98 <_strtod_l+0x90>
 8002bd2:	2200      	movs	r2, #0
 8002bd4:	e7ef      	b.n	8002bb6 <_strtod_l+0xae>
 8002bd6:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8002bd8:	b13a      	cbz	r2, 8002bea <_strtod_l+0xe2>
 8002bda:	2135      	movs	r1, #53	; 0x35
 8002bdc:	a81e      	add	r0, sp, #120	; 0x78
 8002bde:	f002 fe34 	bl	800584a <__copybits>
 8002be2:	991c      	ldr	r1, [sp, #112]	; 0x70
 8002be4:	4658      	mov	r0, fp
 8002be6:	f002 faa6 	bl	8005136 <_Bfree>
 8002bea:	3c01      	subs	r4, #1
 8002bec:	2c04      	cmp	r4, #4
 8002bee:	d806      	bhi.n	8002bfe <_strtod_l+0xf6>
 8002bf0:	e8df f004 	tbb	[pc, r4]
 8002bf4:	1714030a 	.word	0x1714030a
 8002bf8:	0a          	.byte	0x0a
 8002bf9:	00          	.byte	0x00
 8002bfa:	e9dd 9a1e 	ldrd	r9, sl, [sp, #120]	; 0x78
 8002bfe:	0731      	lsls	r1, r6, #28
 8002c00:	d5c1      	bpl.n	8002b86 <_strtod_l+0x7e>
 8002c02:	f04a 4a00 	orr.w	sl, sl, #2147483648	; 0x80000000
 8002c06:	e7be      	b.n	8002b86 <_strtod_l+0x7e>
 8002c08:	e9dd 931e 	ldrd	r9, r3, [sp, #120]	; 0x78
 8002c0c:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 8002c0e:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
 8002c12:	f202 4233 	addw	r2, r2, #1075	; 0x433
 8002c16:	ea43 5a02 	orr.w	sl, r3, r2, lsl #20
 8002c1a:	e7f0      	b.n	8002bfe <_strtod_l+0xf6>
 8002c1c:	f8df a170 	ldr.w	sl, [pc, #368]	; 8002d90 <_strtod_l+0x288>
 8002c20:	e7ed      	b.n	8002bfe <_strtod_l+0xf6>
 8002c22:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
 8002c26:	f04f 39ff 	mov.w	r9, #4294967295
 8002c2a:	e7e8      	b.n	8002bfe <_strtod_l+0xf6>
 8002c2c:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8002c2e:	1c5a      	adds	r2, r3, #1
 8002c30:	921b      	str	r2, [sp, #108]	; 0x6c
 8002c32:	785b      	ldrb	r3, [r3, #1]
 8002c34:	2b30      	cmp	r3, #48	; 0x30
 8002c36:	d0f9      	beq.n	8002c2c <_strtod_l+0x124>
 8002c38:	2b00      	cmp	r3, #0
 8002c3a:	d0a4      	beq.n	8002b86 <_strtod_l+0x7e>
 8002c3c:	2301      	movs	r3, #1
 8002c3e:	2500      	movs	r5, #0
 8002c40:	9307      	str	r3, [sp, #28]
 8002c42:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8002c44:	9308      	str	r3, [sp, #32]
 8002c46:	9506      	str	r5, [sp, #24]
 8002c48:	9504      	str	r5, [sp, #16]
 8002c4a:	220a      	movs	r2, #10
 8002c4c:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8002c4e:	7807      	ldrb	r7, [r0, #0]
 8002c50:	f1a7 0330 	sub.w	r3, r7, #48	; 0x30
 8002c54:	b2d9      	uxtb	r1, r3
 8002c56:	2909      	cmp	r1, #9
 8002c58:	d929      	bls.n	8002cae <_strtod_l+0x1a6>
 8002c5a:	4622      	mov	r2, r4
 8002c5c:	f8d8 1000 	ldr.w	r1, [r8]
 8002c60:	f003 f9c7 	bl	8005ff2 <strncmp>
 8002c64:	2800      	cmp	r0, #0
 8002c66:	d031      	beq.n	8002ccc <_strtod_l+0x1c4>
 8002c68:	2000      	movs	r0, #0
 8002c6a:	9c04      	ldr	r4, [sp, #16]
 8002c6c:	9005      	str	r0, [sp, #20]
 8002c6e:	463b      	mov	r3, r7
 8002c70:	4602      	mov	r2, r0
 8002c72:	2b65      	cmp	r3, #101	; 0x65
 8002c74:	d001      	beq.n	8002c7a <_strtod_l+0x172>
 8002c76:	2b45      	cmp	r3, #69	; 0x45
 8002c78:	d114      	bne.n	8002ca4 <_strtod_l+0x19c>
 8002c7a:	b924      	cbnz	r4, 8002c86 <_strtod_l+0x17e>
 8002c7c:	b910      	cbnz	r0, 8002c84 <_strtod_l+0x17c>
 8002c7e:	9b07      	ldr	r3, [sp, #28]
 8002c80:	2b00      	cmp	r3, #0
 8002c82:	d09e      	beq.n	8002bc2 <_strtod_l+0xba>
 8002c84:	2400      	movs	r4, #0
 8002c86:	9e1b      	ldr	r6, [sp, #108]	; 0x6c
 8002c88:	1c73      	adds	r3, r6, #1
 8002c8a:	931b      	str	r3, [sp, #108]	; 0x6c
 8002c8c:	7873      	ldrb	r3, [r6, #1]
 8002c8e:	2b2b      	cmp	r3, #43	; 0x2b
 8002c90:	d078      	beq.n	8002d84 <_strtod_l+0x27c>
 8002c92:	2b2d      	cmp	r3, #45	; 0x2d
 8002c94:	d070      	beq.n	8002d78 <_strtod_l+0x270>
 8002c96:	f04f 0c00 	mov.w	ip, #0
 8002c9a:	f1a3 0730 	sub.w	r7, r3, #48	; 0x30
 8002c9e:	2f09      	cmp	r7, #9
 8002ca0:	d97c      	bls.n	8002d9c <_strtod_l+0x294>
 8002ca2:	961b      	str	r6, [sp, #108]	; 0x6c
 8002ca4:	f04f 0e00 	mov.w	lr, #0
 8002ca8:	e09a      	b.n	8002de0 <_strtod_l+0x2d8>
 8002caa:	2300      	movs	r3, #0
 8002cac:	e7c7      	b.n	8002c3e <_strtod_l+0x136>
 8002cae:	9904      	ldr	r1, [sp, #16]
 8002cb0:	2908      	cmp	r1, #8
 8002cb2:	bfdd      	ittte	le
 8002cb4:	9906      	ldrle	r1, [sp, #24]
 8002cb6:	fb02 3301 	mlale	r3, r2, r1, r3
 8002cba:	9306      	strle	r3, [sp, #24]
 8002cbc:	fb02 3505 	mlagt	r5, r2, r5, r3
 8002cc0:	9b04      	ldr	r3, [sp, #16]
 8002cc2:	3001      	adds	r0, #1
 8002cc4:	3301      	adds	r3, #1
 8002cc6:	9304      	str	r3, [sp, #16]
 8002cc8:	901b      	str	r0, [sp, #108]	; 0x6c
 8002cca:	e7bf      	b.n	8002c4c <_strtod_l+0x144>
 8002ccc:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8002cce:	191a      	adds	r2, r3, r4
 8002cd0:	921b      	str	r2, [sp, #108]	; 0x6c
 8002cd2:	9a04      	ldr	r2, [sp, #16]
 8002cd4:	5d1b      	ldrb	r3, [r3, r4]
 8002cd6:	2a00      	cmp	r2, #0
 8002cd8:	d037      	beq.n	8002d4a <_strtod_l+0x242>
 8002cda:	9c04      	ldr	r4, [sp, #16]
 8002cdc:	4602      	mov	r2, r0
 8002cde:	f1a3 0130 	sub.w	r1, r3, #48	; 0x30
 8002ce2:	2909      	cmp	r1, #9
 8002ce4:	d913      	bls.n	8002d0e <_strtod_l+0x206>
 8002ce6:	2101      	movs	r1, #1
 8002ce8:	9105      	str	r1, [sp, #20]
 8002cea:	e7c2      	b.n	8002c72 <_strtod_l+0x16a>
 8002cec:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8002cee:	1c5a      	adds	r2, r3, #1
 8002cf0:	921b      	str	r2, [sp, #108]	; 0x6c
 8002cf2:	785b      	ldrb	r3, [r3, #1]
 8002cf4:	3001      	adds	r0, #1
 8002cf6:	2b30      	cmp	r3, #48	; 0x30
 8002cf8:	d0f8      	beq.n	8002cec <_strtod_l+0x1e4>
 8002cfa:	f1a3 0231 	sub.w	r2, r3, #49	; 0x31
 8002cfe:	2a08      	cmp	r2, #8
 8002d00:	f200 84f0 	bhi.w	80036e4 <_strtod_l+0xbdc>
 8002d04:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 8002d06:	9208      	str	r2, [sp, #32]
 8002d08:	4602      	mov	r2, r0
 8002d0a:	2000      	movs	r0, #0
 8002d0c:	4604      	mov	r4, r0
 8002d0e:	f1b3 0e30 	subs.w	lr, r3, #48	; 0x30
 8002d12:	f100 0101 	add.w	r1, r0, #1
 8002d16:	d012      	beq.n	8002d3e <_strtod_l+0x236>
 8002d18:	440a      	add	r2, r1
 8002d1a:	eb00 0c04 	add.w	ip, r0, r4
 8002d1e:	4621      	mov	r1, r4
 8002d20:	270a      	movs	r7, #10
 8002d22:	458c      	cmp	ip, r1
 8002d24:	d113      	bne.n	8002d4e <_strtod_l+0x246>
 8002d26:	1821      	adds	r1, r4, r0
 8002d28:	2908      	cmp	r1, #8
 8002d2a:	f104 0401 	add.w	r4, r4, #1
 8002d2e:	4404      	add	r4, r0
 8002d30:	dc19      	bgt.n	8002d66 <_strtod_l+0x25e>
 8002d32:	9b06      	ldr	r3, [sp, #24]
 8002d34:	210a      	movs	r1, #10
 8002d36:	fb01 e303 	mla	r3, r1, r3, lr
 8002d3a:	9306      	str	r3, [sp, #24]
 8002d3c:	2100      	movs	r1, #0
 8002d3e:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8002d40:	1c58      	adds	r0, r3, #1
 8002d42:	901b      	str	r0, [sp, #108]	; 0x6c
 8002d44:	785b      	ldrb	r3, [r3, #1]
 8002d46:	4608      	mov	r0, r1
 8002d48:	e7c9      	b.n	8002cde <_strtod_l+0x1d6>
 8002d4a:	9804      	ldr	r0, [sp, #16]
 8002d4c:	e7d3      	b.n	8002cf6 <_strtod_l+0x1ee>
 8002d4e:	2908      	cmp	r1, #8
 8002d50:	f101 0101 	add.w	r1, r1, #1
 8002d54:	dc03      	bgt.n	8002d5e <_strtod_l+0x256>
 8002d56:	9b06      	ldr	r3, [sp, #24]
 8002d58:	437b      	muls	r3, r7
 8002d5a:	9306      	str	r3, [sp, #24]
 8002d5c:	e7e1      	b.n	8002d22 <_strtod_l+0x21a>
 8002d5e:	2910      	cmp	r1, #16
 8002d60:	bfd8      	it	le
 8002d62:	437d      	mulle	r5, r7
 8002d64:	e7dd      	b.n	8002d22 <_strtod_l+0x21a>
 8002d66:	2c10      	cmp	r4, #16
 8002d68:	bfdc      	itt	le
 8002d6a:	210a      	movle	r1, #10
 8002d6c:	fb01 e505 	mlale	r5, r1, r5, lr
 8002d70:	e7e4      	b.n	8002d3c <_strtod_l+0x234>
 8002d72:	2301      	movs	r3, #1
 8002d74:	9305      	str	r3, [sp, #20]
 8002d76:	e781      	b.n	8002c7c <_strtod_l+0x174>
 8002d78:	f04f 0c01 	mov.w	ip, #1
 8002d7c:	1cb3      	adds	r3, r6, #2
 8002d7e:	931b      	str	r3, [sp, #108]	; 0x6c
 8002d80:	78b3      	ldrb	r3, [r6, #2]
 8002d82:	e78a      	b.n	8002c9a <_strtod_l+0x192>
 8002d84:	f04f 0c00 	mov.w	ip, #0
 8002d88:	e7f8      	b.n	8002d7c <_strtod_l+0x274>
 8002d8a:	bf00      	nop
 8002d8c:	0800675c 	.word	0x0800675c
 8002d90:	7ff00000 	.word	0x7ff00000
 8002d94:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8002d96:	1c5f      	adds	r7, r3, #1
 8002d98:	971b      	str	r7, [sp, #108]	; 0x6c
 8002d9a:	785b      	ldrb	r3, [r3, #1]
 8002d9c:	2b30      	cmp	r3, #48	; 0x30
 8002d9e:	d0f9      	beq.n	8002d94 <_strtod_l+0x28c>
 8002da0:	f1a3 0731 	sub.w	r7, r3, #49	; 0x31
 8002da4:	2f08      	cmp	r7, #8
 8002da6:	f63f af7d 	bhi.w	8002ca4 <_strtod_l+0x19c>
 8002daa:	f1a3 0e30 	sub.w	lr, r3, #48	; 0x30
 8002dae:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8002db0:	9309      	str	r3, [sp, #36]	; 0x24
 8002db2:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8002db4:	1c5f      	adds	r7, r3, #1
 8002db6:	971b      	str	r7, [sp, #108]	; 0x6c
 8002db8:	785b      	ldrb	r3, [r3, #1]
 8002dba:	f1a3 0830 	sub.w	r8, r3, #48	; 0x30
 8002dbe:	f1b8 0f09 	cmp.w	r8, #9
 8002dc2:	d937      	bls.n	8002e34 <_strtod_l+0x32c>
 8002dc4:	9909      	ldr	r1, [sp, #36]	; 0x24
 8002dc6:	1a7f      	subs	r7, r7, r1
 8002dc8:	2f08      	cmp	r7, #8
 8002dca:	f644 671f 	movw	r7, #19999	; 0x4e1f
 8002dce:	dc37      	bgt.n	8002e40 <_strtod_l+0x338>
 8002dd0:	45be      	cmp	lr, r7
 8002dd2:	bfa8      	it	ge
 8002dd4:	46be      	movge	lr, r7
 8002dd6:	f1bc 0f00 	cmp.w	ip, #0
 8002dda:	d001      	beq.n	8002de0 <_strtod_l+0x2d8>
 8002ddc:	f1ce 0e00 	rsb	lr, lr, #0
 8002de0:	2c00      	cmp	r4, #0
 8002de2:	d151      	bne.n	8002e88 <_strtod_l+0x380>
 8002de4:	2800      	cmp	r0, #0
 8002de6:	f47f aece 	bne.w	8002b86 <_strtod_l+0x7e>
 8002dea:	9a07      	ldr	r2, [sp, #28]
 8002dec:	2a00      	cmp	r2, #0
 8002dee:	f47f aeca 	bne.w	8002b86 <_strtod_l+0x7e>
 8002df2:	9a05      	ldr	r2, [sp, #20]
 8002df4:	2a00      	cmp	r2, #0
 8002df6:	f47f aee4 	bne.w	8002bc2 <_strtod_l+0xba>
 8002dfa:	2b4e      	cmp	r3, #78	; 0x4e
 8002dfc:	d027      	beq.n	8002e4e <_strtod_l+0x346>
 8002dfe:	dc21      	bgt.n	8002e44 <_strtod_l+0x33c>
 8002e00:	2b49      	cmp	r3, #73	; 0x49
 8002e02:	f47f aede 	bne.w	8002bc2 <_strtod_l+0xba>
 8002e06:	49a4      	ldr	r1, [pc, #656]	; (8003098 <_strtod_l+0x590>)
 8002e08:	a81b      	add	r0, sp, #108	; 0x6c
 8002e0a:	f002 f81f 	bl	8004e4c <__match>
 8002e0e:	2800      	cmp	r0, #0
 8002e10:	f43f aed7 	beq.w	8002bc2 <_strtod_l+0xba>
 8002e14:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8002e16:	49a1      	ldr	r1, [pc, #644]	; (800309c <_strtod_l+0x594>)
 8002e18:	3b01      	subs	r3, #1
 8002e1a:	a81b      	add	r0, sp, #108	; 0x6c
 8002e1c:	931b      	str	r3, [sp, #108]	; 0x6c
 8002e1e:	f002 f815 	bl	8004e4c <__match>
 8002e22:	b910      	cbnz	r0, 8002e2a <_strtod_l+0x322>
 8002e24:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8002e26:	3301      	adds	r3, #1
 8002e28:	931b      	str	r3, [sp, #108]	; 0x6c
 8002e2a:	f8df a284 	ldr.w	sl, [pc, #644]	; 80030b0 <_strtod_l+0x5a8>
 8002e2e:	f04f 0900 	mov.w	r9, #0
 8002e32:	e6a8      	b.n	8002b86 <_strtod_l+0x7e>
 8002e34:	210a      	movs	r1, #10
 8002e36:	fb01 3e0e 	mla	lr, r1, lr, r3
 8002e3a:	f1ae 0e30 	sub.w	lr, lr, #48	; 0x30
 8002e3e:	e7b8      	b.n	8002db2 <_strtod_l+0x2aa>
 8002e40:	46be      	mov	lr, r7
 8002e42:	e7c8      	b.n	8002dd6 <_strtod_l+0x2ce>
 8002e44:	2b69      	cmp	r3, #105	; 0x69
 8002e46:	d0de      	beq.n	8002e06 <_strtod_l+0x2fe>
 8002e48:	2b6e      	cmp	r3, #110	; 0x6e
 8002e4a:	f47f aeba 	bne.w	8002bc2 <_strtod_l+0xba>
 8002e4e:	4994      	ldr	r1, [pc, #592]	; (80030a0 <_strtod_l+0x598>)
 8002e50:	a81b      	add	r0, sp, #108	; 0x6c
 8002e52:	f001 fffb 	bl	8004e4c <__match>
 8002e56:	2800      	cmp	r0, #0
 8002e58:	f43f aeb3 	beq.w	8002bc2 <_strtod_l+0xba>
 8002e5c:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8002e5e:	781b      	ldrb	r3, [r3, #0]
 8002e60:	2b28      	cmp	r3, #40	; 0x28
 8002e62:	d10e      	bne.n	8002e82 <_strtod_l+0x37a>
 8002e64:	aa1e      	add	r2, sp, #120	; 0x78
 8002e66:	498f      	ldr	r1, [pc, #572]	; (80030a4 <_strtod_l+0x59c>)
 8002e68:	a81b      	add	r0, sp, #108	; 0x6c
 8002e6a:	f002 f803 	bl	8004e74 <__hexnan>
 8002e6e:	2805      	cmp	r0, #5
 8002e70:	d107      	bne.n	8002e82 <_strtod_l+0x37a>
 8002e72:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8002e74:	f8dd 9078 	ldr.w	r9, [sp, #120]	; 0x78
 8002e78:	f043 4aff 	orr.w	sl, r3, #2139095040	; 0x7f800000
 8002e7c:	f44a 0ae0 	orr.w	sl, sl, #7340032	; 0x700000
 8002e80:	e681      	b.n	8002b86 <_strtod_l+0x7e>
 8002e82:	f8df a234 	ldr.w	sl, [pc, #564]	; 80030b8 <_strtod_l+0x5b0>
 8002e86:	e7d2      	b.n	8002e2e <_strtod_l+0x326>
 8002e88:	ebae 0302 	sub.w	r3, lr, r2
 8002e8c:	9307      	str	r3, [sp, #28]
 8002e8e:	9b04      	ldr	r3, [sp, #16]
 8002e90:	9806      	ldr	r0, [sp, #24]
 8002e92:	2b00      	cmp	r3, #0
 8002e94:	bf08      	it	eq
 8002e96:	4623      	moveq	r3, r4
 8002e98:	2c10      	cmp	r4, #16
 8002e9a:	9304      	str	r3, [sp, #16]
 8002e9c:	46a0      	mov	r8, r4
 8002e9e:	bfa8      	it	ge
 8002ea0:	f04f 0810 	movge.w	r8, #16
 8002ea4:	f7fd fb4e 	bl	8000544 <__aeabi_ui2d>
 8002ea8:	2c09      	cmp	r4, #9
 8002eaa:	4681      	mov	r9, r0
 8002eac:	468a      	mov	sl, r1
 8002eae:	dc13      	bgt.n	8002ed8 <_strtod_l+0x3d0>
 8002eb0:	9b07      	ldr	r3, [sp, #28]
 8002eb2:	2b00      	cmp	r3, #0
 8002eb4:	f43f ae67 	beq.w	8002b86 <_strtod_l+0x7e>
 8002eb8:	9b07      	ldr	r3, [sp, #28]
 8002eba:	dd7e      	ble.n	8002fba <_strtod_l+0x4b2>
 8002ebc:	2b16      	cmp	r3, #22
 8002ebe:	dc65      	bgt.n	8002f8c <_strtod_l+0x484>
 8002ec0:	4a79      	ldr	r2, [pc, #484]	; (80030a8 <_strtod_l+0x5a0>)
 8002ec2:	eb02 0ec3 	add.w	lr, r2, r3, lsl #3
 8002ec6:	e9de 0100 	ldrd	r0, r1, [lr]
 8002eca:	464a      	mov	r2, r9
 8002ecc:	4653      	mov	r3, sl
 8002ece:	f7fd fbb3 	bl	8000638 <__aeabi_dmul>
 8002ed2:	4681      	mov	r9, r0
 8002ed4:	468a      	mov	sl, r1
 8002ed6:	e656      	b.n	8002b86 <_strtod_l+0x7e>
 8002ed8:	4b73      	ldr	r3, [pc, #460]	; (80030a8 <_strtod_l+0x5a0>)
 8002eda:	eb03 03c8 	add.w	r3, r3, r8, lsl #3
 8002ede:	e953 2312 	ldrd	r2, r3, [r3, #-72]	; 0x48
 8002ee2:	f7fd fba9 	bl	8000638 <__aeabi_dmul>
 8002ee6:	4606      	mov	r6, r0
 8002ee8:	4628      	mov	r0, r5
 8002eea:	460f      	mov	r7, r1
 8002eec:	f7fd fb2a 	bl	8000544 <__aeabi_ui2d>
 8002ef0:	4602      	mov	r2, r0
 8002ef2:	460b      	mov	r3, r1
 8002ef4:	4630      	mov	r0, r6
 8002ef6:	4639      	mov	r1, r7
 8002ef8:	f7fd f9e8 	bl	80002cc <__adddf3>
 8002efc:	2c0f      	cmp	r4, #15
 8002efe:	4681      	mov	r9, r0
 8002f00:	468a      	mov	sl, r1
 8002f02:	ddd5      	ble.n	8002eb0 <_strtod_l+0x3a8>
 8002f04:	9b07      	ldr	r3, [sp, #28]
 8002f06:	eba4 0808 	sub.w	r8, r4, r8
 8002f0a:	4498      	add	r8, r3
 8002f0c:	f1b8 0f00 	cmp.w	r8, #0
 8002f10:	f340 809a 	ble.w	8003048 <_strtod_l+0x540>
 8002f14:	f018 030f 	ands.w	r3, r8, #15
 8002f18:	d00a      	beq.n	8002f30 <_strtod_l+0x428>
 8002f1a:	4963      	ldr	r1, [pc, #396]	; (80030a8 <_strtod_l+0x5a0>)
 8002f1c:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 8002f20:	464a      	mov	r2, r9
 8002f22:	4653      	mov	r3, sl
 8002f24:	e9d1 0100 	ldrd	r0, r1, [r1]
 8002f28:	f7fd fb86 	bl	8000638 <__aeabi_dmul>
 8002f2c:	4681      	mov	r9, r0
 8002f2e:	468a      	mov	sl, r1
 8002f30:	f038 080f 	bics.w	r8, r8, #15
 8002f34:	d077      	beq.n	8003026 <_strtod_l+0x51e>
 8002f36:	f5b8 7f9a 	cmp.w	r8, #308	; 0x134
 8002f3a:	dd4b      	ble.n	8002fd4 <_strtod_l+0x4cc>
 8002f3c:	f04f 0800 	mov.w	r8, #0
 8002f40:	f8cd 8010 	str.w	r8, [sp, #16]
 8002f44:	f8cd 8020 	str.w	r8, [sp, #32]
 8002f48:	f8cd 8018 	str.w	r8, [sp, #24]
 8002f4c:	2322      	movs	r3, #34	; 0x22
 8002f4e:	f8df a160 	ldr.w	sl, [pc, #352]	; 80030b0 <_strtod_l+0x5a8>
 8002f52:	f8cb 3000 	str.w	r3, [fp]
 8002f56:	f04f 0900 	mov.w	r9, #0
 8002f5a:	9b08      	ldr	r3, [sp, #32]
 8002f5c:	2b00      	cmp	r3, #0
 8002f5e:	f43f ae12 	beq.w	8002b86 <_strtod_l+0x7e>
 8002f62:	991c      	ldr	r1, [sp, #112]	; 0x70
 8002f64:	4658      	mov	r0, fp
 8002f66:	f002 f8e6 	bl	8005136 <_Bfree>
 8002f6a:	9906      	ldr	r1, [sp, #24]
 8002f6c:	4658      	mov	r0, fp
 8002f6e:	f002 f8e2 	bl	8005136 <_Bfree>
 8002f72:	9904      	ldr	r1, [sp, #16]
 8002f74:	4658      	mov	r0, fp
 8002f76:	f002 f8de 	bl	8005136 <_Bfree>
 8002f7a:	9908      	ldr	r1, [sp, #32]
 8002f7c:	4658      	mov	r0, fp
 8002f7e:	f002 f8da 	bl	8005136 <_Bfree>
 8002f82:	4641      	mov	r1, r8
 8002f84:	4658      	mov	r0, fp
 8002f86:	f002 f8d6 	bl	8005136 <_Bfree>
 8002f8a:	e5fc      	b.n	8002b86 <_strtod_l+0x7e>
 8002f8c:	9a07      	ldr	r2, [sp, #28]
 8002f8e:	f1c4 0325 	rsb	r3, r4, #37	; 0x25
 8002f92:	4293      	cmp	r3, r2
 8002f94:	dbb6      	blt.n	8002f04 <_strtod_l+0x3fc>
 8002f96:	4d44      	ldr	r5, [pc, #272]	; (80030a8 <_strtod_l+0x5a0>)
 8002f98:	f1c4 040f 	rsb	r4, r4, #15
 8002f9c:	eb05 01c4 	add.w	r1, r5, r4, lsl #3
 8002fa0:	464a      	mov	r2, r9
 8002fa2:	4653      	mov	r3, sl
 8002fa4:	e9d1 0100 	ldrd	r0, r1, [r1]
 8002fa8:	f7fd fb46 	bl	8000638 <__aeabi_dmul>
 8002fac:	9b07      	ldr	r3, [sp, #28]
 8002fae:	1b1c      	subs	r4, r3, r4
 8002fb0:	eb05 05c4 	add.w	r5, r5, r4, lsl #3
 8002fb4:	e9d5 2300 	ldrd	r2, r3, [r5]
 8002fb8:	e789      	b.n	8002ece <_strtod_l+0x3c6>
 8002fba:	f113 0f16 	cmn.w	r3, #22
 8002fbe:	dba1      	blt.n	8002f04 <_strtod_l+0x3fc>
 8002fc0:	4a39      	ldr	r2, [pc, #228]	; (80030a8 <_strtod_l+0x5a0>)
 8002fc2:	eba2 02c3 	sub.w	r2, r2, r3, lsl #3
 8002fc6:	e9d2 2300 	ldrd	r2, r3, [r2]
 8002fca:	4648      	mov	r0, r9
 8002fcc:	4651      	mov	r1, sl
 8002fce:	f7fd fc5d 	bl	800088c <__aeabi_ddiv>
 8002fd2:	e77e      	b.n	8002ed2 <_strtod_l+0x3ca>
 8002fd4:	2300      	movs	r3, #0
 8002fd6:	4e35      	ldr	r6, [pc, #212]	; (80030ac <_strtod_l+0x5a4>)
 8002fd8:	ea4f 1828 	mov.w	r8, r8, asr #4
 8002fdc:	4648      	mov	r0, r9
 8002fde:	4651      	mov	r1, sl
 8002fe0:	461d      	mov	r5, r3
 8002fe2:	f1b8 0f01 	cmp.w	r8, #1
 8002fe6:	dc21      	bgt.n	800302c <_strtod_l+0x524>
 8002fe8:	b10b      	cbz	r3, 8002fee <_strtod_l+0x4e6>
 8002fea:	4681      	mov	r9, r0
 8002fec:	468a      	mov	sl, r1
 8002fee:	4b2f      	ldr	r3, [pc, #188]	; (80030ac <_strtod_l+0x5a4>)
 8002ff0:	f1aa 7a54 	sub.w	sl, sl, #55574528	; 0x3500000
 8002ff4:	eb03 05c5 	add.w	r5, r3, r5, lsl #3
 8002ff8:	464a      	mov	r2, r9
 8002ffa:	4653      	mov	r3, sl
 8002ffc:	e9d5 0100 	ldrd	r0, r1, [r5]
 8003000:	f7fd fb1a 	bl	8000638 <__aeabi_dmul>
 8003004:	4b2a      	ldr	r3, [pc, #168]	; (80030b0 <_strtod_l+0x5a8>)
 8003006:	460a      	mov	r2, r1
 8003008:	400b      	ands	r3, r1
 800300a:	492a      	ldr	r1, [pc, #168]	; (80030b4 <_strtod_l+0x5ac>)
 800300c:	428b      	cmp	r3, r1
 800300e:	4681      	mov	r9, r0
 8003010:	d894      	bhi.n	8002f3c <_strtod_l+0x434>
 8003012:	f5a1 1180 	sub.w	r1, r1, #1048576	; 0x100000
 8003016:	428b      	cmp	r3, r1
 8003018:	bf86      	itte	hi
 800301a:	f8df a0a0 	ldrhi.w	sl, [pc, #160]	; 80030bc <_strtod_l+0x5b4>
 800301e:	f04f 39ff 	movhi.w	r9, #4294967295
 8003022:	f102 7a54 	addls.w	sl, r2, #55574528	; 0x3500000
 8003026:	2300      	movs	r3, #0
 8003028:	9305      	str	r3, [sp, #20]
 800302a:	e07b      	b.n	8003124 <_strtod_l+0x61c>
 800302c:	f018 0f01 	tst.w	r8, #1
 8003030:	d006      	beq.n	8003040 <_strtod_l+0x538>
 8003032:	eb06 03c5 	add.w	r3, r6, r5, lsl #3
 8003036:	e9d3 2300 	ldrd	r2, r3, [r3]
 800303a:	f7fd fafd 	bl	8000638 <__aeabi_dmul>
 800303e:	2301      	movs	r3, #1
 8003040:	3501      	adds	r5, #1
 8003042:	ea4f 0868 	mov.w	r8, r8, asr #1
 8003046:	e7cc      	b.n	8002fe2 <_strtod_l+0x4da>
 8003048:	d0ed      	beq.n	8003026 <_strtod_l+0x51e>
 800304a:	f1c8 0800 	rsb	r8, r8, #0
 800304e:	f018 020f 	ands.w	r2, r8, #15
 8003052:	d00a      	beq.n	800306a <_strtod_l+0x562>
 8003054:	4b14      	ldr	r3, [pc, #80]	; (80030a8 <_strtod_l+0x5a0>)
 8003056:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800305a:	4648      	mov	r0, r9
 800305c:	4651      	mov	r1, sl
 800305e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003062:	f7fd fc13 	bl	800088c <__aeabi_ddiv>
 8003066:	4681      	mov	r9, r0
 8003068:	468a      	mov	sl, r1
 800306a:	ea5f 1828 	movs.w	r8, r8, asr #4
 800306e:	d0da      	beq.n	8003026 <_strtod_l+0x51e>
 8003070:	f1b8 0f1f 	cmp.w	r8, #31
 8003074:	dd24      	ble.n	80030c0 <_strtod_l+0x5b8>
 8003076:	f04f 0800 	mov.w	r8, #0
 800307a:	f8cd 8010 	str.w	r8, [sp, #16]
 800307e:	f8cd 8020 	str.w	r8, [sp, #32]
 8003082:	f8cd 8018 	str.w	r8, [sp, #24]
 8003086:	2322      	movs	r3, #34	; 0x22
 8003088:	f04f 0900 	mov.w	r9, #0
 800308c:	f04f 0a00 	mov.w	sl, #0
 8003090:	f8cb 3000 	str.w	r3, [fp]
 8003094:	e761      	b.n	8002f5a <_strtod_l+0x452>
 8003096:	bf00      	nop
 8003098:	08006725 	.word	0x08006725
 800309c:	080067b3 	.word	0x080067b3
 80030a0:	0800672d 	.word	0x0800672d
 80030a4:	08006770 	.word	0x08006770
 80030a8:	08006858 	.word	0x08006858
 80030ac:	08006830 	.word	0x08006830
 80030b0:	7ff00000 	.word	0x7ff00000
 80030b4:	7ca00000 	.word	0x7ca00000
 80030b8:	fff80000 	.word	0xfff80000
 80030bc:	7fefffff 	.word	0x7fefffff
 80030c0:	f018 0310 	ands.w	r3, r8, #16
 80030c4:	bf18      	it	ne
 80030c6:	236a      	movne	r3, #106	; 0x6a
 80030c8:	4da2      	ldr	r5, [pc, #648]	; (8003354 <_strtod_l+0x84c>)
 80030ca:	9305      	str	r3, [sp, #20]
 80030cc:	4648      	mov	r0, r9
 80030ce:	4651      	mov	r1, sl
 80030d0:	2300      	movs	r3, #0
 80030d2:	f1b8 0f00 	cmp.w	r8, #0
 80030d6:	f300 8110 	bgt.w	80032fa <_strtod_l+0x7f2>
 80030da:	b10b      	cbz	r3, 80030e0 <_strtod_l+0x5d8>
 80030dc:	4681      	mov	r9, r0
 80030de:	468a      	mov	sl, r1
 80030e0:	9b05      	ldr	r3, [sp, #20]
 80030e2:	b1bb      	cbz	r3, 8003114 <_strtod_l+0x60c>
 80030e4:	f3ca 530a 	ubfx	r3, sl, #20, #11
 80030e8:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
 80030ec:	2b00      	cmp	r3, #0
 80030ee:	4651      	mov	r1, sl
 80030f0:	dd10      	ble.n	8003114 <_strtod_l+0x60c>
 80030f2:	2b1f      	cmp	r3, #31
 80030f4:	f340 810d 	ble.w	8003312 <_strtod_l+0x80a>
 80030f8:	2b34      	cmp	r3, #52	; 0x34
 80030fa:	bfde      	ittt	le
 80030fc:	3b20      	suble	r3, #32
 80030fe:	f04f 32ff 	movle.w	r2, #4294967295
 8003102:	fa02 f303 	lslle.w	r3, r2, r3
 8003106:	f04f 0900 	mov.w	r9, #0
 800310a:	bfcc      	ite	gt
 800310c:	f04f 7a5c 	movgt.w	sl, #57671680	; 0x3700000
 8003110:	ea03 0a01 	andle.w	sl, r3, r1
 8003114:	2200      	movs	r2, #0
 8003116:	2300      	movs	r3, #0
 8003118:	4648      	mov	r0, r9
 800311a:	4651      	mov	r1, sl
 800311c:	f7fd fcf4 	bl	8000b08 <__aeabi_dcmpeq>
 8003120:	2800      	cmp	r0, #0
 8003122:	d1a8      	bne.n	8003076 <_strtod_l+0x56e>
 8003124:	9b06      	ldr	r3, [sp, #24]
 8003126:	9300      	str	r3, [sp, #0]
 8003128:	9a04      	ldr	r2, [sp, #16]
 800312a:	9908      	ldr	r1, [sp, #32]
 800312c:	4623      	mov	r3, r4
 800312e:	4658      	mov	r0, fp
 8003130:	f002 f853 	bl	80051da <__s2b>
 8003134:	9008      	str	r0, [sp, #32]
 8003136:	2800      	cmp	r0, #0
 8003138:	f43f af00 	beq.w	8002f3c <_strtod_l+0x434>
 800313c:	9a07      	ldr	r2, [sp, #28]
 800313e:	9b07      	ldr	r3, [sp, #28]
 8003140:	2a00      	cmp	r2, #0
 8003142:	f1c3 0300 	rsb	r3, r3, #0
 8003146:	bfa8      	it	ge
 8003148:	2300      	movge	r3, #0
 800314a:	930e      	str	r3, [sp, #56]	; 0x38
 800314c:	f04f 0800 	mov.w	r8, #0
 8003150:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
 8003154:	9316      	str	r3, [sp, #88]	; 0x58
 8003156:	f8cd 8010 	str.w	r8, [sp, #16]
 800315a:	9b08      	ldr	r3, [sp, #32]
 800315c:	4658      	mov	r0, fp
 800315e:	6859      	ldr	r1, [r3, #4]
 8003160:	f001 ffb5 	bl	80050ce <_Balloc>
 8003164:	9006      	str	r0, [sp, #24]
 8003166:	2800      	cmp	r0, #0
 8003168:	f43f aef0 	beq.w	8002f4c <_strtod_l+0x444>
 800316c:	9b08      	ldr	r3, [sp, #32]
 800316e:	691a      	ldr	r2, [r3, #16]
 8003170:	3202      	adds	r2, #2
 8003172:	f103 010c 	add.w	r1, r3, #12
 8003176:	0092      	lsls	r2, r2, #2
 8003178:	300c      	adds	r0, #12
 800317a:	f001 ff9d 	bl	80050b8 <memcpy>
 800317e:	ab1e      	add	r3, sp, #120	; 0x78
 8003180:	9301      	str	r3, [sp, #4]
 8003182:	ab1d      	add	r3, sp, #116	; 0x74
 8003184:	9300      	str	r3, [sp, #0]
 8003186:	464a      	mov	r2, r9
 8003188:	4653      	mov	r3, sl
 800318a:	4658      	mov	r0, fp
 800318c:	e9cd 9a0a 	strd	r9, sl, [sp, #40]	; 0x28
 8003190:	f002 fade 	bl	8005750 <__d2b>
 8003194:	901c      	str	r0, [sp, #112]	; 0x70
 8003196:	2800      	cmp	r0, #0
 8003198:	f43f aed8 	beq.w	8002f4c <_strtod_l+0x444>
 800319c:	2101      	movs	r1, #1
 800319e:	4658      	mov	r0, fp
 80031a0:	f002 f8a7 	bl	80052f2 <__i2b>
 80031a4:	9004      	str	r0, [sp, #16]
 80031a6:	4603      	mov	r3, r0
 80031a8:	2800      	cmp	r0, #0
 80031aa:	f43f aecf 	beq.w	8002f4c <_strtod_l+0x444>
 80031ae:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 80031b0:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 80031b2:	2d00      	cmp	r5, #0
 80031b4:	bfab      	itete	ge
 80031b6:	9b0e      	ldrge	r3, [sp, #56]	; 0x38
 80031b8:	9b16      	ldrlt	r3, [sp, #88]	; 0x58
 80031ba:	9c16      	ldrge	r4, [sp, #88]	; 0x58
 80031bc:	9e0e      	ldrlt	r6, [sp, #56]	; 0x38
 80031be:	bfac      	ite	ge
 80031c0:	18ee      	addge	r6, r5, r3
 80031c2:	1b5c      	sublt	r4, r3, r5
 80031c4:	9b05      	ldr	r3, [sp, #20]
 80031c6:	1aed      	subs	r5, r5, r3
 80031c8:	4415      	add	r5, r2
 80031ca:	4b63      	ldr	r3, [pc, #396]	; (8003358 <_strtod_l+0x850>)
 80031cc:	3d01      	subs	r5, #1
 80031ce:	429d      	cmp	r5, r3
 80031d0:	f1c2 0236 	rsb	r2, r2, #54	; 0x36
 80031d4:	f280 80af 	bge.w	8003336 <_strtod_l+0x82e>
 80031d8:	1b5b      	subs	r3, r3, r5
 80031da:	2b1f      	cmp	r3, #31
 80031dc:	eba2 0203 	sub.w	r2, r2, r3
 80031e0:	f04f 0701 	mov.w	r7, #1
 80031e4:	f300 809c 	bgt.w	8003320 <_strtod_l+0x818>
 80031e8:	fa07 f303 	lsl.w	r3, r7, r3
 80031ec:	930f      	str	r3, [sp, #60]	; 0x3c
 80031ee:	2500      	movs	r5, #0
 80031f0:	18b7      	adds	r7, r6, r2
 80031f2:	9b05      	ldr	r3, [sp, #20]
 80031f4:	42be      	cmp	r6, r7
 80031f6:	4414      	add	r4, r2
 80031f8:	441c      	add	r4, r3
 80031fa:	4633      	mov	r3, r6
 80031fc:	bfa8      	it	ge
 80031fe:	463b      	movge	r3, r7
 8003200:	42a3      	cmp	r3, r4
 8003202:	bfa8      	it	ge
 8003204:	4623      	movge	r3, r4
 8003206:	2b00      	cmp	r3, #0
 8003208:	bfc2      	ittt	gt
 800320a:	1aff      	subgt	r7, r7, r3
 800320c:	1ae4      	subgt	r4, r4, r3
 800320e:	1af6      	subgt	r6, r6, r3
 8003210:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8003212:	b1bb      	cbz	r3, 8003244 <_strtod_l+0x73c>
 8003214:	461a      	mov	r2, r3
 8003216:	9904      	ldr	r1, [sp, #16]
 8003218:	4658      	mov	r0, fp
 800321a:	f002 f909 	bl	8005430 <__pow5mult>
 800321e:	9004      	str	r0, [sp, #16]
 8003220:	2800      	cmp	r0, #0
 8003222:	f43f ae93 	beq.w	8002f4c <_strtod_l+0x444>
 8003226:	4601      	mov	r1, r0
 8003228:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 800322a:	4658      	mov	r0, fp
 800322c:	f002 f86a 	bl	8005304 <__multiply>
 8003230:	9009      	str	r0, [sp, #36]	; 0x24
 8003232:	2800      	cmp	r0, #0
 8003234:	f43f ae8a 	beq.w	8002f4c <_strtod_l+0x444>
 8003238:	991c      	ldr	r1, [sp, #112]	; 0x70
 800323a:	4658      	mov	r0, fp
 800323c:	f001 ff7b 	bl	8005136 <_Bfree>
 8003240:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003242:	931c      	str	r3, [sp, #112]	; 0x70
 8003244:	2f00      	cmp	r7, #0
 8003246:	dc7a      	bgt.n	800333e <_strtod_l+0x836>
 8003248:	9b07      	ldr	r3, [sp, #28]
 800324a:	2b00      	cmp	r3, #0
 800324c:	dd08      	ble.n	8003260 <_strtod_l+0x758>
 800324e:	9a16      	ldr	r2, [sp, #88]	; 0x58
 8003250:	9906      	ldr	r1, [sp, #24]
 8003252:	4658      	mov	r0, fp
 8003254:	f002 f8ec 	bl	8005430 <__pow5mult>
 8003258:	9006      	str	r0, [sp, #24]
 800325a:	2800      	cmp	r0, #0
 800325c:	f43f ae76 	beq.w	8002f4c <_strtod_l+0x444>
 8003260:	2c00      	cmp	r4, #0
 8003262:	dd08      	ble.n	8003276 <_strtod_l+0x76e>
 8003264:	4622      	mov	r2, r4
 8003266:	9906      	ldr	r1, [sp, #24]
 8003268:	4658      	mov	r0, fp
 800326a:	f002 f92f 	bl	80054cc <__lshift>
 800326e:	9006      	str	r0, [sp, #24]
 8003270:	2800      	cmp	r0, #0
 8003272:	f43f ae6b 	beq.w	8002f4c <_strtod_l+0x444>
 8003276:	2e00      	cmp	r6, #0
 8003278:	dd08      	ble.n	800328c <_strtod_l+0x784>
 800327a:	4632      	mov	r2, r6
 800327c:	9904      	ldr	r1, [sp, #16]
 800327e:	4658      	mov	r0, fp
 8003280:	f002 f924 	bl	80054cc <__lshift>
 8003284:	9004      	str	r0, [sp, #16]
 8003286:	2800      	cmp	r0, #0
 8003288:	f43f ae60 	beq.w	8002f4c <_strtod_l+0x444>
 800328c:	9a06      	ldr	r2, [sp, #24]
 800328e:	991c      	ldr	r1, [sp, #112]	; 0x70
 8003290:	4658      	mov	r0, fp
 8003292:	f002 f989 	bl	80055a8 <__mdiff>
 8003296:	4680      	mov	r8, r0
 8003298:	2800      	cmp	r0, #0
 800329a:	f43f ae57 	beq.w	8002f4c <_strtod_l+0x444>
 800329e:	2400      	movs	r4, #0
 80032a0:	68c3      	ldr	r3, [r0, #12]
 80032a2:	9904      	ldr	r1, [sp, #16]
 80032a4:	60c4      	str	r4, [r0, #12]
 80032a6:	930c      	str	r3, [sp, #48]	; 0x30
 80032a8:	f002 f964 	bl	8005574 <__mcmp>
 80032ac:	42a0      	cmp	r0, r4
 80032ae:	da55      	bge.n	800335c <_strtod_l+0x854>
 80032b0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80032b2:	b9f3      	cbnz	r3, 80032f2 <_strtod_l+0x7ea>
 80032b4:	f1b9 0f00 	cmp.w	r9, #0
 80032b8:	d11b      	bne.n	80032f2 <_strtod_l+0x7ea>
 80032ba:	f3ca 0313 	ubfx	r3, sl, #0, #20
 80032be:	b9c3      	cbnz	r3, 80032f2 <_strtod_l+0x7ea>
 80032c0:	f02a 4300 	bic.w	r3, sl, #2147483648	; 0x80000000
 80032c4:	0d1b      	lsrs	r3, r3, #20
 80032c6:	051b      	lsls	r3, r3, #20
 80032c8:	f1b3 6fd6 	cmp.w	r3, #112197632	; 0x6b00000
 80032cc:	d911      	bls.n	80032f2 <_strtod_l+0x7ea>
 80032ce:	f8d8 3014 	ldr.w	r3, [r8, #20]
 80032d2:	b91b      	cbnz	r3, 80032dc <_strtod_l+0x7d4>
 80032d4:	f8d8 3010 	ldr.w	r3, [r8, #16]
 80032d8:	2b01      	cmp	r3, #1
 80032da:	dd0a      	ble.n	80032f2 <_strtod_l+0x7ea>
 80032dc:	4641      	mov	r1, r8
 80032de:	2201      	movs	r2, #1
 80032e0:	4658      	mov	r0, fp
 80032e2:	f002 f8f3 	bl	80054cc <__lshift>
 80032e6:	9904      	ldr	r1, [sp, #16]
 80032e8:	4680      	mov	r8, r0
 80032ea:	f002 f943 	bl	8005574 <__mcmp>
 80032ee:	2800      	cmp	r0, #0
 80032f0:	dc69      	bgt.n	80033c6 <_strtod_l+0x8be>
 80032f2:	9b05      	ldr	r3, [sp, #20]
 80032f4:	2b00      	cmp	r3, #0
 80032f6:	d173      	bne.n	80033e0 <_strtod_l+0x8d8>
 80032f8:	e633      	b.n	8002f62 <_strtod_l+0x45a>
 80032fa:	f018 0f01 	tst.w	r8, #1
 80032fe:	d004      	beq.n	800330a <_strtod_l+0x802>
 8003300:	e9d5 2300 	ldrd	r2, r3, [r5]
 8003304:	f7fd f998 	bl	8000638 <__aeabi_dmul>
 8003308:	2301      	movs	r3, #1
 800330a:	ea4f 0868 	mov.w	r8, r8, asr #1
 800330e:	3508      	adds	r5, #8
 8003310:	e6df      	b.n	80030d2 <_strtod_l+0x5ca>
 8003312:	f04f 32ff 	mov.w	r2, #4294967295
 8003316:	fa02 f303 	lsl.w	r3, r2, r3
 800331a:	ea03 0909 	and.w	r9, r3, r9
 800331e:	e6f9      	b.n	8003114 <_strtod_l+0x60c>
 8003320:	f1c5 457f 	rsb	r5, r5, #4278190080	; 0xff000000
 8003324:	f505 057f 	add.w	r5, r5, #16711680	; 0xff0000
 8003328:	f505 457b 	add.w	r5, r5, #64256	; 0xfb00
 800332c:	35e2      	adds	r5, #226	; 0xe2
 800332e:	fa07 f505 	lsl.w	r5, r7, r5
 8003332:	970f      	str	r7, [sp, #60]	; 0x3c
 8003334:	e75c      	b.n	80031f0 <_strtod_l+0x6e8>
 8003336:	2301      	movs	r3, #1
 8003338:	2500      	movs	r5, #0
 800333a:	930f      	str	r3, [sp, #60]	; 0x3c
 800333c:	e758      	b.n	80031f0 <_strtod_l+0x6e8>
 800333e:	463a      	mov	r2, r7
 8003340:	991c      	ldr	r1, [sp, #112]	; 0x70
 8003342:	4658      	mov	r0, fp
 8003344:	f002 f8c2 	bl	80054cc <__lshift>
 8003348:	901c      	str	r0, [sp, #112]	; 0x70
 800334a:	2800      	cmp	r0, #0
 800334c:	f47f af7c 	bne.w	8003248 <_strtod_l+0x740>
 8003350:	e5fc      	b.n	8002f4c <_strtod_l+0x444>
 8003352:	bf00      	nop
 8003354:	08006788 	.word	0x08006788
 8003358:	fffffc02 	.word	0xfffffc02
 800335c:	f8cd a024 	str.w	sl, [sp, #36]	; 0x24
 8003360:	f040 8089 	bne.w	8003476 <_strtod_l+0x96e>
 8003364:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8003366:	f3ca 0313 	ubfx	r3, sl, #0, #20
 800336a:	b342      	cbz	r2, 80033be <_strtod_l+0x8b6>
 800336c:	4ab0      	ldr	r2, [pc, #704]	; (8003630 <_strtod_l+0xb28>)
 800336e:	4293      	cmp	r3, r2
 8003370:	d156      	bne.n	8003420 <_strtod_l+0x918>
 8003372:	9b05      	ldr	r3, [sp, #20]
 8003374:	4648      	mov	r0, r9
 8003376:	b1eb      	cbz	r3, 80033b4 <_strtod_l+0x8ac>
 8003378:	4aae      	ldr	r2, [pc, #696]	; (8003634 <_strtod_l+0xb2c>)
 800337a:	4653      	mov	r3, sl
 800337c:	401a      	ands	r2, r3
 800337e:	f1b2 6fd4 	cmp.w	r2, #111149056	; 0x6a00000
 8003382:	f04f 31ff 	mov.w	r1, #4294967295
 8003386:	d818      	bhi.n	80033ba <_strtod_l+0x8b2>
 8003388:	0d12      	lsrs	r2, r2, #20
 800338a:	f1c2 036b 	rsb	r3, r2, #107	; 0x6b
 800338e:	fa01 f303 	lsl.w	r3, r1, r3
 8003392:	4298      	cmp	r0, r3
 8003394:	d144      	bne.n	8003420 <_strtod_l+0x918>
 8003396:	4ba8      	ldr	r3, [pc, #672]	; (8003638 <_strtod_l+0xb30>)
 8003398:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800339a:	429a      	cmp	r2, r3
 800339c:	d102      	bne.n	80033a4 <_strtod_l+0x89c>
 800339e:	3001      	adds	r0, #1
 80033a0:	f43f add4 	beq.w	8002f4c <_strtod_l+0x444>
 80033a4:	4ba3      	ldr	r3, [pc, #652]	; (8003634 <_strtod_l+0xb2c>)
 80033a6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80033a8:	401a      	ands	r2, r3
 80033aa:	f502 1a80 	add.w	sl, r2, #1048576	; 0x100000
 80033ae:	f04f 0900 	mov.w	r9, #0
 80033b2:	e79e      	b.n	80032f2 <_strtod_l+0x7ea>
 80033b4:	f04f 33ff 	mov.w	r3, #4294967295
 80033b8:	e7eb      	b.n	8003392 <_strtod_l+0x88a>
 80033ba:	460b      	mov	r3, r1
 80033bc:	e7e9      	b.n	8003392 <_strtod_l+0x88a>
 80033be:	bb7b      	cbnz	r3, 8003420 <_strtod_l+0x918>
 80033c0:	f1b9 0f00 	cmp.w	r9, #0
 80033c4:	d12c      	bne.n	8003420 <_strtod_l+0x918>
 80033c6:	9905      	ldr	r1, [sp, #20]
 80033c8:	4a9a      	ldr	r2, [pc, #616]	; (8003634 <_strtod_l+0xb2c>)
 80033ca:	4653      	mov	r3, sl
 80033cc:	b1f1      	cbz	r1, 800340c <_strtod_l+0x904>
 80033ce:	ea02 010a 	and.w	r1, r2, sl
 80033d2:	f1b1 6fd6 	cmp.w	r1, #112197632	; 0x6b00000
 80033d6:	dc19      	bgt.n	800340c <_strtod_l+0x904>
 80033d8:	f1b1 7f5c 	cmp.w	r1, #57671680	; 0x3700000
 80033dc:	f77f ae53 	ble.w	8003086 <_strtod_l+0x57e>
 80033e0:	4a96      	ldr	r2, [pc, #600]	; (800363c <_strtod_l+0xb34>)
 80033e2:	2300      	movs	r3, #0
 80033e4:	e9cd 3214 	strd	r3, r2, [sp, #80]	; 0x50
 80033e8:	4648      	mov	r0, r9
 80033ea:	4651      	mov	r1, sl
 80033ec:	e9dd 2314 	ldrd	r2, r3, [sp, #80]	; 0x50
 80033f0:	f7fd f922 	bl	8000638 <__aeabi_dmul>
 80033f4:	4681      	mov	r9, r0
 80033f6:	468a      	mov	sl, r1
 80033f8:	2900      	cmp	r1, #0
 80033fa:	f47f adb2 	bne.w	8002f62 <_strtod_l+0x45a>
 80033fe:	2800      	cmp	r0, #0
 8003400:	f47f adaf 	bne.w	8002f62 <_strtod_l+0x45a>
 8003404:	2322      	movs	r3, #34	; 0x22
 8003406:	f8cb 3000 	str.w	r3, [fp]
 800340a:	e5aa      	b.n	8002f62 <_strtod_l+0x45a>
 800340c:	4013      	ands	r3, r2
 800340e:	f5a3 1380 	sub.w	r3, r3, #1048576	; 0x100000
 8003412:	ea6f 5a13 	mvn.w	sl, r3, lsr #20
 8003416:	ea6f 5a0a 	mvn.w	sl, sl, lsl #20
 800341a:	f04f 39ff 	mov.w	r9, #4294967295
 800341e:	e768      	b.n	80032f2 <_strtod_l+0x7ea>
 8003420:	b19d      	cbz	r5, 800344a <_strtod_l+0x942>
 8003422:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003424:	421d      	tst	r5, r3
 8003426:	f43f af64 	beq.w	80032f2 <_strtod_l+0x7ea>
 800342a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800342c:	9a05      	ldr	r2, [sp, #20]
 800342e:	4648      	mov	r0, r9
 8003430:	4651      	mov	r1, sl
 8003432:	b173      	cbz	r3, 8003452 <_strtod_l+0x94a>
 8003434:	f7ff fb46 	bl	8002ac4 <sulp>
 8003438:	4602      	mov	r2, r0
 800343a:	460b      	mov	r3, r1
 800343c:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 8003440:	f7fc ff44 	bl	80002cc <__adddf3>
 8003444:	4681      	mov	r9, r0
 8003446:	468a      	mov	sl, r1
 8003448:	e753      	b.n	80032f2 <_strtod_l+0x7ea>
 800344a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800344c:	ea13 0f09 	tst.w	r3, r9
 8003450:	e7e9      	b.n	8003426 <_strtod_l+0x91e>
 8003452:	f7ff fb37 	bl	8002ac4 <sulp>
 8003456:	4602      	mov	r2, r0
 8003458:	460b      	mov	r3, r1
 800345a:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 800345e:	f7fc ff33 	bl	80002c8 <__aeabi_dsub>
 8003462:	2200      	movs	r2, #0
 8003464:	2300      	movs	r3, #0
 8003466:	4681      	mov	r9, r0
 8003468:	468a      	mov	sl, r1
 800346a:	f7fd fb4d 	bl	8000b08 <__aeabi_dcmpeq>
 800346e:	2800      	cmp	r0, #0
 8003470:	f47f ae09 	bne.w	8003086 <_strtod_l+0x57e>
 8003474:	e73d      	b.n	80032f2 <_strtod_l+0x7ea>
 8003476:	9904      	ldr	r1, [sp, #16]
 8003478:	4640      	mov	r0, r8
 800347a:	f002 f9b8 	bl	80057ee <__ratio>
 800347e:	2200      	movs	r2, #0
 8003480:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8003484:	4606      	mov	r6, r0
 8003486:	460f      	mov	r7, r1
 8003488:	f7fd fb52 	bl	8000b30 <__aeabi_dcmple>
 800348c:	2800      	cmp	r0, #0
 800348e:	d075      	beq.n	800357c <_strtod_l+0xa74>
 8003490:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8003492:	2b00      	cmp	r3, #0
 8003494:	d047      	beq.n	8003526 <_strtod_l+0xa1e>
 8003496:	4f6a      	ldr	r7, [pc, #424]	; (8003640 <_strtod_l+0xb38>)
 8003498:	2600      	movs	r6, #0
 800349a:	4d69      	ldr	r5, [pc, #420]	; (8003640 <_strtod_l+0xb38>)
 800349c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800349e:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 80034a2:	0d1b      	lsrs	r3, r3, #20
 80034a4:	051b      	lsls	r3, r3, #20
 80034a6:	930f      	str	r3, [sp, #60]	; 0x3c
 80034a8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80034aa:	4b66      	ldr	r3, [pc, #408]	; (8003644 <_strtod_l+0xb3c>)
 80034ac:	429a      	cmp	r2, r3
 80034ae:	f040 80d1 	bne.w	8003654 <_strtod_l+0xb4c>
 80034b2:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 80034b6:	e9cd 2314 	strd	r2, r3, [sp, #80]	; 0x50
 80034ba:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80034bc:	f1a3 7a54 	sub.w	sl, r3, #55574528	; 0x3500000
 80034c0:	4648      	mov	r0, r9
 80034c2:	4651      	mov	r1, sl
 80034c4:	f002 f8ce 	bl	8005664 <__ulp>
 80034c8:	4602      	mov	r2, r0
 80034ca:	460b      	mov	r3, r1
 80034cc:	4630      	mov	r0, r6
 80034ce:	4639      	mov	r1, r7
 80034d0:	f7fd f8b2 	bl	8000638 <__aeabi_dmul>
 80034d4:	464a      	mov	r2, r9
 80034d6:	4653      	mov	r3, sl
 80034d8:	f7fc fef8 	bl	80002cc <__adddf3>
 80034dc:	460b      	mov	r3, r1
 80034de:	4955      	ldr	r1, [pc, #340]	; (8003634 <_strtod_l+0xb2c>)
 80034e0:	4a59      	ldr	r2, [pc, #356]	; (8003648 <_strtod_l+0xb40>)
 80034e2:	4019      	ands	r1, r3
 80034e4:	4291      	cmp	r1, r2
 80034e6:	4681      	mov	r9, r0
 80034e8:	d95e      	bls.n	80035a8 <_strtod_l+0xaa0>
 80034ea:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80034ec:	f102 7254 	add.w	r2, r2, #55574528	; 0x3500000
 80034f0:	4293      	cmp	r3, r2
 80034f2:	d103      	bne.n	80034fc <_strtod_l+0x9f4>
 80034f4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80034f6:	3301      	adds	r3, #1
 80034f8:	f43f ad28 	beq.w	8002f4c <_strtod_l+0x444>
 80034fc:	f8df a138 	ldr.w	sl, [pc, #312]	; 8003638 <_strtod_l+0xb30>
 8003500:	f04f 39ff 	mov.w	r9, #4294967295
 8003504:	991c      	ldr	r1, [sp, #112]	; 0x70
 8003506:	4658      	mov	r0, fp
 8003508:	f001 fe15 	bl	8005136 <_Bfree>
 800350c:	9906      	ldr	r1, [sp, #24]
 800350e:	4658      	mov	r0, fp
 8003510:	f001 fe11 	bl	8005136 <_Bfree>
 8003514:	9904      	ldr	r1, [sp, #16]
 8003516:	4658      	mov	r0, fp
 8003518:	f001 fe0d 	bl	8005136 <_Bfree>
 800351c:	4641      	mov	r1, r8
 800351e:	4658      	mov	r0, fp
 8003520:	f001 fe09 	bl	8005136 <_Bfree>
 8003524:	e619      	b.n	800315a <_strtod_l+0x652>
 8003526:	f1b9 0f00 	cmp.w	r9, #0
 800352a:	d119      	bne.n	8003560 <_strtod_l+0xa58>
 800352c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800352e:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8003532:	b9e3      	cbnz	r3, 800356e <_strtod_l+0xa66>
 8003534:	2200      	movs	r2, #0
 8003536:	4b42      	ldr	r3, [pc, #264]	; (8003640 <_strtod_l+0xb38>)
 8003538:	4630      	mov	r0, r6
 800353a:	4639      	mov	r1, r7
 800353c:	f7fd faee 	bl	8000b1c <__aeabi_dcmplt>
 8003540:	b9c8      	cbnz	r0, 8003576 <_strtod_l+0xa6e>
 8003542:	2200      	movs	r2, #0
 8003544:	4b41      	ldr	r3, [pc, #260]	; (800364c <_strtod_l+0xb44>)
 8003546:	4630      	mov	r0, r6
 8003548:	4639      	mov	r1, r7
 800354a:	f7fd f875 	bl	8000638 <__aeabi_dmul>
 800354e:	4604      	mov	r4, r0
 8003550:	460d      	mov	r5, r1
 8003552:	f105 4300 	add.w	r3, r5, #2147483648	; 0x80000000
 8003556:	9418      	str	r4, [sp, #96]	; 0x60
 8003558:	9319      	str	r3, [sp, #100]	; 0x64
 800355a:	e9dd 6718 	ldrd	r6, r7, [sp, #96]	; 0x60
 800355e:	e79d      	b.n	800349c <_strtod_l+0x994>
 8003560:	f1b9 0f01 	cmp.w	r9, #1
 8003564:	d103      	bne.n	800356e <_strtod_l+0xa66>
 8003566:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003568:	2b00      	cmp	r3, #0
 800356a:	f43f ad8c 	beq.w	8003086 <_strtod_l+0x57e>
 800356e:	2600      	movs	r6, #0
 8003570:	4f37      	ldr	r7, [pc, #220]	; (8003650 <_strtod_l+0xb48>)
 8003572:	2400      	movs	r4, #0
 8003574:	e791      	b.n	800349a <_strtod_l+0x992>
 8003576:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8003578:	4d34      	ldr	r5, [pc, #208]	; (800364c <_strtod_l+0xb44>)
 800357a:	e7ea      	b.n	8003552 <_strtod_l+0xa4a>
 800357c:	4b33      	ldr	r3, [pc, #204]	; (800364c <_strtod_l+0xb44>)
 800357e:	2200      	movs	r2, #0
 8003580:	4630      	mov	r0, r6
 8003582:	4639      	mov	r1, r7
 8003584:	f7fd f858 	bl	8000638 <__aeabi_dmul>
 8003588:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800358a:	4604      	mov	r4, r0
 800358c:	460d      	mov	r5, r1
 800358e:	b933      	cbnz	r3, 800359e <_strtod_l+0xa96>
 8003590:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8003594:	9010      	str	r0, [sp, #64]	; 0x40
 8003596:	9311      	str	r3, [sp, #68]	; 0x44
 8003598:	e9dd 6710 	ldrd	r6, r7, [sp, #64]	; 0x40
 800359c:	e77e      	b.n	800349c <_strtod_l+0x994>
 800359e:	4602      	mov	r2, r0
 80035a0:	460b      	mov	r3, r1
 80035a2:	e9cd 2310 	strd	r2, r3, [sp, #64]	; 0x40
 80035a6:	e7f7      	b.n	8003598 <_strtod_l+0xa90>
 80035a8:	f103 7a54 	add.w	sl, r3, #55574528	; 0x3500000
 80035ac:	9b05      	ldr	r3, [sp, #20]
 80035ae:	2b00      	cmp	r3, #0
 80035b0:	d1a8      	bne.n	8003504 <_strtod_l+0x9fc>
 80035b2:	f02a 4300 	bic.w	r3, sl, #2147483648	; 0x80000000
 80035b6:	0d1b      	lsrs	r3, r3, #20
 80035b8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80035ba:	051b      	lsls	r3, r3, #20
 80035bc:	429a      	cmp	r2, r3
 80035be:	4656      	mov	r6, sl
 80035c0:	d1a0      	bne.n	8003504 <_strtod_l+0x9fc>
 80035c2:	4629      	mov	r1, r5
 80035c4:	4620      	mov	r0, r4
 80035c6:	f7fd fae7 	bl	8000b98 <__aeabi_d2iz>
 80035ca:	f7fc ffcb 	bl	8000564 <__aeabi_i2d>
 80035ce:	460b      	mov	r3, r1
 80035d0:	4602      	mov	r2, r0
 80035d2:	4629      	mov	r1, r5
 80035d4:	4620      	mov	r0, r4
 80035d6:	f7fc fe77 	bl	80002c8 <__aeabi_dsub>
 80035da:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80035dc:	4604      	mov	r4, r0
 80035de:	460d      	mov	r5, r1
 80035e0:	b933      	cbnz	r3, 80035f0 <_strtod_l+0xae8>
 80035e2:	f1b9 0f00 	cmp.w	r9, #0
 80035e6:	d103      	bne.n	80035f0 <_strtod_l+0xae8>
 80035e8:	f3ca 0613 	ubfx	r6, sl, #0, #20
 80035ec:	2e00      	cmp	r6, #0
 80035ee:	d06c      	beq.n	80036ca <_strtod_l+0xbc2>
 80035f0:	a30b      	add	r3, pc, #44	; (adr r3, 8003620 <_strtod_l+0xb18>)
 80035f2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80035f6:	4620      	mov	r0, r4
 80035f8:	4629      	mov	r1, r5
 80035fa:	f7fd fa8f 	bl	8000b1c <__aeabi_dcmplt>
 80035fe:	2800      	cmp	r0, #0
 8003600:	f47f acaf 	bne.w	8002f62 <_strtod_l+0x45a>
 8003604:	a308      	add	r3, pc, #32	; (adr r3, 8003628 <_strtod_l+0xb20>)
 8003606:	e9d3 2300 	ldrd	r2, r3, [r3]
 800360a:	4620      	mov	r0, r4
 800360c:	4629      	mov	r1, r5
 800360e:	f7fd faa3 	bl	8000b58 <__aeabi_dcmpgt>
 8003612:	2800      	cmp	r0, #0
 8003614:	f43f af76 	beq.w	8003504 <_strtod_l+0x9fc>
 8003618:	e4a3      	b.n	8002f62 <_strtod_l+0x45a>
 800361a:	bf00      	nop
 800361c:	f3af 8000 	nop.w
 8003620:	94a03595 	.word	0x94a03595
 8003624:	3fdfffff 	.word	0x3fdfffff
 8003628:	35afe535 	.word	0x35afe535
 800362c:	3fe00000 	.word	0x3fe00000
 8003630:	000fffff 	.word	0x000fffff
 8003634:	7ff00000 	.word	0x7ff00000
 8003638:	7fefffff 	.word	0x7fefffff
 800363c:	39500000 	.word	0x39500000
 8003640:	3ff00000 	.word	0x3ff00000
 8003644:	7fe00000 	.word	0x7fe00000
 8003648:	7c9fffff 	.word	0x7c9fffff
 800364c:	3fe00000 	.word	0x3fe00000
 8003650:	bff00000 	.word	0xbff00000
 8003654:	9b05      	ldr	r3, [sp, #20]
 8003656:	b313      	cbz	r3, 800369e <_strtod_l+0xb96>
 8003658:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800365a:	f1b3 6fd4 	cmp.w	r3, #111149056	; 0x6a00000
 800365e:	d81e      	bhi.n	800369e <_strtod_l+0xb96>
 8003660:	a325      	add	r3, pc, #148	; (adr r3, 80036f8 <_strtod_l+0xbf0>)
 8003662:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003666:	4620      	mov	r0, r4
 8003668:	4629      	mov	r1, r5
 800366a:	f7fd fa61 	bl	8000b30 <__aeabi_dcmple>
 800366e:	b190      	cbz	r0, 8003696 <_strtod_l+0xb8e>
 8003670:	4629      	mov	r1, r5
 8003672:	4620      	mov	r0, r4
 8003674:	f7fd fab8 	bl	8000be8 <__aeabi_d2uiz>
 8003678:	2800      	cmp	r0, #0
 800367a:	bf08      	it	eq
 800367c:	2001      	moveq	r0, #1
 800367e:	f7fc ff61 	bl	8000544 <__aeabi_ui2d>
 8003682:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8003684:	4604      	mov	r4, r0
 8003686:	460d      	mov	r5, r1
 8003688:	b9d3      	cbnz	r3, 80036c0 <_strtod_l+0xbb8>
 800368a:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 800368e:	9012      	str	r0, [sp, #72]	; 0x48
 8003690:	9313      	str	r3, [sp, #76]	; 0x4c
 8003692:	e9dd 6712 	ldrd	r6, r7, [sp, #72]	; 0x48
 8003696:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8003698:	f107 63d6 	add.w	r3, r7, #112197632	; 0x6b00000
 800369c:	1a9f      	subs	r7, r3, r2
 800369e:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 80036a2:	f001 ffdf 	bl	8005664 <__ulp>
 80036a6:	4602      	mov	r2, r0
 80036a8:	460b      	mov	r3, r1
 80036aa:	4630      	mov	r0, r6
 80036ac:	4639      	mov	r1, r7
 80036ae:	f7fc ffc3 	bl	8000638 <__aeabi_dmul>
 80036b2:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 80036b6:	f7fc fe09 	bl	80002cc <__adddf3>
 80036ba:	4681      	mov	r9, r0
 80036bc:	468a      	mov	sl, r1
 80036be:	e775      	b.n	80035ac <_strtod_l+0xaa4>
 80036c0:	4602      	mov	r2, r0
 80036c2:	460b      	mov	r3, r1
 80036c4:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
 80036c8:	e7e3      	b.n	8003692 <_strtod_l+0xb8a>
 80036ca:	a30d      	add	r3, pc, #52	; (adr r3, 8003700 <_strtod_l+0xbf8>)
 80036cc:	e9d3 2300 	ldrd	r2, r3, [r3]
 80036d0:	f7fd fa24 	bl	8000b1c <__aeabi_dcmplt>
 80036d4:	e79d      	b.n	8003612 <_strtod_l+0xb0a>
 80036d6:	2300      	movs	r3, #0
 80036d8:	930d      	str	r3, [sp, #52]	; 0x34
 80036da:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 80036dc:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80036de:	6013      	str	r3, [r2, #0]
 80036e0:	f7ff ba55 	b.w	8002b8e <_strtod_l+0x86>
 80036e4:	2b65      	cmp	r3, #101	; 0x65
 80036e6:	f04f 0200 	mov.w	r2, #0
 80036ea:	f43f ab42 	beq.w	8002d72 <_strtod_l+0x26a>
 80036ee:	2101      	movs	r1, #1
 80036f0:	4614      	mov	r4, r2
 80036f2:	9105      	str	r1, [sp, #20]
 80036f4:	f7ff babf 	b.w	8002c76 <_strtod_l+0x16e>
 80036f8:	ffc00000 	.word	0xffc00000
 80036fc:	41dfffff 	.word	0x41dfffff
 8003700:	94a03595 	.word	0x94a03595
 8003704:	3fcfffff 	.word	0x3fcfffff

08003708 <_strtod_r>:
 8003708:	4b05      	ldr	r3, [pc, #20]	; (8003720 <_strtod_r+0x18>)
 800370a:	681b      	ldr	r3, [r3, #0]
 800370c:	b410      	push	{r4}
 800370e:	6a1b      	ldr	r3, [r3, #32]
 8003710:	4c04      	ldr	r4, [pc, #16]	; (8003724 <_strtod_r+0x1c>)
 8003712:	2b00      	cmp	r3, #0
 8003714:	bf08      	it	eq
 8003716:	4623      	moveq	r3, r4
 8003718:	bc10      	pop	{r4}
 800371a:	f7ff b9f5 	b.w	8002b08 <_strtod_l>
 800371e:	bf00      	nop
 8003720:	20000014 	.word	0x20000014
 8003724:	20000078 	.word	0x20000078

08003728 <_strtol_l.isra.0>:
 8003728:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800372c:	4680      	mov	r8, r0
 800372e:	4689      	mov	r9, r1
 8003730:	4692      	mov	sl, r2
 8003732:	461e      	mov	r6, r3
 8003734:	460f      	mov	r7, r1
 8003736:	463d      	mov	r5, r7
 8003738:	9808      	ldr	r0, [sp, #32]
 800373a:	f815 4b01 	ldrb.w	r4, [r5], #1
 800373e:	f001 fc29 	bl	8004f94 <__locale_ctype_ptr_l>
 8003742:	4420      	add	r0, r4
 8003744:	7843      	ldrb	r3, [r0, #1]
 8003746:	f013 0308 	ands.w	r3, r3, #8
 800374a:	d132      	bne.n	80037b2 <_strtol_l.isra.0+0x8a>
 800374c:	2c2d      	cmp	r4, #45	; 0x2d
 800374e:	d132      	bne.n	80037b6 <_strtol_l.isra.0+0x8e>
 8003750:	787c      	ldrb	r4, [r7, #1]
 8003752:	1cbd      	adds	r5, r7, #2
 8003754:	2201      	movs	r2, #1
 8003756:	2e00      	cmp	r6, #0
 8003758:	d05d      	beq.n	8003816 <_strtol_l.isra.0+0xee>
 800375a:	2e10      	cmp	r6, #16
 800375c:	d109      	bne.n	8003772 <_strtol_l.isra.0+0x4a>
 800375e:	2c30      	cmp	r4, #48	; 0x30
 8003760:	d107      	bne.n	8003772 <_strtol_l.isra.0+0x4a>
 8003762:	782b      	ldrb	r3, [r5, #0]
 8003764:	f003 03df 	and.w	r3, r3, #223	; 0xdf
 8003768:	2b58      	cmp	r3, #88	; 0x58
 800376a:	d14f      	bne.n	800380c <_strtol_l.isra.0+0xe4>
 800376c:	786c      	ldrb	r4, [r5, #1]
 800376e:	2610      	movs	r6, #16
 8003770:	3502      	adds	r5, #2
 8003772:	2a00      	cmp	r2, #0
 8003774:	bf14      	ite	ne
 8003776:	f04f 4100 	movne.w	r1, #2147483648	; 0x80000000
 800377a:	f06f 4100 	mvneq.w	r1, #2147483648	; 0x80000000
 800377e:	2700      	movs	r7, #0
 8003780:	fbb1 fcf6 	udiv	ip, r1, r6
 8003784:	4638      	mov	r0, r7
 8003786:	fb06 1e1c 	mls	lr, r6, ip, r1
 800378a:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 800378e:	2b09      	cmp	r3, #9
 8003790:	d817      	bhi.n	80037c2 <_strtol_l.isra.0+0x9a>
 8003792:	461c      	mov	r4, r3
 8003794:	42a6      	cmp	r6, r4
 8003796:	dd23      	ble.n	80037e0 <_strtol_l.isra.0+0xb8>
 8003798:	1c7b      	adds	r3, r7, #1
 800379a:	d007      	beq.n	80037ac <_strtol_l.isra.0+0x84>
 800379c:	4584      	cmp	ip, r0
 800379e:	d31c      	bcc.n	80037da <_strtol_l.isra.0+0xb2>
 80037a0:	d101      	bne.n	80037a6 <_strtol_l.isra.0+0x7e>
 80037a2:	45a6      	cmp	lr, r4
 80037a4:	db19      	blt.n	80037da <_strtol_l.isra.0+0xb2>
 80037a6:	fb00 4006 	mla	r0, r0, r6, r4
 80037aa:	2701      	movs	r7, #1
 80037ac:	f815 4b01 	ldrb.w	r4, [r5], #1
 80037b0:	e7eb      	b.n	800378a <_strtol_l.isra.0+0x62>
 80037b2:	462f      	mov	r7, r5
 80037b4:	e7bf      	b.n	8003736 <_strtol_l.isra.0+0xe>
 80037b6:	2c2b      	cmp	r4, #43	; 0x2b
 80037b8:	bf04      	itt	eq
 80037ba:	1cbd      	addeq	r5, r7, #2
 80037bc:	787c      	ldrbeq	r4, [r7, #1]
 80037be:	461a      	mov	r2, r3
 80037c0:	e7c9      	b.n	8003756 <_strtol_l.isra.0+0x2e>
 80037c2:	f1a4 0341 	sub.w	r3, r4, #65	; 0x41
 80037c6:	2b19      	cmp	r3, #25
 80037c8:	d801      	bhi.n	80037ce <_strtol_l.isra.0+0xa6>
 80037ca:	3c37      	subs	r4, #55	; 0x37
 80037cc:	e7e2      	b.n	8003794 <_strtol_l.isra.0+0x6c>
 80037ce:	f1a4 0361 	sub.w	r3, r4, #97	; 0x61
 80037d2:	2b19      	cmp	r3, #25
 80037d4:	d804      	bhi.n	80037e0 <_strtol_l.isra.0+0xb8>
 80037d6:	3c57      	subs	r4, #87	; 0x57
 80037d8:	e7dc      	b.n	8003794 <_strtol_l.isra.0+0x6c>
 80037da:	f04f 37ff 	mov.w	r7, #4294967295
 80037de:	e7e5      	b.n	80037ac <_strtol_l.isra.0+0x84>
 80037e0:	1c7b      	adds	r3, r7, #1
 80037e2:	d108      	bne.n	80037f6 <_strtol_l.isra.0+0xce>
 80037e4:	2322      	movs	r3, #34	; 0x22
 80037e6:	f8c8 3000 	str.w	r3, [r8]
 80037ea:	4608      	mov	r0, r1
 80037ec:	f1ba 0f00 	cmp.w	sl, #0
 80037f0:	d107      	bne.n	8003802 <_strtol_l.isra.0+0xda>
 80037f2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80037f6:	b102      	cbz	r2, 80037fa <_strtol_l.isra.0+0xd2>
 80037f8:	4240      	negs	r0, r0
 80037fa:	f1ba 0f00 	cmp.w	sl, #0
 80037fe:	d0f8      	beq.n	80037f2 <_strtol_l.isra.0+0xca>
 8003800:	b10f      	cbz	r7, 8003806 <_strtol_l.isra.0+0xde>
 8003802:	f105 39ff 	add.w	r9, r5, #4294967295
 8003806:	f8ca 9000 	str.w	r9, [sl]
 800380a:	e7f2      	b.n	80037f2 <_strtol_l.isra.0+0xca>
 800380c:	2430      	movs	r4, #48	; 0x30
 800380e:	2e00      	cmp	r6, #0
 8003810:	d1af      	bne.n	8003772 <_strtol_l.isra.0+0x4a>
 8003812:	2608      	movs	r6, #8
 8003814:	e7ad      	b.n	8003772 <_strtol_l.isra.0+0x4a>
 8003816:	2c30      	cmp	r4, #48	; 0x30
 8003818:	d0a3      	beq.n	8003762 <_strtol_l.isra.0+0x3a>
 800381a:	260a      	movs	r6, #10
 800381c:	e7a9      	b.n	8003772 <_strtol_l.isra.0+0x4a>
	...

08003820 <_strtol_r>:
 8003820:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8003822:	4c06      	ldr	r4, [pc, #24]	; (800383c <_strtol_r+0x1c>)
 8003824:	4d06      	ldr	r5, [pc, #24]	; (8003840 <_strtol_r+0x20>)
 8003826:	6824      	ldr	r4, [r4, #0]
 8003828:	6a24      	ldr	r4, [r4, #32]
 800382a:	2c00      	cmp	r4, #0
 800382c:	bf08      	it	eq
 800382e:	462c      	moveq	r4, r5
 8003830:	9400      	str	r4, [sp, #0]
 8003832:	f7ff ff79 	bl	8003728 <_strtol_l.isra.0>
 8003836:	b003      	add	sp, #12
 8003838:	bd30      	pop	{r4, r5, pc}
 800383a:	bf00      	nop
 800383c:	20000014 	.word	0x20000014
 8003840:	20000078 	.word	0x20000078

08003844 <__swbuf_r>:
 8003844:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003846:	460e      	mov	r6, r1
 8003848:	4614      	mov	r4, r2
 800384a:	4605      	mov	r5, r0
 800384c:	b118      	cbz	r0, 8003856 <__swbuf_r+0x12>
 800384e:	6983      	ldr	r3, [r0, #24]
 8003850:	b90b      	cbnz	r3, 8003856 <__swbuf_r+0x12>
 8003852:	f000 ffef 	bl	8004834 <__sinit>
 8003856:	4b21      	ldr	r3, [pc, #132]	; (80038dc <__swbuf_r+0x98>)
 8003858:	429c      	cmp	r4, r3
 800385a:	d12a      	bne.n	80038b2 <__swbuf_r+0x6e>
 800385c:	686c      	ldr	r4, [r5, #4]
 800385e:	69a3      	ldr	r3, [r4, #24]
 8003860:	60a3      	str	r3, [r4, #8]
 8003862:	89a3      	ldrh	r3, [r4, #12]
 8003864:	071a      	lsls	r2, r3, #28
 8003866:	d52e      	bpl.n	80038c6 <__swbuf_r+0x82>
 8003868:	6923      	ldr	r3, [r4, #16]
 800386a:	b363      	cbz	r3, 80038c6 <__swbuf_r+0x82>
 800386c:	6923      	ldr	r3, [r4, #16]
 800386e:	6820      	ldr	r0, [r4, #0]
 8003870:	1ac0      	subs	r0, r0, r3
 8003872:	6963      	ldr	r3, [r4, #20]
 8003874:	b2f6      	uxtb	r6, r6
 8003876:	4283      	cmp	r3, r0
 8003878:	4637      	mov	r7, r6
 800387a:	dc04      	bgt.n	8003886 <__swbuf_r+0x42>
 800387c:	4621      	mov	r1, r4
 800387e:	4628      	mov	r0, r5
 8003880:	f000 ff6e 	bl	8004760 <_fflush_r>
 8003884:	bb28      	cbnz	r0, 80038d2 <__swbuf_r+0x8e>
 8003886:	68a3      	ldr	r3, [r4, #8]
 8003888:	3b01      	subs	r3, #1
 800388a:	60a3      	str	r3, [r4, #8]
 800388c:	6823      	ldr	r3, [r4, #0]
 800388e:	1c5a      	adds	r2, r3, #1
 8003890:	6022      	str	r2, [r4, #0]
 8003892:	701e      	strb	r6, [r3, #0]
 8003894:	6963      	ldr	r3, [r4, #20]
 8003896:	3001      	adds	r0, #1
 8003898:	4283      	cmp	r3, r0
 800389a:	d004      	beq.n	80038a6 <__swbuf_r+0x62>
 800389c:	89a3      	ldrh	r3, [r4, #12]
 800389e:	07db      	lsls	r3, r3, #31
 80038a0:	d519      	bpl.n	80038d6 <__swbuf_r+0x92>
 80038a2:	2e0a      	cmp	r6, #10
 80038a4:	d117      	bne.n	80038d6 <__swbuf_r+0x92>
 80038a6:	4621      	mov	r1, r4
 80038a8:	4628      	mov	r0, r5
 80038aa:	f000 ff59 	bl	8004760 <_fflush_r>
 80038ae:	b190      	cbz	r0, 80038d6 <__swbuf_r+0x92>
 80038b0:	e00f      	b.n	80038d2 <__swbuf_r+0x8e>
 80038b2:	4b0b      	ldr	r3, [pc, #44]	; (80038e0 <__swbuf_r+0x9c>)
 80038b4:	429c      	cmp	r4, r3
 80038b6:	d101      	bne.n	80038bc <__swbuf_r+0x78>
 80038b8:	68ac      	ldr	r4, [r5, #8]
 80038ba:	e7d0      	b.n	800385e <__swbuf_r+0x1a>
 80038bc:	4b09      	ldr	r3, [pc, #36]	; (80038e4 <__swbuf_r+0xa0>)
 80038be:	429c      	cmp	r4, r3
 80038c0:	bf08      	it	eq
 80038c2:	68ec      	ldreq	r4, [r5, #12]
 80038c4:	e7cb      	b.n	800385e <__swbuf_r+0x1a>
 80038c6:	4621      	mov	r1, r4
 80038c8:	4628      	mov	r0, r5
 80038ca:	f000 f80d 	bl	80038e8 <__swsetup_r>
 80038ce:	2800      	cmp	r0, #0
 80038d0:	d0cc      	beq.n	800386c <__swbuf_r+0x28>
 80038d2:	f04f 37ff 	mov.w	r7, #4294967295
 80038d6:	4638      	mov	r0, r7
 80038d8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80038da:	bf00      	nop
 80038dc:	080067e0 	.word	0x080067e0
 80038e0:	08006800 	.word	0x08006800
 80038e4:	080067c0 	.word	0x080067c0

080038e8 <__swsetup_r>:
 80038e8:	4b32      	ldr	r3, [pc, #200]	; (80039b4 <__swsetup_r+0xcc>)
 80038ea:	b570      	push	{r4, r5, r6, lr}
 80038ec:	681d      	ldr	r5, [r3, #0]
 80038ee:	4606      	mov	r6, r0
 80038f0:	460c      	mov	r4, r1
 80038f2:	b125      	cbz	r5, 80038fe <__swsetup_r+0x16>
 80038f4:	69ab      	ldr	r3, [r5, #24]
 80038f6:	b913      	cbnz	r3, 80038fe <__swsetup_r+0x16>
 80038f8:	4628      	mov	r0, r5
 80038fa:	f000 ff9b 	bl	8004834 <__sinit>
 80038fe:	4b2e      	ldr	r3, [pc, #184]	; (80039b8 <__swsetup_r+0xd0>)
 8003900:	429c      	cmp	r4, r3
 8003902:	d10f      	bne.n	8003924 <__swsetup_r+0x3c>
 8003904:	686c      	ldr	r4, [r5, #4]
 8003906:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800390a:	b29a      	uxth	r2, r3
 800390c:	0715      	lsls	r5, r2, #28
 800390e:	d42c      	bmi.n	800396a <__swsetup_r+0x82>
 8003910:	06d0      	lsls	r0, r2, #27
 8003912:	d411      	bmi.n	8003938 <__swsetup_r+0x50>
 8003914:	2209      	movs	r2, #9
 8003916:	6032      	str	r2, [r6, #0]
 8003918:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800391c:	81a3      	strh	r3, [r4, #12]
 800391e:	f04f 30ff 	mov.w	r0, #4294967295
 8003922:	e03e      	b.n	80039a2 <__swsetup_r+0xba>
 8003924:	4b25      	ldr	r3, [pc, #148]	; (80039bc <__swsetup_r+0xd4>)
 8003926:	429c      	cmp	r4, r3
 8003928:	d101      	bne.n	800392e <__swsetup_r+0x46>
 800392a:	68ac      	ldr	r4, [r5, #8]
 800392c:	e7eb      	b.n	8003906 <__swsetup_r+0x1e>
 800392e:	4b24      	ldr	r3, [pc, #144]	; (80039c0 <__swsetup_r+0xd8>)
 8003930:	429c      	cmp	r4, r3
 8003932:	bf08      	it	eq
 8003934:	68ec      	ldreq	r4, [r5, #12]
 8003936:	e7e6      	b.n	8003906 <__swsetup_r+0x1e>
 8003938:	0751      	lsls	r1, r2, #29
 800393a:	d512      	bpl.n	8003962 <__swsetup_r+0x7a>
 800393c:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800393e:	b141      	cbz	r1, 8003952 <__swsetup_r+0x6a>
 8003940:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8003944:	4299      	cmp	r1, r3
 8003946:	d002      	beq.n	800394e <__swsetup_r+0x66>
 8003948:	4630      	mov	r0, r6
 800394a:	f001 ffc7 	bl	80058dc <_free_r>
 800394e:	2300      	movs	r3, #0
 8003950:	6363      	str	r3, [r4, #52]	; 0x34
 8003952:	89a3      	ldrh	r3, [r4, #12]
 8003954:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8003958:	81a3      	strh	r3, [r4, #12]
 800395a:	2300      	movs	r3, #0
 800395c:	6063      	str	r3, [r4, #4]
 800395e:	6923      	ldr	r3, [r4, #16]
 8003960:	6023      	str	r3, [r4, #0]
 8003962:	89a3      	ldrh	r3, [r4, #12]
 8003964:	f043 0308 	orr.w	r3, r3, #8
 8003968:	81a3      	strh	r3, [r4, #12]
 800396a:	6923      	ldr	r3, [r4, #16]
 800396c:	b94b      	cbnz	r3, 8003982 <__swsetup_r+0x9a>
 800396e:	89a3      	ldrh	r3, [r4, #12]
 8003970:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8003974:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8003978:	d003      	beq.n	8003982 <__swsetup_r+0x9a>
 800397a:	4621      	mov	r1, r4
 800397c:	4630      	mov	r0, r6
 800397e:	f001 fb41 	bl	8005004 <__smakebuf_r>
 8003982:	89a2      	ldrh	r2, [r4, #12]
 8003984:	f012 0301 	ands.w	r3, r2, #1
 8003988:	d00c      	beq.n	80039a4 <__swsetup_r+0xbc>
 800398a:	2300      	movs	r3, #0
 800398c:	60a3      	str	r3, [r4, #8]
 800398e:	6963      	ldr	r3, [r4, #20]
 8003990:	425b      	negs	r3, r3
 8003992:	61a3      	str	r3, [r4, #24]
 8003994:	6923      	ldr	r3, [r4, #16]
 8003996:	b953      	cbnz	r3, 80039ae <__swsetup_r+0xc6>
 8003998:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800399c:	f013 0080 	ands.w	r0, r3, #128	; 0x80
 80039a0:	d1ba      	bne.n	8003918 <__swsetup_r+0x30>
 80039a2:	bd70      	pop	{r4, r5, r6, pc}
 80039a4:	0792      	lsls	r2, r2, #30
 80039a6:	bf58      	it	pl
 80039a8:	6963      	ldrpl	r3, [r4, #20]
 80039aa:	60a3      	str	r3, [r4, #8]
 80039ac:	e7f2      	b.n	8003994 <__swsetup_r+0xac>
 80039ae:	2000      	movs	r0, #0
 80039b0:	e7f7      	b.n	80039a2 <__swsetup_r+0xba>
 80039b2:	bf00      	nop
 80039b4:	20000014 	.word	0x20000014
 80039b8:	080067e0 	.word	0x080067e0
 80039bc:	08006800 	.word	0x08006800
 80039c0:	080067c0 	.word	0x080067c0

080039c4 <quorem>:
 80039c4:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80039c8:	6903      	ldr	r3, [r0, #16]
 80039ca:	690c      	ldr	r4, [r1, #16]
 80039cc:	42a3      	cmp	r3, r4
 80039ce:	4680      	mov	r8, r0
 80039d0:	f2c0 8082 	blt.w	8003ad8 <quorem+0x114>
 80039d4:	3c01      	subs	r4, #1
 80039d6:	f101 0714 	add.w	r7, r1, #20
 80039da:	ea4f 0c84 	mov.w	ip, r4, lsl #2
 80039de:	f100 0614 	add.w	r6, r0, #20
 80039e2:	f857 5024 	ldr.w	r5, [r7, r4, lsl #2]
 80039e6:	f856 0024 	ldr.w	r0, [r6, r4, lsl #2]
 80039ea:	eb06 030c 	add.w	r3, r6, ip
 80039ee:	3501      	adds	r5, #1
 80039f0:	eb07 090c 	add.w	r9, r7, ip
 80039f4:	9301      	str	r3, [sp, #4]
 80039f6:	fbb0 f5f5 	udiv	r5, r0, r5
 80039fa:	b395      	cbz	r5, 8003a62 <quorem+0x9e>
 80039fc:	f04f 0a00 	mov.w	sl, #0
 8003a00:	4638      	mov	r0, r7
 8003a02:	46b6      	mov	lr, r6
 8003a04:	46d3      	mov	fp, sl
 8003a06:	f850 2b04 	ldr.w	r2, [r0], #4
 8003a0a:	b293      	uxth	r3, r2
 8003a0c:	fb05 a303 	mla	r3, r5, r3, sl
 8003a10:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8003a14:	b29b      	uxth	r3, r3
 8003a16:	ebab 0303 	sub.w	r3, fp, r3
 8003a1a:	0c12      	lsrs	r2, r2, #16
 8003a1c:	f8de b000 	ldr.w	fp, [lr]
 8003a20:	fb05 a202 	mla	r2, r5, r2, sl
 8003a24:	fa13 f38b 	uxtah	r3, r3, fp
 8003a28:	ea4f 4a12 	mov.w	sl, r2, lsr #16
 8003a2c:	fa1f fb82 	uxth.w	fp, r2
 8003a30:	f8de 2000 	ldr.w	r2, [lr]
 8003a34:	ebcb 4212 	rsb	r2, fp, r2, lsr #16
 8003a38:	eb02 4223 	add.w	r2, r2, r3, asr #16
 8003a3c:	b29b      	uxth	r3, r3
 8003a3e:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8003a42:	4581      	cmp	r9, r0
 8003a44:	ea4f 4b22 	mov.w	fp, r2, asr #16
 8003a48:	f84e 3b04 	str.w	r3, [lr], #4
 8003a4c:	d2db      	bcs.n	8003a06 <quorem+0x42>
 8003a4e:	f856 300c 	ldr.w	r3, [r6, ip]
 8003a52:	b933      	cbnz	r3, 8003a62 <quorem+0x9e>
 8003a54:	9b01      	ldr	r3, [sp, #4]
 8003a56:	3b04      	subs	r3, #4
 8003a58:	429e      	cmp	r6, r3
 8003a5a:	461a      	mov	r2, r3
 8003a5c:	d330      	bcc.n	8003ac0 <quorem+0xfc>
 8003a5e:	f8c8 4010 	str.w	r4, [r8, #16]
 8003a62:	4640      	mov	r0, r8
 8003a64:	f001 fd86 	bl	8005574 <__mcmp>
 8003a68:	2800      	cmp	r0, #0
 8003a6a:	db25      	blt.n	8003ab8 <quorem+0xf4>
 8003a6c:	3501      	adds	r5, #1
 8003a6e:	4630      	mov	r0, r6
 8003a70:	f04f 0c00 	mov.w	ip, #0
 8003a74:	f857 2b04 	ldr.w	r2, [r7], #4
 8003a78:	f8d0 e000 	ldr.w	lr, [r0]
 8003a7c:	b293      	uxth	r3, r2
 8003a7e:	ebac 0303 	sub.w	r3, ip, r3
 8003a82:	0c12      	lsrs	r2, r2, #16
 8003a84:	fa13 f38e 	uxtah	r3, r3, lr
 8003a88:	ebc2 421e 	rsb	r2, r2, lr, lsr #16
 8003a8c:	eb02 4223 	add.w	r2, r2, r3, asr #16
 8003a90:	b29b      	uxth	r3, r3
 8003a92:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8003a96:	45b9      	cmp	r9, r7
 8003a98:	ea4f 4c22 	mov.w	ip, r2, asr #16
 8003a9c:	f840 3b04 	str.w	r3, [r0], #4
 8003aa0:	d2e8      	bcs.n	8003a74 <quorem+0xb0>
 8003aa2:	f856 2024 	ldr.w	r2, [r6, r4, lsl #2]
 8003aa6:	eb06 0384 	add.w	r3, r6, r4, lsl #2
 8003aaa:	b92a      	cbnz	r2, 8003ab8 <quorem+0xf4>
 8003aac:	3b04      	subs	r3, #4
 8003aae:	429e      	cmp	r6, r3
 8003ab0:	461a      	mov	r2, r3
 8003ab2:	d30b      	bcc.n	8003acc <quorem+0x108>
 8003ab4:	f8c8 4010 	str.w	r4, [r8, #16]
 8003ab8:	4628      	mov	r0, r5
 8003aba:	b003      	add	sp, #12
 8003abc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003ac0:	6812      	ldr	r2, [r2, #0]
 8003ac2:	3b04      	subs	r3, #4
 8003ac4:	2a00      	cmp	r2, #0
 8003ac6:	d1ca      	bne.n	8003a5e <quorem+0x9a>
 8003ac8:	3c01      	subs	r4, #1
 8003aca:	e7c5      	b.n	8003a58 <quorem+0x94>
 8003acc:	6812      	ldr	r2, [r2, #0]
 8003ace:	3b04      	subs	r3, #4
 8003ad0:	2a00      	cmp	r2, #0
 8003ad2:	d1ef      	bne.n	8003ab4 <quorem+0xf0>
 8003ad4:	3c01      	subs	r4, #1
 8003ad6:	e7ea      	b.n	8003aae <quorem+0xea>
 8003ad8:	2000      	movs	r0, #0
 8003ada:	e7ee      	b.n	8003aba <quorem+0xf6>
 8003adc:	0000      	movs	r0, r0
	...

08003ae0 <_dtoa_r>:
 8003ae0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003ae4:	6a45      	ldr	r5, [r0, #36]	; 0x24
 8003ae6:	b095      	sub	sp, #84	; 0x54
 8003ae8:	4616      	mov	r6, r2
 8003aea:	461f      	mov	r7, r3
 8003aec:	4604      	mov	r4, r0
 8003aee:	f8dd 8084 	ldr.w	r8, [sp, #132]	; 0x84
 8003af2:	e9cd 6702 	strd	r6, r7, [sp, #8]
 8003af6:	b93d      	cbnz	r5, 8003b08 <_dtoa_r+0x28>
 8003af8:	2010      	movs	r0, #16
 8003afa:	f001 fac3 	bl	8005084 <malloc>
 8003afe:	6260      	str	r0, [r4, #36]	; 0x24
 8003b00:	e9c0 5501 	strd	r5, r5, [r0, #4]
 8003b04:	6005      	str	r5, [r0, #0]
 8003b06:	60c5      	str	r5, [r0, #12]
 8003b08:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8003b0a:	6819      	ldr	r1, [r3, #0]
 8003b0c:	b151      	cbz	r1, 8003b24 <_dtoa_r+0x44>
 8003b0e:	685a      	ldr	r2, [r3, #4]
 8003b10:	604a      	str	r2, [r1, #4]
 8003b12:	2301      	movs	r3, #1
 8003b14:	4093      	lsls	r3, r2
 8003b16:	608b      	str	r3, [r1, #8]
 8003b18:	4620      	mov	r0, r4
 8003b1a:	f001 fb0c 	bl	8005136 <_Bfree>
 8003b1e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8003b20:	2200      	movs	r2, #0
 8003b22:	601a      	str	r2, [r3, #0]
 8003b24:	1e3b      	subs	r3, r7, #0
 8003b26:	bfbb      	ittet	lt
 8003b28:	f023 4300 	biclt.w	r3, r3, #2147483648	; 0x80000000
 8003b2c:	9303      	strlt	r3, [sp, #12]
 8003b2e:	2300      	movge	r3, #0
 8003b30:	2201      	movlt	r2, #1
 8003b32:	bfac      	ite	ge
 8003b34:	f8c8 3000 	strge.w	r3, [r8]
 8003b38:	f8c8 2000 	strlt.w	r2, [r8]
 8003b3c:	4bae      	ldr	r3, [pc, #696]	; (8003df8 <_dtoa_r+0x318>)
 8003b3e:	f8dd 800c 	ldr.w	r8, [sp, #12]
 8003b42:	ea33 0308 	bics.w	r3, r3, r8
 8003b46:	d11b      	bne.n	8003b80 <_dtoa_r+0xa0>
 8003b48:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8003b4a:	f242 730f 	movw	r3, #9999	; 0x270f
 8003b4e:	6013      	str	r3, [r2, #0]
 8003b50:	9b02      	ldr	r3, [sp, #8]
 8003b52:	b923      	cbnz	r3, 8003b5e <_dtoa_r+0x7e>
 8003b54:	f3c8 0013 	ubfx	r0, r8, #0, #20
 8003b58:	2800      	cmp	r0, #0
 8003b5a:	f000 854b 	beq.w	80045f4 <_dtoa_r+0xb14>
 8003b5e:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8003b60:	b953      	cbnz	r3, 8003b78 <_dtoa_r+0x98>
 8003b62:	4ba6      	ldr	r3, [pc, #664]	; (8003dfc <_dtoa_r+0x31c>)
 8003b64:	e021      	b.n	8003baa <_dtoa_r+0xca>
 8003b66:	4ba6      	ldr	r3, [pc, #664]	; (8003e00 <_dtoa_r+0x320>)
 8003b68:	9306      	str	r3, [sp, #24]
 8003b6a:	3308      	adds	r3, #8
 8003b6c:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8003b6e:	6013      	str	r3, [r2, #0]
 8003b70:	9806      	ldr	r0, [sp, #24]
 8003b72:	b015      	add	sp, #84	; 0x54
 8003b74:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003b78:	4ba0      	ldr	r3, [pc, #640]	; (8003dfc <_dtoa_r+0x31c>)
 8003b7a:	9306      	str	r3, [sp, #24]
 8003b7c:	3303      	adds	r3, #3
 8003b7e:	e7f5      	b.n	8003b6c <_dtoa_r+0x8c>
 8003b80:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
 8003b84:	2200      	movs	r2, #0
 8003b86:	2300      	movs	r3, #0
 8003b88:	4630      	mov	r0, r6
 8003b8a:	4639      	mov	r1, r7
 8003b8c:	f7fc ffbc 	bl	8000b08 <__aeabi_dcmpeq>
 8003b90:	4682      	mov	sl, r0
 8003b92:	b160      	cbz	r0, 8003bae <_dtoa_r+0xce>
 8003b94:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8003b96:	2301      	movs	r3, #1
 8003b98:	6013      	str	r3, [r2, #0]
 8003b9a:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8003b9c:	2b00      	cmp	r3, #0
 8003b9e:	f000 8526 	beq.w	80045ee <_dtoa_r+0xb0e>
 8003ba2:	4b98      	ldr	r3, [pc, #608]	; (8003e04 <_dtoa_r+0x324>)
 8003ba4:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8003ba6:	6013      	str	r3, [r2, #0]
 8003ba8:	3b01      	subs	r3, #1
 8003baa:	9306      	str	r3, [sp, #24]
 8003bac:	e7e0      	b.n	8003b70 <_dtoa_r+0x90>
 8003bae:	ab12      	add	r3, sp, #72	; 0x48
 8003bb0:	9301      	str	r3, [sp, #4]
 8003bb2:	ab13      	add	r3, sp, #76	; 0x4c
 8003bb4:	9300      	str	r3, [sp, #0]
 8003bb6:	4632      	mov	r2, r6
 8003bb8:	463b      	mov	r3, r7
 8003bba:	4620      	mov	r0, r4
 8003bbc:	f001 fdc8 	bl	8005750 <__d2b>
 8003bc0:	f3c8 550a 	ubfx	r5, r8, #20, #11
 8003bc4:	4683      	mov	fp, r0
 8003bc6:	2d00      	cmp	r5, #0
 8003bc8:	d07c      	beq.n	8003cc4 <_dtoa_r+0x1e4>
 8003bca:	f3c7 0313 	ubfx	r3, r7, #0, #20
 8003bce:	f043 597f 	orr.w	r9, r3, #1069547520	; 0x3fc00000
 8003bd2:	46b0      	mov	r8, r6
 8003bd4:	f449 1940 	orr.w	r9, r9, #3145728	; 0x300000
 8003bd8:	f2a5 35ff 	subw	r5, r5, #1023	; 0x3ff
 8003bdc:	f8cd a040 	str.w	sl, [sp, #64]	; 0x40
 8003be0:	2200      	movs	r2, #0
 8003be2:	4b89      	ldr	r3, [pc, #548]	; (8003e08 <_dtoa_r+0x328>)
 8003be4:	4640      	mov	r0, r8
 8003be6:	4649      	mov	r1, r9
 8003be8:	f7fc fb6e 	bl	80002c8 <__aeabi_dsub>
 8003bec:	a37c      	add	r3, pc, #496	; (adr r3, 8003de0 <_dtoa_r+0x300>)
 8003bee:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003bf2:	f7fc fd21 	bl	8000638 <__aeabi_dmul>
 8003bf6:	a37c      	add	r3, pc, #496	; (adr r3, 8003de8 <_dtoa_r+0x308>)
 8003bf8:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003bfc:	f7fc fb66 	bl	80002cc <__adddf3>
 8003c00:	4606      	mov	r6, r0
 8003c02:	4628      	mov	r0, r5
 8003c04:	460f      	mov	r7, r1
 8003c06:	f7fc fcad 	bl	8000564 <__aeabi_i2d>
 8003c0a:	a379      	add	r3, pc, #484	; (adr r3, 8003df0 <_dtoa_r+0x310>)
 8003c0c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003c10:	f7fc fd12 	bl	8000638 <__aeabi_dmul>
 8003c14:	4602      	mov	r2, r0
 8003c16:	460b      	mov	r3, r1
 8003c18:	4630      	mov	r0, r6
 8003c1a:	4639      	mov	r1, r7
 8003c1c:	f7fc fb56 	bl	80002cc <__adddf3>
 8003c20:	4606      	mov	r6, r0
 8003c22:	460f      	mov	r7, r1
 8003c24:	f7fc ffb8 	bl	8000b98 <__aeabi_d2iz>
 8003c28:	2200      	movs	r2, #0
 8003c2a:	4682      	mov	sl, r0
 8003c2c:	2300      	movs	r3, #0
 8003c2e:	4630      	mov	r0, r6
 8003c30:	4639      	mov	r1, r7
 8003c32:	f7fc ff73 	bl	8000b1c <__aeabi_dcmplt>
 8003c36:	b148      	cbz	r0, 8003c4c <_dtoa_r+0x16c>
 8003c38:	4650      	mov	r0, sl
 8003c3a:	f7fc fc93 	bl	8000564 <__aeabi_i2d>
 8003c3e:	4632      	mov	r2, r6
 8003c40:	463b      	mov	r3, r7
 8003c42:	f7fc ff61 	bl	8000b08 <__aeabi_dcmpeq>
 8003c46:	b908      	cbnz	r0, 8003c4c <_dtoa_r+0x16c>
 8003c48:	f10a 3aff 	add.w	sl, sl, #4294967295
 8003c4c:	f1ba 0f16 	cmp.w	sl, #22
 8003c50:	d859      	bhi.n	8003d06 <_dtoa_r+0x226>
 8003c52:	496e      	ldr	r1, [pc, #440]	; (8003e0c <_dtoa_r+0x32c>)
 8003c54:	eb01 01ca 	add.w	r1, r1, sl, lsl #3
 8003c58:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8003c5c:	e9d1 0100 	ldrd	r0, r1, [r1]
 8003c60:	f7fc ff7a 	bl	8000b58 <__aeabi_dcmpgt>
 8003c64:	2800      	cmp	r0, #0
 8003c66:	d050      	beq.n	8003d0a <_dtoa_r+0x22a>
 8003c68:	f10a 3aff 	add.w	sl, sl, #4294967295
 8003c6c:	2300      	movs	r3, #0
 8003c6e:	930d      	str	r3, [sp, #52]	; 0x34
 8003c70:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8003c72:	1b5d      	subs	r5, r3, r5
 8003c74:	1e6b      	subs	r3, r5, #1
 8003c76:	9307      	str	r3, [sp, #28]
 8003c78:	bf43      	ittte	mi
 8003c7a:	2300      	movmi	r3, #0
 8003c7c:	f1c5 0901 	rsbmi	r9, r5, #1
 8003c80:	9307      	strmi	r3, [sp, #28]
 8003c82:	f04f 0900 	movpl.w	r9, #0
 8003c86:	f1ba 0f00 	cmp.w	sl, #0
 8003c8a:	db40      	blt.n	8003d0e <_dtoa_r+0x22e>
 8003c8c:	9b07      	ldr	r3, [sp, #28]
 8003c8e:	f8cd a030 	str.w	sl, [sp, #48]	; 0x30
 8003c92:	4453      	add	r3, sl
 8003c94:	9307      	str	r3, [sp, #28]
 8003c96:	2300      	movs	r3, #0
 8003c98:	9308      	str	r3, [sp, #32]
 8003c9a:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8003c9c:	2b09      	cmp	r3, #9
 8003c9e:	f200 808e 	bhi.w	8003dbe <_dtoa_r+0x2de>
 8003ca2:	2b05      	cmp	r3, #5
 8003ca4:	bfc4      	itt	gt
 8003ca6:	3b04      	subgt	r3, #4
 8003ca8:	931e      	strgt	r3, [sp, #120]	; 0x78
 8003caa:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8003cac:	f1a3 0302 	sub.w	r3, r3, #2
 8003cb0:	bfcc      	ite	gt
 8003cb2:	2500      	movgt	r5, #0
 8003cb4:	2501      	movle	r5, #1
 8003cb6:	2b03      	cmp	r3, #3
 8003cb8:	f200 808d 	bhi.w	8003dd6 <_dtoa_r+0x2f6>
 8003cbc:	e8df f003 	tbb	[pc, r3]
 8003cc0:	6f2f7d7b 	.word	0x6f2f7d7b
 8003cc4:	e9dd 5312 	ldrd	r5, r3, [sp, #72]	; 0x48
 8003cc8:	441d      	add	r5, r3
 8003cca:	f205 4032 	addw	r0, r5, #1074	; 0x432
 8003cce:	2820      	cmp	r0, #32
 8003cd0:	dd13      	ble.n	8003cfa <_dtoa_r+0x21a>
 8003cd2:	f1c0 0040 	rsb	r0, r0, #64	; 0x40
 8003cd6:	9b02      	ldr	r3, [sp, #8]
 8003cd8:	fa08 f800 	lsl.w	r8, r8, r0
 8003cdc:	f205 4012 	addw	r0, r5, #1042	; 0x412
 8003ce0:	fa23 f000 	lsr.w	r0, r3, r0
 8003ce4:	ea48 0000 	orr.w	r0, r8, r0
 8003ce8:	f7fc fc2c 	bl	8000544 <__aeabi_ui2d>
 8003cec:	2301      	movs	r3, #1
 8003cee:	4680      	mov	r8, r0
 8003cf0:	f1a1 79f8 	sub.w	r9, r1, #32505856	; 0x1f00000
 8003cf4:	3d01      	subs	r5, #1
 8003cf6:	9310      	str	r3, [sp, #64]	; 0x40
 8003cf8:	e772      	b.n	8003be0 <_dtoa_r+0x100>
 8003cfa:	9b02      	ldr	r3, [sp, #8]
 8003cfc:	f1c0 0020 	rsb	r0, r0, #32
 8003d00:	fa03 f000 	lsl.w	r0, r3, r0
 8003d04:	e7f0      	b.n	8003ce8 <_dtoa_r+0x208>
 8003d06:	2301      	movs	r3, #1
 8003d08:	e7b1      	b.n	8003c6e <_dtoa_r+0x18e>
 8003d0a:	900d      	str	r0, [sp, #52]	; 0x34
 8003d0c:	e7b0      	b.n	8003c70 <_dtoa_r+0x190>
 8003d0e:	f1ca 0300 	rsb	r3, sl, #0
 8003d12:	9308      	str	r3, [sp, #32]
 8003d14:	2300      	movs	r3, #0
 8003d16:	eba9 090a 	sub.w	r9, r9, sl
 8003d1a:	930c      	str	r3, [sp, #48]	; 0x30
 8003d1c:	e7bd      	b.n	8003c9a <_dtoa_r+0x1ba>
 8003d1e:	2301      	movs	r3, #1
 8003d20:	9309      	str	r3, [sp, #36]	; 0x24
 8003d22:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8003d24:	2b00      	cmp	r3, #0
 8003d26:	dd75      	ble.n	8003e14 <_dtoa_r+0x334>
 8003d28:	9304      	str	r3, [sp, #16]
 8003d2a:	4698      	mov	r8, r3
 8003d2c:	6a66      	ldr	r6, [r4, #36]	; 0x24
 8003d2e:	2200      	movs	r2, #0
 8003d30:	6072      	str	r2, [r6, #4]
 8003d32:	2204      	movs	r2, #4
 8003d34:	f102 0014 	add.w	r0, r2, #20
 8003d38:	4298      	cmp	r0, r3
 8003d3a:	6871      	ldr	r1, [r6, #4]
 8003d3c:	d96f      	bls.n	8003e1e <_dtoa_r+0x33e>
 8003d3e:	4620      	mov	r0, r4
 8003d40:	f001 f9c5 	bl	80050ce <_Balloc>
 8003d44:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8003d46:	6030      	str	r0, [r6, #0]
 8003d48:	681b      	ldr	r3, [r3, #0]
 8003d4a:	9306      	str	r3, [sp, #24]
 8003d4c:	f1b8 0f0e 	cmp.w	r8, #14
 8003d50:	f200 80ee 	bhi.w	8003f30 <_dtoa_r+0x450>
 8003d54:	2d00      	cmp	r5, #0
 8003d56:	f000 80eb 	beq.w	8003f30 <_dtoa_r+0x450>
 8003d5a:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8003d5e:	f1ba 0f00 	cmp.w	sl, #0
 8003d62:	e9cd 230e 	strd	r2, r3, [sp, #56]	; 0x38
 8003d66:	dd78      	ble.n	8003e5a <_dtoa_r+0x37a>
 8003d68:	4a28      	ldr	r2, [pc, #160]	; (8003e0c <_dtoa_r+0x32c>)
 8003d6a:	f00a 030f 	and.w	r3, sl, #15
 8003d6e:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 8003d72:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003d76:	ea4f 162a 	mov.w	r6, sl, asr #4
 8003d7a:	06f0      	lsls	r0, r6, #27
 8003d7c:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
 8003d80:	d569      	bpl.n	8003e56 <_dtoa_r+0x376>
 8003d82:	4b23      	ldr	r3, [pc, #140]	; (8003e10 <_dtoa_r+0x330>)
 8003d84:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
 8003d88:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 8003d8c:	f7fc fd7e 	bl	800088c <__aeabi_ddiv>
 8003d90:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8003d94:	f006 060f 	and.w	r6, r6, #15
 8003d98:	2503      	movs	r5, #3
 8003d9a:	4f1d      	ldr	r7, [pc, #116]	; (8003e10 <_dtoa_r+0x330>)
 8003d9c:	e050      	b.n	8003e40 <_dtoa_r+0x360>
 8003d9e:	2301      	movs	r3, #1
 8003da0:	9309      	str	r3, [sp, #36]	; 0x24
 8003da2:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8003da4:	4453      	add	r3, sl
 8003da6:	f103 0801 	add.w	r8, r3, #1
 8003daa:	9304      	str	r3, [sp, #16]
 8003dac:	4643      	mov	r3, r8
 8003dae:	2b01      	cmp	r3, #1
 8003db0:	bfb8      	it	lt
 8003db2:	2301      	movlt	r3, #1
 8003db4:	e7ba      	b.n	8003d2c <_dtoa_r+0x24c>
 8003db6:	2300      	movs	r3, #0
 8003db8:	e7b2      	b.n	8003d20 <_dtoa_r+0x240>
 8003dba:	2300      	movs	r3, #0
 8003dbc:	e7f0      	b.n	8003da0 <_dtoa_r+0x2c0>
 8003dbe:	2501      	movs	r5, #1
 8003dc0:	2300      	movs	r3, #0
 8003dc2:	931e      	str	r3, [sp, #120]	; 0x78
 8003dc4:	9509      	str	r5, [sp, #36]	; 0x24
 8003dc6:	f04f 33ff 	mov.w	r3, #4294967295
 8003dca:	9304      	str	r3, [sp, #16]
 8003dcc:	4698      	mov	r8, r3
 8003dce:	2200      	movs	r2, #0
 8003dd0:	2312      	movs	r3, #18
 8003dd2:	921f      	str	r2, [sp, #124]	; 0x7c
 8003dd4:	e7aa      	b.n	8003d2c <_dtoa_r+0x24c>
 8003dd6:	2301      	movs	r3, #1
 8003dd8:	9309      	str	r3, [sp, #36]	; 0x24
 8003dda:	e7f4      	b.n	8003dc6 <_dtoa_r+0x2e6>
 8003ddc:	f3af 8000 	nop.w
 8003de0:	636f4361 	.word	0x636f4361
 8003de4:	3fd287a7 	.word	0x3fd287a7
 8003de8:	8b60c8b3 	.word	0x8b60c8b3
 8003dec:	3fc68a28 	.word	0x3fc68a28
 8003df0:	509f79fb 	.word	0x509f79fb
 8003df4:	3fd34413 	.word	0x3fd34413
 8003df8:	7ff00000 	.word	0x7ff00000
 8003dfc:	080067b9 	.word	0x080067b9
 8003e00:	080067b0 	.word	0x080067b0
 8003e04:	08006731 	.word	0x08006731
 8003e08:	3ff80000 	.word	0x3ff80000
 8003e0c:	08006858 	.word	0x08006858
 8003e10:	08006830 	.word	0x08006830
 8003e14:	2301      	movs	r3, #1
 8003e16:	9304      	str	r3, [sp, #16]
 8003e18:	4698      	mov	r8, r3
 8003e1a:	461a      	mov	r2, r3
 8003e1c:	e7d9      	b.n	8003dd2 <_dtoa_r+0x2f2>
 8003e1e:	3101      	adds	r1, #1
 8003e20:	6071      	str	r1, [r6, #4]
 8003e22:	0052      	lsls	r2, r2, #1
 8003e24:	e786      	b.n	8003d34 <_dtoa_r+0x254>
 8003e26:	07f1      	lsls	r1, r6, #31
 8003e28:	d508      	bpl.n	8003e3c <_dtoa_r+0x35c>
 8003e2a:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 8003e2e:	e9d7 2300 	ldrd	r2, r3, [r7]
 8003e32:	f7fc fc01 	bl	8000638 <__aeabi_dmul>
 8003e36:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
 8003e3a:	3501      	adds	r5, #1
 8003e3c:	1076      	asrs	r6, r6, #1
 8003e3e:	3708      	adds	r7, #8
 8003e40:	2e00      	cmp	r6, #0
 8003e42:	d1f0      	bne.n	8003e26 <_dtoa_r+0x346>
 8003e44:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 8003e48:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8003e4c:	f7fc fd1e 	bl	800088c <__aeabi_ddiv>
 8003e50:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8003e54:	e01b      	b.n	8003e8e <_dtoa_r+0x3ae>
 8003e56:	2502      	movs	r5, #2
 8003e58:	e79f      	b.n	8003d9a <_dtoa_r+0x2ba>
 8003e5a:	f000 80a4 	beq.w	8003fa6 <_dtoa_r+0x4c6>
 8003e5e:	f1ca 0600 	rsb	r6, sl, #0
 8003e62:	4ba2      	ldr	r3, [pc, #648]	; (80040ec <_dtoa_r+0x60c>)
 8003e64:	4fa2      	ldr	r7, [pc, #648]	; (80040f0 <_dtoa_r+0x610>)
 8003e66:	f006 020f 	and.w	r2, r6, #15
 8003e6a:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8003e6e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003e72:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
 8003e76:	f7fc fbdf 	bl	8000638 <__aeabi_dmul>
 8003e7a:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8003e7e:	1136      	asrs	r6, r6, #4
 8003e80:	2300      	movs	r3, #0
 8003e82:	2502      	movs	r5, #2
 8003e84:	2e00      	cmp	r6, #0
 8003e86:	f040 8083 	bne.w	8003f90 <_dtoa_r+0x4b0>
 8003e8a:	2b00      	cmp	r3, #0
 8003e8c:	d1e0      	bne.n	8003e50 <_dtoa_r+0x370>
 8003e8e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8003e90:	2b00      	cmp	r3, #0
 8003e92:	f000 808a 	beq.w	8003faa <_dtoa_r+0x4ca>
 8003e96:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8003e9a:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
 8003e9e:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 8003ea2:	2200      	movs	r2, #0
 8003ea4:	4b93      	ldr	r3, [pc, #588]	; (80040f4 <_dtoa_r+0x614>)
 8003ea6:	f7fc fe39 	bl	8000b1c <__aeabi_dcmplt>
 8003eaa:	2800      	cmp	r0, #0
 8003eac:	d07d      	beq.n	8003faa <_dtoa_r+0x4ca>
 8003eae:	f1b8 0f00 	cmp.w	r8, #0
 8003eb2:	d07a      	beq.n	8003faa <_dtoa_r+0x4ca>
 8003eb4:	9b04      	ldr	r3, [sp, #16]
 8003eb6:	2b00      	cmp	r3, #0
 8003eb8:	dd36      	ble.n	8003f28 <_dtoa_r+0x448>
 8003eba:	2200      	movs	r2, #0
 8003ebc:	4b8e      	ldr	r3, [pc, #568]	; (80040f8 <_dtoa_r+0x618>)
 8003ebe:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 8003ec2:	f7fc fbb9 	bl	8000638 <__aeabi_dmul>
 8003ec6:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8003eca:	9e04      	ldr	r6, [sp, #16]
 8003ecc:	f10a 37ff 	add.w	r7, sl, #4294967295
 8003ed0:	3501      	adds	r5, #1
 8003ed2:	4628      	mov	r0, r5
 8003ed4:	f7fc fb46 	bl	8000564 <__aeabi_i2d>
 8003ed8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8003edc:	f7fc fbac 	bl	8000638 <__aeabi_dmul>
 8003ee0:	2200      	movs	r2, #0
 8003ee2:	4b86      	ldr	r3, [pc, #536]	; (80040fc <_dtoa_r+0x61c>)
 8003ee4:	f7fc f9f2 	bl	80002cc <__adddf3>
 8003ee8:	f1a1 7550 	sub.w	r5, r1, #54525952	; 0x3400000
 8003eec:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
 8003ef0:	950b      	str	r5, [sp, #44]	; 0x2c
 8003ef2:	2e00      	cmp	r6, #0
 8003ef4:	d15c      	bne.n	8003fb0 <_dtoa_r+0x4d0>
 8003ef6:	2200      	movs	r2, #0
 8003ef8:	4b81      	ldr	r3, [pc, #516]	; (8004100 <_dtoa_r+0x620>)
 8003efa:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8003efe:	f7fc f9e3 	bl	80002c8 <__aeabi_dsub>
 8003f02:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8003f04:	462b      	mov	r3, r5
 8003f06:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8003f0a:	f7fc fe25 	bl	8000b58 <__aeabi_dcmpgt>
 8003f0e:	2800      	cmp	r0, #0
 8003f10:	f040 8284 	bne.w	800441c <_dtoa_r+0x93c>
 8003f14:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8003f16:	f105 4300 	add.w	r3, r5, #2147483648	; 0x80000000
 8003f1a:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8003f1e:	f7fc fdfd 	bl	8000b1c <__aeabi_dcmplt>
 8003f22:	2800      	cmp	r0, #0
 8003f24:	f040 8278 	bne.w	8004418 <_dtoa_r+0x938>
 8003f28:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	; 0x38
 8003f2c:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8003f30:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8003f32:	2b00      	cmp	r3, #0
 8003f34:	f2c0 814e 	blt.w	80041d4 <_dtoa_r+0x6f4>
 8003f38:	f1ba 0f0e 	cmp.w	sl, #14
 8003f3c:	f300 814a 	bgt.w	80041d4 <_dtoa_r+0x6f4>
 8003f40:	4b6a      	ldr	r3, [pc, #424]	; (80040ec <_dtoa_r+0x60c>)
 8003f42:	eb03 03ca 	add.w	r3, r3, sl, lsl #3
 8003f46:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003f4a:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8003f4e:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8003f50:	2b00      	cmp	r3, #0
 8003f52:	f280 80d9 	bge.w	8004108 <_dtoa_r+0x628>
 8003f56:	f1b8 0f00 	cmp.w	r8, #0
 8003f5a:	f300 80d5 	bgt.w	8004108 <_dtoa_r+0x628>
 8003f5e:	f040 825a 	bne.w	8004416 <_dtoa_r+0x936>
 8003f62:	2200      	movs	r2, #0
 8003f64:	4b66      	ldr	r3, [pc, #408]	; (8004100 <_dtoa_r+0x620>)
 8003f66:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8003f6a:	f7fc fb65 	bl	8000638 <__aeabi_dmul>
 8003f6e:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8003f72:	f7fc fde7 	bl	8000b44 <__aeabi_dcmpge>
 8003f76:	4646      	mov	r6, r8
 8003f78:	4647      	mov	r7, r8
 8003f7a:	2800      	cmp	r0, #0
 8003f7c:	f040 8230 	bne.w	80043e0 <_dtoa_r+0x900>
 8003f80:	9b06      	ldr	r3, [sp, #24]
 8003f82:	9a06      	ldr	r2, [sp, #24]
 8003f84:	1c5d      	adds	r5, r3, #1
 8003f86:	2331      	movs	r3, #49	; 0x31
 8003f88:	7013      	strb	r3, [r2, #0]
 8003f8a:	f10a 0a01 	add.w	sl, sl, #1
 8003f8e:	e22b      	b.n	80043e8 <_dtoa_r+0x908>
 8003f90:	07f2      	lsls	r2, r6, #31
 8003f92:	d505      	bpl.n	8003fa0 <_dtoa_r+0x4c0>
 8003f94:	e9d7 2300 	ldrd	r2, r3, [r7]
 8003f98:	f7fc fb4e 	bl	8000638 <__aeabi_dmul>
 8003f9c:	3501      	adds	r5, #1
 8003f9e:	2301      	movs	r3, #1
 8003fa0:	1076      	asrs	r6, r6, #1
 8003fa2:	3708      	adds	r7, #8
 8003fa4:	e76e      	b.n	8003e84 <_dtoa_r+0x3a4>
 8003fa6:	2502      	movs	r5, #2
 8003fa8:	e771      	b.n	8003e8e <_dtoa_r+0x3ae>
 8003faa:	4657      	mov	r7, sl
 8003fac:	4646      	mov	r6, r8
 8003fae:	e790      	b.n	8003ed2 <_dtoa_r+0x3f2>
 8003fb0:	4b4e      	ldr	r3, [pc, #312]	; (80040ec <_dtoa_r+0x60c>)
 8003fb2:	eb03 03c6 	add.w	r3, r3, r6, lsl #3
 8003fb6:	e953 0102 	ldrd	r0, r1, [r3, #-8]
 8003fba:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003fbc:	2b00      	cmp	r3, #0
 8003fbe:	d048      	beq.n	8004052 <_dtoa_r+0x572>
 8003fc0:	4602      	mov	r2, r0
 8003fc2:	460b      	mov	r3, r1
 8003fc4:	2000      	movs	r0, #0
 8003fc6:	494f      	ldr	r1, [pc, #316]	; (8004104 <_dtoa_r+0x624>)
 8003fc8:	f7fc fc60 	bl	800088c <__aeabi_ddiv>
 8003fcc:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 8003fd0:	f7fc f97a 	bl	80002c8 <__aeabi_dsub>
 8003fd4:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
 8003fd8:	9d06      	ldr	r5, [sp, #24]
 8003fda:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8003fde:	f7fc fddb 	bl	8000b98 <__aeabi_d2iz>
 8003fe2:	9011      	str	r0, [sp, #68]	; 0x44
 8003fe4:	f7fc fabe 	bl	8000564 <__aeabi_i2d>
 8003fe8:	4602      	mov	r2, r0
 8003fea:	460b      	mov	r3, r1
 8003fec:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8003ff0:	f7fc f96a 	bl	80002c8 <__aeabi_dsub>
 8003ff4:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8003ff6:	3330      	adds	r3, #48	; 0x30
 8003ff8:	f805 3b01 	strb.w	r3, [r5], #1
 8003ffc:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 8004000:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8004004:	f7fc fd8a 	bl	8000b1c <__aeabi_dcmplt>
 8004008:	2800      	cmp	r0, #0
 800400a:	d164      	bne.n	80040d6 <_dtoa_r+0x5f6>
 800400c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8004010:	2000      	movs	r0, #0
 8004012:	4938      	ldr	r1, [pc, #224]	; (80040f4 <_dtoa_r+0x614>)
 8004014:	f7fc f958 	bl	80002c8 <__aeabi_dsub>
 8004018:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 800401c:	f7fc fd7e 	bl	8000b1c <__aeabi_dcmplt>
 8004020:	2800      	cmp	r0, #0
 8004022:	f040 80b7 	bne.w	8004194 <_dtoa_r+0x6b4>
 8004026:	9b06      	ldr	r3, [sp, #24]
 8004028:	1aeb      	subs	r3, r5, r3
 800402a:	429e      	cmp	r6, r3
 800402c:	f77f af7c 	ble.w	8003f28 <_dtoa_r+0x448>
 8004030:	2200      	movs	r2, #0
 8004032:	4b31      	ldr	r3, [pc, #196]	; (80040f8 <_dtoa_r+0x618>)
 8004034:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 8004038:	f7fc fafe 	bl	8000638 <__aeabi_dmul>
 800403c:	2200      	movs	r2, #0
 800403e:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
 8004042:	4b2d      	ldr	r3, [pc, #180]	; (80040f8 <_dtoa_r+0x618>)
 8004044:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8004048:	f7fc faf6 	bl	8000638 <__aeabi_dmul>
 800404c:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8004050:	e7c3      	b.n	8003fda <_dtoa_r+0x4fa>
 8004052:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 8004056:	f7fc faef 	bl	8000638 <__aeabi_dmul>
 800405a:	9b06      	ldr	r3, [sp, #24]
 800405c:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
 8004060:	199d      	adds	r5, r3, r6
 8004062:	461e      	mov	r6, r3
 8004064:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8004068:	f7fc fd96 	bl	8000b98 <__aeabi_d2iz>
 800406c:	9011      	str	r0, [sp, #68]	; 0x44
 800406e:	f7fc fa79 	bl	8000564 <__aeabi_i2d>
 8004072:	4602      	mov	r2, r0
 8004074:	460b      	mov	r3, r1
 8004076:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800407a:	f7fc f925 	bl	80002c8 <__aeabi_dsub>
 800407e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8004080:	3330      	adds	r3, #48	; 0x30
 8004082:	f806 3b01 	strb.w	r3, [r6], #1
 8004086:	42ae      	cmp	r6, r5
 8004088:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800408c:	f04f 0200 	mov.w	r2, #0
 8004090:	d125      	bne.n	80040de <_dtoa_r+0x5fe>
 8004092:	4b1c      	ldr	r3, [pc, #112]	; (8004104 <_dtoa_r+0x624>)
 8004094:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 8004098:	f7fc f918 	bl	80002cc <__adddf3>
 800409c:	4602      	mov	r2, r0
 800409e:	460b      	mov	r3, r1
 80040a0:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80040a4:	f7fc fd58 	bl	8000b58 <__aeabi_dcmpgt>
 80040a8:	2800      	cmp	r0, #0
 80040aa:	d173      	bne.n	8004194 <_dtoa_r+0x6b4>
 80040ac:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 80040b0:	2000      	movs	r0, #0
 80040b2:	4914      	ldr	r1, [pc, #80]	; (8004104 <_dtoa_r+0x624>)
 80040b4:	f7fc f908 	bl	80002c8 <__aeabi_dsub>
 80040b8:	4602      	mov	r2, r0
 80040ba:	460b      	mov	r3, r1
 80040bc:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80040c0:	f7fc fd2c 	bl	8000b1c <__aeabi_dcmplt>
 80040c4:	2800      	cmp	r0, #0
 80040c6:	f43f af2f 	beq.w	8003f28 <_dtoa_r+0x448>
 80040ca:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 80040ce:	2b30      	cmp	r3, #48	; 0x30
 80040d0:	f105 32ff 	add.w	r2, r5, #4294967295
 80040d4:	d001      	beq.n	80040da <_dtoa_r+0x5fa>
 80040d6:	46ba      	mov	sl, r7
 80040d8:	e04b      	b.n	8004172 <_dtoa_r+0x692>
 80040da:	4615      	mov	r5, r2
 80040dc:	e7f5      	b.n	80040ca <_dtoa_r+0x5ea>
 80040de:	4b06      	ldr	r3, [pc, #24]	; (80040f8 <_dtoa_r+0x618>)
 80040e0:	f7fc faaa 	bl	8000638 <__aeabi_dmul>
 80040e4:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80040e8:	e7bc      	b.n	8004064 <_dtoa_r+0x584>
 80040ea:	bf00      	nop
 80040ec:	08006858 	.word	0x08006858
 80040f0:	08006830 	.word	0x08006830
 80040f4:	3ff00000 	.word	0x3ff00000
 80040f8:	40240000 	.word	0x40240000
 80040fc:	401c0000 	.word	0x401c0000
 8004100:	40140000 	.word	0x40140000
 8004104:	3fe00000 	.word	0x3fe00000
 8004108:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
 800410c:	9d06      	ldr	r5, [sp, #24]
 800410e:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8004112:	4630      	mov	r0, r6
 8004114:	4639      	mov	r1, r7
 8004116:	f7fc fbb9 	bl	800088c <__aeabi_ddiv>
 800411a:	f7fc fd3d 	bl	8000b98 <__aeabi_d2iz>
 800411e:	4681      	mov	r9, r0
 8004120:	f7fc fa20 	bl	8000564 <__aeabi_i2d>
 8004124:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8004128:	f7fc fa86 	bl	8000638 <__aeabi_dmul>
 800412c:	4602      	mov	r2, r0
 800412e:	460b      	mov	r3, r1
 8004130:	4630      	mov	r0, r6
 8004132:	4639      	mov	r1, r7
 8004134:	f109 0630 	add.w	r6, r9, #48	; 0x30
 8004138:	f7fc f8c6 	bl	80002c8 <__aeabi_dsub>
 800413c:	f805 6b01 	strb.w	r6, [r5], #1
 8004140:	9e06      	ldr	r6, [sp, #24]
 8004142:	1bae      	subs	r6, r5, r6
 8004144:	45b0      	cmp	r8, r6
 8004146:	4602      	mov	r2, r0
 8004148:	460b      	mov	r3, r1
 800414a:	d136      	bne.n	80041ba <_dtoa_r+0x6da>
 800414c:	f7fc f8be 	bl	80002cc <__adddf3>
 8004150:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8004154:	4606      	mov	r6, r0
 8004156:	460f      	mov	r7, r1
 8004158:	f7fc fcfe 	bl	8000b58 <__aeabi_dcmpgt>
 800415c:	b9c8      	cbnz	r0, 8004192 <_dtoa_r+0x6b2>
 800415e:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8004162:	4630      	mov	r0, r6
 8004164:	4639      	mov	r1, r7
 8004166:	f7fc fccf 	bl	8000b08 <__aeabi_dcmpeq>
 800416a:	b110      	cbz	r0, 8004172 <_dtoa_r+0x692>
 800416c:	f019 0f01 	tst.w	r9, #1
 8004170:	d10f      	bne.n	8004192 <_dtoa_r+0x6b2>
 8004172:	4659      	mov	r1, fp
 8004174:	4620      	mov	r0, r4
 8004176:	f000 ffde 	bl	8005136 <_Bfree>
 800417a:	2300      	movs	r3, #0
 800417c:	9a20      	ldr	r2, [sp, #128]	; 0x80
 800417e:	702b      	strb	r3, [r5, #0]
 8004180:	f10a 0301 	add.w	r3, sl, #1
 8004184:	6013      	str	r3, [r2, #0]
 8004186:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8004188:	2b00      	cmp	r3, #0
 800418a:	f43f acf1 	beq.w	8003b70 <_dtoa_r+0x90>
 800418e:	601d      	str	r5, [r3, #0]
 8004190:	e4ee      	b.n	8003b70 <_dtoa_r+0x90>
 8004192:	4657      	mov	r7, sl
 8004194:	f815 2c01 	ldrb.w	r2, [r5, #-1]
 8004198:	2a39      	cmp	r2, #57	; 0x39
 800419a:	f105 33ff 	add.w	r3, r5, #4294967295
 800419e:	d106      	bne.n	80041ae <_dtoa_r+0x6ce>
 80041a0:	9a06      	ldr	r2, [sp, #24]
 80041a2:	429a      	cmp	r2, r3
 80041a4:	d107      	bne.n	80041b6 <_dtoa_r+0x6d6>
 80041a6:	2330      	movs	r3, #48	; 0x30
 80041a8:	7013      	strb	r3, [r2, #0]
 80041aa:	3701      	adds	r7, #1
 80041ac:	4613      	mov	r3, r2
 80041ae:	781a      	ldrb	r2, [r3, #0]
 80041b0:	3201      	adds	r2, #1
 80041b2:	701a      	strb	r2, [r3, #0]
 80041b4:	e78f      	b.n	80040d6 <_dtoa_r+0x5f6>
 80041b6:	461d      	mov	r5, r3
 80041b8:	e7ec      	b.n	8004194 <_dtoa_r+0x6b4>
 80041ba:	2200      	movs	r2, #0
 80041bc:	4b99      	ldr	r3, [pc, #612]	; (8004424 <_dtoa_r+0x944>)
 80041be:	f7fc fa3b 	bl	8000638 <__aeabi_dmul>
 80041c2:	2200      	movs	r2, #0
 80041c4:	2300      	movs	r3, #0
 80041c6:	4606      	mov	r6, r0
 80041c8:	460f      	mov	r7, r1
 80041ca:	f7fc fc9d 	bl	8000b08 <__aeabi_dcmpeq>
 80041ce:	2800      	cmp	r0, #0
 80041d0:	d09d      	beq.n	800410e <_dtoa_r+0x62e>
 80041d2:	e7ce      	b.n	8004172 <_dtoa_r+0x692>
 80041d4:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80041d6:	2a00      	cmp	r2, #0
 80041d8:	f000 8088 	beq.w	80042ec <_dtoa_r+0x80c>
 80041dc:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 80041de:	2a01      	cmp	r2, #1
 80041e0:	dc6d      	bgt.n	80042be <_dtoa_r+0x7de>
 80041e2:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80041e4:	2a00      	cmp	r2, #0
 80041e6:	d066      	beq.n	80042b6 <_dtoa_r+0x7d6>
 80041e8:	f203 4333 	addw	r3, r3, #1075	; 0x433
 80041ec:	9e08      	ldr	r6, [sp, #32]
 80041ee:	464d      	mov	r5, r9
 80041f0:	9a07      	ldr	r2, [sp, #28]
 80041f2:	2101      	movs	r1, #1
 80041f4:	441a      	add	r2, r3
 80041f6:	4620      	mov	r0, r4
 80041f8:	4499      	add	r9, r3
 80041fa:	9207      	str	r2, [sp, #28]
 80041fc:	f001 f879 	bl	80052f2 <__i2b>
 8004200:	4607      	mov	r7, r0
 8004202:	2d00      	cmp	r5, #0
 8004204:	dd0b      	ble.n	800421e <_dtoa_r+0x73e>
 8004206:	9b07      	ldr	r3, [sp, #28]
 8004208:	2b00      	cmp	r3, #0
 800420a:	dd08      	ble.n	800421e <_dtoa_r+0x73e>
 800420c:	42ab      	cmp	r3, r5
 800420e:	9a07      	ldr	r2, [sp, #28]
 8004210:	bfa8      	it	ge
 8004212:	462b      	movge	r3, r5
 8004214:	eba9 0903 	sub.w	r9, r9, r3
 8004218:	1aed      	subs	r5, r5, r3
 800421a:	1ad3      	subs	r3, r2, r3
 800421c:	9307      	str	r3, [sp, #28]
 800421e:	9b08      	ldr	r3, [sp, #32]
 8004220:	b1eb      	cbz	r3, 800425e <_dtoa_r+0x77e>
 8004222:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004224:	2b00      	cmp	r3, #0
 8004226:	d065      	beq.n	80042f4 <_dtoa_r+0x814>
 8004228:	b18e      	cbz	r6, 800424e <_dtoa_r+0x76e>
 800422a:	4639      	mov	r1, r7
 800422c:	4632      	mov	r2, r6
 800422e:	4620      	mov	r0, r4
 8004230:	f001 f8fe 	bl	8005430 <__pow5mult>
 8004234:	465a      	mov	r2, fp
 8004236:	4601      	mov	r1, r0
 8004238:	4607      	mov	r7, r0
 800423a:	4620      	mov	r0, r4
 800423c:	f001 f862 	bl	8005304 <__multiply>
 8004240:	4659      	mov	r1, fp
 8004242:	900a      	str	r0, [sp, #40]	; 0x28
 8004244:	4620      	mov	r0, r4
 8004246:	f000 ff76 	bl	8005136 <_Bfree>
 800424a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800424c:	469b      	mov	fp, r3
 800424e:	9b08      	ldr	r3, [sp, #32]
 8004250:	1b9a      	subs	r2, r3, r6
 8004252:	d004      	beq.n	800425e <_dtoa_r+0x77e>
 8004254:	4659      	mov	r1, fp
 8004256:	4620      	mov	r0, r4
 8004258:	f001 f8ea 	bl	8005430 <__pow5mult>
 800425c:	4683      	mov	fp, r0
 800425e:	2101      	movs	r1, #1
 8004260:	4620      	mov	r0, r4
 8004262:	f001 f846 	bl	80052f2 <__i2b>
 8004266:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8004268:	4606      	mov	r6, r0
 800426a:	2b00      	cmp	r3, #0
 800426c:	f000 81c9 	beq.w	8004602 <_dtoa_r+0xb22>
 8004270:	461a      	mov	r2, r3
 8004272:	4601      	mov	r1, r0
 8004274:	4620      	mov	r0, r4
 8004276:	f001 f8db 	bl	8005430 <__pow5mult>
 800427a:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 800427c:	2b01      	cmp	r3, #1
 800427e:	4606      	mov	r6, r0
 8004280:	dc3e      	bgt.n	8004300 <_dtoa_r+0x820>
 8004282:	9b02      	ldr	r3, [sp, #8]
 8004284:	2b00      	cmp	r3, #0
 8004286:	d137      	bne.n	80042f8 <_dtoa_r+0x818>
 8004288:	9b03      	ldr	r3, [sp, #12]
 800428a:	f3c3 0313 	ubfx	r3, r3, #0, #20
 800428e:	2b00      	cmp	r3, #0
 8004290:	d134      	bne.n	80042fc <_dtoa_r+0x81c>
 8004292:	9b03      	ldr	r3, [sp, #12]
 8004294:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8004298:	0d1b      	lsrs	r3, r3, #20
 800429a:	051b      	lsls	r3, r3, #20
 800429c:	b12b      	cbz	r3, 80042aa <_dtoa_r+0x7ca>
 800429e:	9b07      	ldr	r3, [sp, #28]
 80042a0:	3301      	adds	r3, #1
 80042a2:	9307      	str	r3, [sp, #28]
 80042a4:	f109 0901 	add.w	r9, r9, #1
 80042a8:	2301      	movs	r3, #1
 80042aa:	9308      	str	r3, [sp, #32]
 80042ac:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80042ae:	2b00      	cmp	r3, #0
 80042b0:	d128      	bne.n	8004304 <_dtoa_r+0x824>
 80042b2:	2001      	movs	r0, #1
 80042b4:	e02e      	b.n	8004314 <_dtoa_r+0x834>
 80042b6:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80042b8:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
 80042bc:	e796      	b.n	80041ec <_dtoa_r+0x70c>
 80042be:	9b08      	ldr	r3, [sp, #32]
 80042c0:	f108 36ff 	add.w	r6, r8, #4294967295
 80042c4:	42b3      	cmp	r3, r6
 80042c6:	bfbf      	itttt	lt
 80042c8:	9b08      	ldrlt	r3, [sp, #32]
 80042ca:	9608      	strlt	r6, [sp, #32]
 80042cc:	1af2      	sublt	r2, r6, r3
 80042ce:	9b0c      	ldrlt	r3, [sp, #48]	; 0x30
 80042d0:	bfb7      	itett	lt
 80042d2:	189b      	addlt	r3, r3, r2
 80042d4:	1b9e      	subge	r6, r3, r6
 80042d6:	930c      	strlt	r3, [sp, #48]	; 0x30
 80042d8:	2600      	movlt	r6, #0
 80042da:	f1b8 0f00 	cmp.w	r8, #0
 80042de:	bfb9      	ittee	lt
 80042e0:	eba9 0508 	sublt.w	r5, r9, r8
 80042e4:	2300      	movlt	r3, #0
 80042e6:	464d      	movge	r5, r9
 80042e8:	4643      	movge	r3, r8
 80042ea:	e781      	b.n	80041f0 <_dtoa_r+0x710>
 80042ec:	9e08      	ldr	r6, [sp, #32]
 80042ee:	9f09      	ldr	r7, [sp, #36]	; 0x24
 80042f0:	464d      	mov	r5, r9
 80042f2:	e786      	b.n	8004202 <_dtoa_r+0x722>
 80042f4:	9a08      	ldr	r2, [sp, #32]
 80042f6:	e7ad      	b.n	8004254 <_dtoa_r+0x774>
 80042f8:	2300      	movs	r3, #0
 80042fa:	e7d6      	b.n	80042aa <_dtoa_r+0x7ca>
 80042fc:	9b02      	ldr	r3, [sp, #8]
 80042fe:	e7d4      	b.n	80042aa <_dtoa_r+0x7ca>
 8004300:	2300      	movs	r3, #0
 8004302:	9308      	str	r3, [sp, #32]
 8004304:	6933      	ldr	r3, [r6, #16]
 8004306:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 800430a:	6918      	ldr	r0, [r3, #16]
 800430c:	f000 ffa3 	bl	8005256 <__hi0bits>
 8004310:	f1c0 0020 	rsb	r0, r0, #32
 8004314:	9b07      	ldr	r3, [sp, #28]
 8004316:	4418      	add	r0, r3
 8004318:	f010 001f 	ands.w	r0, r0, #31
 800431c:	d047      	beq.n	80043ae <_dtoa_r+0x8ce>
 800431e:	f1c0 0320 	rsb	r3, r0, #32
 8004322:	2b04      	cmp	r3, #4
 8004324:	dd3b      	ble.n	800439e <_dtoa_r+0x8be>
 8004326:	9b07      	ldr	r3, [sp, #28]
 8004328:	f1c0 001c 	rsb	r0, r0, #28
 800432c:	4481      	add	r9, r0
 800432e:	4405      	add	r5, r0
 8004330:	4403      	add	r3, r0
 8004332:	9307      	str	r3, [sp, #28]
 8004334:	f1b9 0f00 	cmp.w	r9, #0
 8004338:	dd05      	ble.n	8004346 <_dtoa_r+0x866>
 800433a:	4659      	mov	r1, fp
 800433c:	464a      	mov	r2, r9
 800433e:	4620      	mov	r0, r4
 8004340:	f001 f8c4 	bl	80054cc <__lshift>
 8004344:	4683      	mov	fp, r0
 8004346:	9b07      	ldr	r3, [sp, #28]
 8004348:	2b00      	cmp	r3, #0
 800434a:	dd05      	ble.n	8004358 <_dtoa_r+0x878>
 800434c:	4631      	mov	r1, r6
 800434e:	461a      	mov	r2, r3
 8004350:	4620      	mov	r0, r4
 8004352:	f001 f8bb 	bl	80054cc <__lshift>
 8004356:	4606      	mov	r6, r0
 8004358:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800435a:	b353      	cbz	r3, 80043b2 <_dtoa_r+0x8d2>
 800435c:	4631      	mov	r1, r6
 800435e:	4658      	mov	r0, fp
 8004360:	f001 f908 	bl	8005574 <__mcmp>
 8004364:	2800      	cmp	r0, #0
 8004366:	da24      	bge.n	80043b2 <_dtoa_r+0x8d2>
 8004368:	2300      	movs	r3, #0
 800436a:	4659      	mov	r1, fp
 800436c:	220a      	movs	r2, #10
 800436e:	4620      	mov	r0, r4
 8004370:	f000 fef8 	bl	8005164 <__multadd>
 8004374:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004376:	f10a 3aff 	add.w	sl, sl, #4294967295
 800437a:	4683      	mov	fp, r0
 800437c:	2b00      	cmp	r3, #0
 800437e:	f000 8147 	beq.w	8004610 <_dtoa_r+0xb30>
 8004382:	2300      	movs	r3, #0
 8004384:	4639      	mov	r1, r7
 8004386:	220a      	movs	r2, #10
 8004388:	4620      	mov	r0, r4
 800438a:	f000 feeb 	bl	8005164 <__multadd>
 800438e:	9b04      	ldr	r3, [sp, #16]
 8004390:	2b00      	cmp	r3, #0
 8004392:	4607      	mov	r7, r0
 8004394:	dc4e      	bgt.n	8004434 <_dtoa_r+0x954>
 8004396:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8004398:	2b02      	cmp	r3, #2
 800439a:	dd4b      	ble.n	8004434 <_dtoa_r+0x954>
 800439c:	e011      	b.n	80043c2 <_dtoa_r+0x8e2>
 800439e:	d0c9      	beq.n	8004334 <_dtoa_r+0x854>
 80043a0:	9a07      	ldr	r2, [sp, #28]
 80043a2:	331c      	adds	r3, #28
 80043a4:	441a      	add	r2, r3
 80043a6:	4499      	add	r9, r3
 80043a8:	441d      	add	r5, r3
 80043aa:	4613      	mov	r3, r2
 80043ac:	e7c1      	b.n	8004332 <_dtoa_r+0x852>
 80043ae:	4603      	mov	r3, r0
 80043b0:	e7f6      	b.n	80043a0 <_dtoa_r+0x8c0>
 80043b2:	f1b8 0f00 	cmp.w	r8, #0
 80043b6:	dc37      	bgt.n	8004428 <_dtoa_r+0x948>
 80043b8:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80043ba:	2b02      	cmp	r3, #2
 80043bc:	dd34      	ble.n	8004428 <_dtoa_r+0x948>
 80043be:	f8cd 8010 	str.w	r8, [sp, #16]
 80043c2:	9b04      	ldr	r3, [sp, #16]
 80043c4:	b963      	cbnz	r3, 80043e0 <_dtoa_r+0x900>
 80043c6:	4631      	mov	r1, r6
 80043c8:	2205      	movs	r2, #5
 80043ca:	4620      	mov	r0, r4
 80043cc:	f000 feca 	bl	8005164 <__multadd>
 80043d0:	4601      	mov	r1, r0
 80043d2:	4606      	mov	r6, r0
 80043d4:	4658      	mov	r0, fp
 80043d6:	f001 f8cd 	bl	8005574 <__mcmp>
 80043da:	2800      	cmp	r0, #0
 80043dc:	f73f add0 	bgt.w	8003f80 <_dtoa_r+0x4a0>
 80043e0:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80043e2:	9d06      	ldr	r5, [sp, #24]
 80043e4:	ea6f 0a03 	mvn.w	sl, r3
 80043e8:	f04f 0900 	mov.w	r9, #0
 80043ec:	4631      	mov	r1, r6
 80043ee:	4620      	mov	r0, r4
 80043f0:	f000 fea1 	bl	8005136 <_Bfree>
 80043f4:	2f00      	cmp	r7, #0
 80043f6:	f43f aebc 	beq.w	8004172 <_dtoa_r+0x692>
 80043fa:	f1b9 0f00 	cmp.w	r9, #0
 80043fe:	d005      	beq.n	800440c <_dtoa_r+0x92c>
 8004400:	45b9      	cmp	r9, r7
 8004402:	d003      	beq.n	800440c <_dtoa_r+0x92c>
 8004404:	4649      	mov	r1, r9
 8004406:	4620      	mov	r0, r4
 8004408:	f000 fe95 	bl	8005136 <_Bfree>
 800440c:	4639      	mov	r1, r7
 800440e:	4620      	mov	r0, r4
 8004410:	f000 fe91 	bl	8005136 <_Bfree>
 8004414:	e6ad      	b.n	8004172 <_dtoa_r+0x692>
 8004416:	2600      	movs	r6, #0
 8004418:	4637      	mov	r7, r6
 800441a:	e7e1      	b.n	80043e0 <_dtoa_r+0x900>
 800441c:	46ba      	mov	sl, r7
 800441e:	4637      	mov	r7, r6
 8004420:	e5ae      	b.n	8003f80 <_dtoa_r+0x4a0>
 8004422:	bf00      	nop
 8004424:	40240000 	.word	0x40240000
 8004428:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800442a:	f8cd 8010 	str.w	r8, [sp, #16]
 800442e:	2b00      	cmp	r3, #0
 8004430:	f000 80f5 	beq.w	800461e <_dtoa_r+0xb3e>
 8004434:	2d00      	cmp	r5, #0
 8004436:	dd05      	ble.n	8004444 <_dtoa_r+0x964>
 8004438:	4639      	mov	r1, r7
 800443a:	462a      	mov	r2, r5
 800443c:	4620      	mov	r0, r4
 800443e:	f001 f845 	bl	80054cc <__lshift>
 8004442:	4607      	mov	r7, r0
 8004444:	9b08      	ldr	r3, [sp, #32]
 8004446:	2b00      	cmp	r3, #0
 8004448:	d04c      	beq.n	80044e4 <_dtoa_r+0xa04>
 800444a:	6879      	ldr	r1, [r7, #4]
 800444c:	4620      	mov	r0, r4
 800444e:	f000 fe3e 	bl	80050ce <_Balloc>
 8004452:	693a      	ldr	r2, [r7, #16]
 8004454:	3202      	adds	r2, #2
 8004456:	4605      	mov	r5, r0
 8004458:	0092      	lsls	r2, r2, #2
 800445a:	f107 010c 	add.w	r1, r7, #12
 800445e:	300c      	adds	r0, #12
 8004460:	f000 fe2a 	bl	80050b8 <memcpy>
 8004464:	2201      	movs	r2, #1
 8004466:	4629      	mov	r1, r5
 8004468:	4620      	mov	r0, r4
 800446a:	f001 f82f 	bl	80054cc <__lshift>
 800446e:	9b06      	ldr	r3, [sp, #24]
 8004470:	9307      	str	r3, [sp, #28]
 8004472:	9b02      	ldr	r3, [sp, #8]
 8004474:	f003 0301 	and.w	r3, r3, #1
 8004478:	46b9      	mov	r9, r7
 800447a:	9308      	str	r3, [sp, #32]
 800447c:	4607      	mov	r7, r0
 800447e:	4631      	mov	r1, r6
 8004480:	4658      	mov	r0, fp
 8004482:	f7ff fa9f 	bl	80039c4 <quorem>
 8004486:	4649      	mov	r1, r9
 8004488:	4605      	mov	r5, r0
 800448a:	f100 0830 	add.w	r8, r0, #48	; 0x30
 800448e:	4658      	mov	r0, fp
 8004490:	f001 f870 	bl	8005574 <__mcmp>
 8004494:	463a      	mov	r2, r7
 8004496:	9002      	str	r0, [sp, #8]
 8004498:	4631      	mov	r1, r6
 800449a:	4620      	mov	r0, r4
 800449c:	f001 f884 	bl	80055a8 <__mdiff>
 80044a0:	68c3      	ldr	r3, [r0, #12]
 80044a2:	4602      	mov	r2, r0
 80044a4:	bb03      	cbnz	r3, 80044e8 <_dtoa_r+0xa08>
 80044a6:	4601      	mov	r1, r0
 80044a8:	9009      	str	r0, [sp, #36]	; 0x24
 80044aa:	4658      	mov	r0, fp
 80044ac:	f001 f862 	bl	8005574 <__mcmp>
 80044b0:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80044b2:	4603      	mov	r3, r0
 80044b4:	4611      	mov	r1, r2
 80044b6:	4620      	mov	r0, r4
 80044b8:	9309      	str	r3, [sp, #36]	; 0x24
 80044ba:	f000 fe3c 	bl	8005136 <_Bfree>
 80044be:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80044c0:	b9a3      	cbnz	r3, 80044ec <_dtoa_r+0xa0c>
 80044c2:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 80044c4:	b992      	cbnz	r2, 80044ec <_dtoa_r+0xa0c>
 80044c6:	9a08      	ldr	r2, [sp, #32]
 80044c8:	b982      	cbnz	r2, 80044ec <_dtoa_r+0xa0c>
 80044ca:	f1b8 0f39 	cmp.w	r8, #57	; 0x39
 80044ce:	d029      	beq.n	8004524 <_dtoa_r+0xa44>
 80044d0:	9b02      	ldr	r3, [sp, #8]
 80044d2:	2b00      	cmp	r3, #0
 80044d4:	dd01      	ble.n	80044da <_dtoa_r+0x9fa>
 80044d6:	f105 0831 	add.w	r8, r5, #49	; 0x31
 80044da:	9b07      	ldr	r3, [sp, #28]
 80044dc:	1c5d      	adds	r5, r3, #1
 80044de:	f883 8000 	strb.w	r8, [r3]
 80044e2:	e783      	b.n	80043ec <_dtoa_r+0x90c>
 80044e4:	4638      	mov	r0, r7
 80044e6:	e7c2      	b.n	800446e <_dtoa_r+0x98e>
 80044e8:	2301      	movs	r3, #1
 80044ea:	e7e3      	b.n	80044b4 <_dtoa_r+0x9d4>
 80044ec:	9a02      	ldr	r2, [sp, #8]
 80044ee:	2a00      	cmp	r2, #0
 80044f0:	db04      	blt.n	80044fc <_dtoa_r+0xa1c>
 80044f2:	d124      	bne.n	800453e <_dtoa_r+0xa5e>
 80044f4:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 80044f6:	bb12      	cbnz	r2, 800453e <_dtoa_r+0xa5e>
 80044f8:	9a08      	ldr	r2, [sp, #32]
 80044fa:	bb02      	cbnz	r2, 800453e <_dtoa_r+0xa5e>
 80044fc:	2b00      	cmp	r3, #0
 80044fe:	ddec      	ble.n	80044da <_dtoa_r+0x9fa>
 8004500:	4659      	mov	r1, fp
 8004502:	2201      	movs	r2, #1
 8004504:	4620      	mov	r0, r4
 8004506:	f000 ffe1 	bl	80054cc <__lshift>
 800450a:	4631      	mov	r1, r6
 800450c:	4683      	mov	fp, r0
 800450e:	f001 f831 	bl	8005574 <__mcmp>
 8004512:	2800      	cmp	r0, #0
 8004514:	dc03      	bgt.n	800451e <_dtoa_r+0xa3e>
 8004516:	d1e0      	bne.n	80044da <_dtoa_r+0x9fa>
 8004518:	f018 0f01 	tst.w	r8, #1
 800451c:	d0dd      	beq.n	80044da <_dtoa_r+0x9fa>
 800451e:	f1b8 0f39 	cmp.w	r8, #57	; 0x39
 8004522:	d1d8      	bne.n	80044d6 <_dtoa_r+0x9f6>
 8004524:	9b07      	ldr	r3, [sp, #28]
 8004526:	9a07      	ldr	r2, [sp, #28]
 8004528:	1c5d      	adds	r5, r3, #1
 800452a:	2339      	movs	r3, #57	; 0x39
 800452c:	7013      	strb	r3, [r2, #0]
 800452e:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 8004532:	2b39      	cmp	r3, #57	; 0x39
 8004534:	f105 32ff 	add.w	r2, r5, #4294967295
 8004538:	d04e      	beq.n	80045d8 <_dtoa_r+0xaf8>
 800453a:	3301      	adds	r3, #1
 800453c:	e053      	b.n	80045e6 <_dtoa_r+0xb06>
 800453e:	9a07      	ldr	r2, [sp, #28]
 8004540:	2b00      	cmp	r3, #0
 8004542:	f102 0501 	add.w	r5, r2, #1
 8004546:	dd06      	ble.n	8004556 <_dtoa_r+0xa76>
 8004548:	f1b8 0f39 	cmp.w	r8, #57	; 0x39
 800454c:	d0ea      	beq.n	8004524 <_dtoa_r+0xa44>
 800454e:	f108 0801 	add.w	r8, r8, #1
 8004552:	9b07      	ldr	r3, [sp, #28]
 8004554:	e7c3      	b.n	80044de <_dtoa_r+0x9fe>
 8004556:	9b06      	ldr	r3, [sp, #24]
 8004558:	9a04      	ldr	r2, [sp, #16]
 800455a:	f805 8c01 	strb.w	r8, [r5, #-1]
 800455e:	1aeb      	subs	r3, r5, r3
 8004560:	4293      	cmp	r3, r2
 8004562:	d021      	beq.n	80045a8 <_dtoa_r+0xac8>
 8004564:	4659      	mov	r1, fp
 8004566:	2300      	movs	r3, #0
 8004568:	220a      	movs	r2, #10
 800456a:	4620      	mov	r0, r4
 800456c:	f000 fdfa 	bl	8005164 <__multadd>
 8004570:	45b9      	cmp	r9, r7
 8004572:	4683      	mov	fp, r0
 8004574:	f04f 0300 	mov.w	r3, #0
 8004578:	f04f 020a 	mov.w	r2, #10
 800457c:	4649      	mov	r1, r9
 800457e:	4620      	mov	r0, r4
 8004580:	d105      	bne.n	800458e <_dtoa_r+0xaae>
 8004582:	f000 fdef 	bl	8005164 <__multadd>
 8004586:	4681      	mov	r9, r0
 8004588:	4607      	mov	r7, r0
 800458a:	9507      	str	r5, [sp, #28]
 800458c:	e777      	b.n	800447e <_dtoa_r+0x99e>
 800458e:	f000 fde9 	bl	8005164 <__multadd>
 8004592:	4639      	mov	r1, r7
 8004594:	4681      	mov	r9, r0
 8004596:	2300      	movs	r3, #0
 8004598:	220a      	movs	r2, #10
 800459a:	4620      	mov	r0, r4
 800459c:	f000 fde2 	bl	8005164 <__multadd>
 80045a0:	4607      	mov	r7, r0
 80045a2:	e7f2      	b.n	800458a <_dtoa_r+0xaaa>
 80045a4:	f04f 0900 	mov.w	r9, #0
 80045a8:	4659      	mov	r1, fp
 80045aa:	2201      	movs	r2, #1
 80045ac:	4620      	mov	r0, r4
 80045ae:	f000 ff8d 	bl	80054cc <__lshift>
 80045b2:	4631      	mov	r1, r6
 80045b4:	4683      	mov	fp, r0
 80045b6:	f000 ffdd 	bl	8005574 <__mcmp>
 80045ba:	2800      	cmp	r0, #0
 80045bc:	dcb7      	bgt.n	800452e <_dtoa_r+0xa4e>
 80045be:	d102      	bne.n	80045c6 <_dtoa_r+0xae6>
 80045c0:	f018 0f01 	tst.w	r8, #1
 80045c4:	d1b3      	bne.n	800452e <_dtoa_r+0xa4e>
 80045c6:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 80045ca:	2b30      	cmp	r3, #48	; 0x30
 80045cc:	f105 32ff 	add.w	r2, r5, #4294967295
 80045d0:	f47f af0c 	bne.w	80043ec <_dtoa_r+0x90c>
 80045d4:	4615      	mov	r5, r2
 80045d6:	e7f6      	b.n	80045c6 <_dtoa_r+0xae6>
 80045d8:	9b06      	ldr	r3, [sp, #24]
 80045da:	4293      	cmp	r3, r2
 80045dc:	d105      	bne.n	80045ea <_dtoa_r+0xb0a>
 80045de:	9a06      	ldr	r2, [sp, #24]
 80045e0:	f10a 0a01 	add.w	sl, sl, #1
 80045e4:	2331      	movs	r3, #49	; 0x31
 80045e6:	7013      	strb	r3, [r2, #0]
 80045e8:	e700      	b.n	80043ec <_dtoa_r+0x90c>
 80045ea:	4615      	mov	r5, r2
 80045ec:	e79f      	b.n	800452e <_dtoa_r+0xa4e>
 80045ee:	4b17      	ldr	r3, [pc, #92]	; (800464c <_dtoa_r+0xb6c>)
 80045f0:	f7ff badb 	b.w	8003baa <_dtoa_r+0xca>
 80045f4:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80045f6:	2b00      	cmp	r3, #0
 80045f8:	f47f aab5 	bne.w	8003b66 <_dtoa_r+0x86>
 80045fc:	4b14      	ldr	r3, [pc, #80]	; (8004650 <_dtoa_r+0xb70>)
 80045fe:	f7ff bad4 	b.w	8003baa <_dtoa_r+0xca>
 8004602:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8004604:	2b01      	cmp	r3, #1
 8004606:	f77f ae3c 	ble.w	8004282 <_dtoa_r+0x7a2>
 800460a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800460c:	9308      	str	r3, [sp, #32]
 800460e:	e650      	b.n	80042b2 <_dtoa_r+0x7d2>
 8004610:	9b04      	ldr	r3, [sp, #16]
 8004612:	2b00      	cmp	r3, #0
 8004614:	dc03      	bgt.n	800461e <_dtoa_r+0xb3e>
 8004616:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8004618:	2b02      	cmp	r3, #2
 800461a:	f73f aed2 	bgt.w	80043c2 <_dtoa_r+0x8e2>
 800461e:	9d06      	ldr	r5, [sp, #24]
 8004620:	4631      	mov	r1, r6
 8004622:	4658      	mov	r0, fp
 8004624:	f7ff f9ce 	bl	80039c4 <quorem>
 8004628:	f100 0830 	add.w	r8, r0, #48	; 0x30
 800462c:	f805 8b01 	strb.w	r8, [r5], #1
 8004630:	9b06      	ldr	r3, [sp, #24]
 8004632:	9a04      	ldr	r2, [sp, #16]
 8004634:	1aeb      	subs	r3, r5, r3
 8004636:	429a      	cmp	r2, r3
 8004638:	ddb4      	ble.n	80045a4 <_dtoa_r+0xac4>
 800463a:	4659      	mov	r1, fp
 800463c:	2300      	movs	r3, #0
 800463e:	220a      	movs	r2, #10
 8004640:	4620      	mov	r0, r4
 8004642:	f000 fd8f 	bl	8005164 <__multadd>
 8004646:	4683      	mov	fp, r0
 8004648:	e7ea      	b.n	8004620 <_dtoa_r+0xb40>
 800464a:	bf00      	nop
 800464c:	08006730 	.word	0x08006730
 8004650:	080067b0 	.word	0x080067b0

08004654 <__sflush_r>:
 8004654:	898a      	ldrh	r2, [r1, #12]
 8004656:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800465a:	4605      	mov	r5, r0
 800465c:	0710      	lsls	r0, r2, #28
 800465e:	460c      	mov	r4, r1
 8004660:	d458      	bmi.n	8004714 <__sflush_r+0xc0>
 8004662:	684b      	ldr	r3, [r1, #4]
 8004664:	2b00      	cmp	r3, #0
 8004666:	dc05      	bgt.n	8004674 <__sflush_r+0x20>
 8004668:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 800466a:	2b00      	cmp	r3, #0
 800466c:	dc02      	bgt.n	8004674 <__sflush_r+0x20>
 800466e:	2000      	movs	r0, #0
 8004670:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8004674:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8004676:	2e00      	cmp	r6, #0
 8004678:	d0f9      	beq.n	800466e <__sflush_r+0x1a>
 800467a:	2300      	movs	r3, #0
 800467c:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8004680:	682f      	ldr	r7, [r5, #0]
 8004682:	6a21      	ldr	r1, [r4, #32]
 8004684:	602b      	str	r3, [r5, #0]
 8004686:	d032      	beq.n	80046ee <__sflush_r+0x9a>
 8004688:	6d60      	ldr	r0, [r4, #84]	; 0x54
 800468a:	89a3      	ldrh	r3, [r4, #12]
 800468c:	075a      	lsls	r2, r3, #29
 800468e:	d505      	bpl.n	800469c <__sflush_r+0x48>
 8004690:	6863      	ldr	r3, [r4, #4]
 8004692:	1ac0      	subs	r0, r0, r3
 8004694:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8004696:	b10b      	cbz	r3, 800469c <__sflush_r+0x48>
 8004698:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800469a:	1ac0      	subs	r0, r0, r3
 800469c:	2300      	movs	r3, #0
 800469e:	4602      	mov	r2, r0
 80046a0:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80046a2:	6a21      	ldr	r1, [r4, #32]
 80046a4:	4628      	mov	r0, r5
 80046a6:	47b0      	blx	r6
 80046a8:	1c43      	adds	r3, r0, #1
 80046aa:	89a3      	ldrh	r3, [r4, #12]
 80046ac:	d106      	bne.n	80046bc <__sflush_r+0x68>
 80046ae:	6829      	ldr	r1, [r5, #0]
 80046b0:	291d      	cmp	r1, #29
 80046b2:	d848      	bhi.n	8004746 <__sflush_r+0xf2>
 80046b4:	4a29      	ldr	r2, [pc, #164]	; (800475c <__sflush_r+0x108>)
 80046b6:	40ca      	lsrs	r2, r1
 80046b8:	07d6      	lsls	r6, r2, #31
 80046ba:	d544      	bpl.n	8004746 <__sflush_r+0xf2>
 80046bc:	2200      	movs	r2, #0
 80046be:	6062      	str	r2, [r4, #4]
 80046c0:	04d9      	lsls	r1, r3, #19
 80046c2:	6922      	ldr	r2, [r4, #16]
 80046c4:	6022      	str	r2, [r4, #0]
 80046c6:	d504      	bpl.n	80046d2 <__sflush_r+0x7e>
 80046c8:	1c42      	adds	r2, r0, #1
 80046ca:	d101      	bne.n	80046d0 <__sflush_r+0x7c>
 80046cc:	682b      	ldr	r3, [r5, #0]
 80046ce:	b903      	cbnz	r3, 80046d2 <__sflush_r+0x7e>
 80046d0:	6560      	str	r0, [r4, #84]	; 0x54
 80046d2:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80046d4:	602f      	str	r7, [r5, #0]
 80046d6:	2900      	cmp	r1, #0
 80046d8:	d0c9      	beq.n	800466e <__sflush_r+0x1a>
 80046da:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80046de:	4299      	cmp	r1, r3
 80046e0:	d002      	beq.n	80046e8 <__sflush_r+0x94>
 80046e2:	4628      	mov	r0, r5
 80046e4:	f001 f8fa 	bl	80058dc <_free_r>
 80046e8:	2000      	movs	r0, #0
 80046ea:	6360      	str	r0, [r4, #52]	; 0x34
 80046ec:	e7c0      	b.n	8004670 <__sflush_r+0x1c>
 80046ee:	2301      	movs	r3, #1
 80046f0:	4628      	mov	r0, r5
 80046f2:	47b0      	blx	r6
 80046f4:	1c41      	adds	r1, r0, #1
 80046f6:	d1c8      	bne.n	800468a <__sflush_r+0x36>
 80046f8:	682b      	ldr	r3, [r5, #0]
 80046fa:	2b00      	cmp	r3, #0
 80046fc:	d0c5      	beq.n	800468a <__sflush_r+0x36>
 80046fe:	2b1d      	cmp	r3, #29
 8004700:	d001      	beq.n	8004706 <__sflush_r+0xb2>
 8004702:	2b16      	cmp	r3, #22
 8004704:	d101      	bne.n	800470a <__sflush_r+0xb6>
 8004706:	602f      	str	r7, [r5, #0]
 8004708:	e7b1      	b.n	800466e <__sflush_r+0x1a>
 800470a:	89a3      	ldrh	r3, [r4, #12]
 800470c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8004710:	81a3      	strh	r3, [r4, #12]
 8004712:	e7ad      	b.n	8004670 <__sflush_r+0x1c>
 8004714:	690f      	ldr	r7, [r1, #16]
 8004716:	2f00      	cmp	r7, #0
 8004718:	d0a9      	beq.n	800466e <__sflush_r+0x1a>
 800471a:	0793      	lsls	r3, r2, #30
 800471c:	680e      	ldr	r6, [r1, #0]
 800471e:	bf08      	it	eq
 8004720:	694b      	ldreq	r3, [r1, #20]
 8004722:	600f      	str	r7, [r1, #0]
 8004724:	bf18      	it	ne
 8004726:	2300      	movne	r3, #0
 8004728:	eba6 0807 	sub.w	r8, r6, r7
 800472c:	608b      	str	r3, [r1, #8]
 800472e:	f1b8 0f00 	cmp.w	r8, #0
 8004732:	dd9c      	ble.n	800466e <__sflush_r+0x1a>
 8004734:	4643      	mov	r3, r8
 8004736:	463a      	mov	r2, r7
 8004738:	6a21      	ldr	r1, [r4, #32]
 800473a:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 800473c:	4628      	mov	r0, r5
 800473e:	47b0      	blx	r6
 8004740:	2800      	cmp	r0, #0
 8004742:	dc06      	bgt.n	8004752 <__sflush_r+0xfe>
 8004744:	89a3      	ldrh	r3, [r4, #12]
 8004746:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800474a:	81a3      	strh	r3, [r4, #12]
 800474c:	f04f 30ff 	mov.w	r0, #4294967295
 8004750:	e78e      	b.n	8004670 <__sflush_r+0x1c>
 8004752:	4407      	add	r7, r0
 8004754:	eba8 0800 	sub.w	r8, r8, r0
 8004758:	e7e9      	b.n	800472e <__sflush_r+0xda>
 800475a:	bf00      	nop
 800475c:	20400001 	.word	0x20400001

08004760 <_fflush_r>:
 8004760:	b538      	push	{r3, r4, r5, lr}
 8004762:	690b      	ldr	r3, [r1, #16]
 8004764:	4605      	mov	r5, r0
 8004766:	460c      	mov	r4, r1
 8004768:	b1db      	cbz	r3, 80047a2 <_fflush_r+0x42>
 800476a:	b118      	cbz	r0, 8004774 <_fflush_r+0x14>
 800476c:	6983      	ldr	r3, [r0, #24]
 800476e:	b90b      	cbnz	r3, 8004774 <_fflush_r+0x14>
 8004770:	f000 f860 	bl	8004834 <__sinit>
 8004774:	4b0c      	ldr	r3, [pc, #48]	; (80047a8 <_fflush_r+0x48>)
 8004776:	429c      	cmp	r4, r3
 8004778:	d109      	bne.n	800478e <_fflush_r+0x2e>
 800477a:	686c      	ldr	r4, [r5, #4]
 800477c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8004780:	b17b      	cbz	r3, 80047a2 <_fflush_r+0x42>
 8004782:	4621      	mov	r1, r4
 8004784:	4628      	mov	r0, r5
 8004786:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800478a:	f7ff bf63 	b.w	8004654 <__sflush_r>
 800478e:	4b07      	ldr	r3, [pc, #28]	; (80047ac <_fflush_r+0x4c>)
 8004790:	429c      	cmp	r4, r3
 8004792:	d101      	bne.n	8004798 <_fflush_r+0x38>
 8004794:	68ac      	ldr	r4, [r5, #8]
 8004796:	e7f1      	b.n	800477c <_fflush_r+0x1c>
 8004798:	4b05      	ldr	r3, [pc, #20]	; (80047b0 <_fflush_r+0x50>)
 800479a:	429c      	cmp	r4, r3
 800479c:	bf08      	it	eq
 800479e:	68ec      	ldreq	r4, [r5, #12]
 80047a0:	e7ec      	b.n	800477c <_fflush_r+0x1c>
 80047a2:	2000      	movs	r0, #0
 80047a4:	bd38      	pop	{r3, r4, r5, pc}
 80047a6:	bf00      	nop
 80047a8:	080067e0 	.word	0x080067e0
 80047ac:	08006800 	.word	0x08006800
 80047b0:	080067c0 	.word	0x080067c0

080047b4 <std>:
 80047b4:	2300      	movs	r3, #0
 80047b6:	b510      	push	{r4, lr}
 80047b8:	4604      	mov	r4, r0
 80047ba:	e9c0 3300 	strd	r3, r3, [r0]
 80047be:	6083      	str	r3, [r0, #8]
 80047c0:	8181      	strh	r1, [r0, #12]
 80047c2:	6643      	str	r3, [r0, #100]	; 0x64
 80047c4:	81c2      	strh	r2, [r0, #14]
 80047c6:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80047ca:	6183      	str	r3, [r0, #24]
 80047cc:	4619      	mov	r1, r3
 80047ce:	2208      	movs	r2, #8
 80047d0:	305c      	adds	r0, #92	; 0x5c
 80047d2:	f7fd faa3 	bl	8001d1c <memset>
 80047d6:	4b05      	ldr	r3, [pc, #20]	; (80047ec <std+0x38>)
 80047d8:	6263      	str	r3, [r4, #36]	; 0x24
 80047da:	4b05      	ldr	r3, [pc, #20]	; (80047f0 <std+0x3c>)
 80047dc:	62a3      	str	r3, [r4, #40]	; 0x28
 80047de:	4b05      	ldr	r3, [pc, #20]	; (80047f4 <std+0x40>)
 80047e0:	62e3      	str	r3, [r4, #44]	; 0x2c
 80047e2:	4b05      	ldr	r3, [pc, #20]	; (80047f8 <std+0x44>)
 80047e4:	6224      	str	r4, [r4, #32]
 80047e6:	6323      	str	r3, [r4, #48]	; 0x30
 80047e8:	bd10      	pop	{r4, pc}
 80047ea:	bf00      	nop
 80047ec:	08005f6d 	.word	0x08005f6d
 80047f0:	08005f8f 	.word	0x08005f8f
 80047f4:	08005fc7 	.word	0x08005fc7
 80047f8:	08005feb 	.word	0x08005feb

080047fc <_cleanup_r>:
 80047fc:	4901      	ldr	r1, [pc, #4]	; (8004804 <_cleanup_r+0x8>)
 80047fe:	f000 b885 	b.w	800490c <_fwalk_reent>
 8004802:	bf00      	nop
 8004804:	08004761 	.word	0x08004761

08004808 <__sfmoreglue>:
 8004808:	b570      	push	{r4, r5, r6, lr}
 800480a:	1e4a      	subs	r2, r1, #1
 800480c:	2568      	movs	r5, #104	; 0x68
 800480e:	4355      	muls	r5, r2
 8004810:	460e      	mov	r6, r1
 8004812:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8004816:	f001 f8af 	bl	8005978 <_malloc_r>
 800481a:	4604      	mov	r4, r0
 800481c:	b140      	cbz	r0, 8004830 <__sfmoreglue+0x28>
 800481e:	2100      	movs	r1, #0
 8004820:	e9c0 1600 	strd	r1, r6, [r0]
 8004824:	300c      	adds	r0, #12
 8004826:	60a0      	str	r0, [r4, #8]
 8004828:	f105 0268 	add.w	r2, r5, #104	; 0x68
 800482c:	f7fd fa76 	bl	8001d1c <memset>
 8004830:	4620      	mov	r0, r4
 8004832:	bd70      	pop	{r4, r5, r6, pc}

08004834 <__sinit>:
 8004834:	6983      	ldr	r3, [r0, #24]
 8004836:	b510      	push	{r4, lr}
 8004838:	4604      	mov	r4, r0
 800483a:	bb33      	cbnz	r3, 800488a <__sinit+0x56>
 800483c:	e9c0 3312 	strd	r3, r3, [r0, #72]	; 0x48
 8004840:	6503      	str	r3, [r0, #80]	; 0x50
 8004842:	4b12      	ldr	r3, [pc, #72]	; (800488c <__sinit+0x58>)
 8004844:	4a12      	ldr	r2, [pc, #72]	; (8004890 <__sinit+0x5c>)
 8004846:	681b      	ldr	r3, [r3, #0]
 8004848:	6282      	str	r2, [r0, #40]	; 0x28
 800484a:	4298      	cmp	r0, r3
 800484c:	bf04      	itt	eq
 800484e:	2301      	moveq	r3, #1
 8004850:	6183      	streq	r3, [r0, #24]
 8004852:	f000 f81f 	bl	8004894 <__sfp>
 8004856:	6060      	str	r0, [r4, #4]
 8004858:	4620      	mov	r0, r4
 800485a:	f000 f81b 	bl	8004894 <__sfp>
 800485e:	60a0      	str	r0, [r4, #8]
 8004860:	4620      	mov	r0, r4
 8004862:	f000 f817 	bl	8004894 <__sfp>
 8004866:	2200      	movs	r2, #0
 8004868:	60e0      	str	r0, [r4, #12]
 800486a:	2104      	movs	r1, #4
 800486c:	6860      	ldr	r0, [r4, #4]
 800486e:	f7ff ffa1 	bl	80047b4 <std>
 8004872:	2201      	movs	r2, #1
 8004874:	2109      	movs	r1, #9
 8004876:	68a0      	ldr	r0, [r4, #8]
 8004878:	f7ff ff9c 	bl	80047b4 <std>
 800487c:	2202      	movs	r2, #2
 800487e:	2112      	movs	r1, #18
 8004880:	68e0      	ldr	r0, [r4, #12]
 8004882:	f7ff ff97 	bl	80047b4 <std>
 8004886:	2301      	movs	r3, #1
 8004888:	61a3      	str	r3, [r4, #24]
 800488a:	bd10      	pop	{r4, pc}
 800488c:	0800671c 	.word	0x0800671c
 8004890:	080047fd 	.word	0x080047fd

08004894 <__sfp>:
 8004894:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004896:	4b1b      	ldr	r3, [pc, #108]	; (8004904 <__sfp+0x70>)
 8004898:	681e      	ldr	r6, [r3, #0]
 800489a:	69b3      	ldr	r3, [r6, #24]
 800489c:	4607      	mov	r7, r0
 800489e:	b913      	cbnz	r3, 80048a6 <__sfp+0x12>
 80048a0:	4630      	mov	r0, r6
 80048a2:	f7ff ffc7 	bl	8004834 <__sinit>
 80048a6:	3648      	adds	r6, #72	; 0x48
 80048a8:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 80048ac:	3b01      	subs	r3, #1
 80048ae:	d503      	bpl.n	80048b8 <__sfp+0x24>
 80048b0:	6833      	ldr	r3, [r6, #0]
 80048b2:	b133      	cbz	r3, 80048c2 <__sfp+0x2e>
 80048b4:	6836      	ldr	r6, [r6, #0]
 80048b6:	e7f7      	b.n	80048a8 <__sfp+0x14>
 80048b8:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 80048bc:	b16d      	cbz	r5, 80048da <__sfp+0x46>
 80048be:	3468      	adds	r4, #104	; 0x68
 80048c0:	e7f4      	b.n	80048ac <__sfp+0x18>
 80048c2:	2104      	movs	r1, #4
 80048c4:	4638      	mov	r0, r7
 80048c6:	f7ff ff9f 	bl	8004808 <__sfmoreglue>
 80048ca:	6030      	str	r0, [r6, #0]
 80048cc:	2800      	cmp	r0, #0
 80048ce:	d1f1      	bne.n	80048b4 <__sfp+0x20>
 80048d0:	230c      	movs	r3, #12
 80048d2:	603b      	str	r3, [r7, #0]
 80048d4:	4604      	mov	r4, r0
 80048d6:	4620      	mov	r0, r4
 80048d8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80048da:	4b0b      	ldr	r3, [pc, #44]	; (8004908 <__sfp+0x74>)
 80048dc:	6665      	str	r5, [r4, #100]	; 0x64
 80048de:	e9c4 5500 	strd	r5, r5, [r4]
 80048e2:	60a5      	str	r5, [r4, #8]
 80048e4:	e9c4 3503 	strd	r3, r5, [r4, #12]
 80048e8:	e9c4 5505 	strd	r5, r5, [r4, #20]
 80048ec:	2208      	movs	r2, #8
 80048ee:	4629      	mov	r1, r5
 80048f0:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 80048f4:	f7fd fa12 	bl	8001d1c <memset>
 80048f8:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 80048fc:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8004900:	e7e9      	b.n	80048d6 <__sfp+0x42>
 8004902:	bf00      	nop
 8004904:	0800671c 	.word	0x0800671c
 8004908:	ffff0001 	.word	0xffff0001

0800490c <_fwalk_reent>:
 800490c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8004910:	4680      	mov	r8, r0
 8004912:	4689      	mov	r9, r1
 8004914:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8004918:	2600      	movs	r6, #0
 800491a:	b914      	cbnz	r4, 8004922 <_fwalk_reent+0x16>
 800491c:	4630      	mov	r0, r6
 800491e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8004922:	e9d4 7501 	ldrd	r7, r5, [r4, #4]
 8004926:	3f01      	subs	r7, #1
 8004928:	d501      	bpl.n	800492e <_fwalk_reent+0x22>
 800492a:	6824      	ldr	r4, [r4, #0]
 800492c:	e7f5      	b.n	800491a <_fwalk_reent+0xe>
 800492e:	89ab      	ldrh	r3, [r5, #12]
 8004930:	2b01      	cmp	r3, #1
 8004932:	d907      	bls.n	8004944 <_fwalk_reent+0x38>
 8004934:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8004938:	3301      	adds	r3, #1
 800493a:	d003      	beq.n	8004944 <_fwalk_reent+0x38>
 800493c:	4629      	mov	r1, r5
 800493e:	4640      	mov	r0, r8
 8004940:	47c8      	blx	r9
 8004942:	4306      	orrs	r6, r0
 8004944:	3568      	adds	r5, #104	; 0x68
 8004946:	e7ee      	b.n	8004926 <_fwalk_reent+0x1a>

08004948 <rshift>:
 8004948:	b5f0      	push	{r4, r5, r6, r7, lr}
 800494a:	6906      	ldr	r6, [r0, #16]
 800494c:	114b      	asrs	r3, r1, #5
 800494e:	429e      	cmp	r6, r3
 8004950:	f100 0414 	add.w	r4, r0, #20
 8004954:	dd30      	ble.n	80049b8 <rshift+0x70>
 8004956:	f011 011f 	ands.w	r1, r1, #31
 800495a:	eb04 0686 	add.w	r6, r4, r6, lsl #2
 800495e:	eb04 0283 	add.w	r2, r4, r3, lsl #2
 8004962:	d108      	bne.n	8004976 <rshift+0x2e>
 8004964:	4621      	mov	r1, r4
 8004966:	42b2      	cmp	r2, r6
 8004968:	460b      	mov	r3, r1
 800496a:	d211      	bcs.n	8004990 <rshift+0x48>
 800496c:	f852 3b04 	ldr.w	r3, [r2], #4
 8004970:	f841 3b04 	str.w	r3, [r1], #4
 8004974:	e7f7      	b.n	8004966 <rshift+0x1e>
 8004976:	f854 5023 	ldr.w	r5, [r4, r3, lsl #2]
 800497a:	f1c1 0c20 	rsb	ip, r1, #32
 800497e:	40cd      	lsrs	r5, r1
 8004980:	3204      	adds	r2, #4
 8004982:	4623      	mov	r3, r4
 8004984:	42b2      	cmp	r2, r6
 8004986:	4617      	mov	r7, r2
 8004988:	d30c      	bcc.n	80049a4 <rshift+0x5c>
 800498a:	601d      	str	r5, [r3, #0]
 800498c:	b105      	cbz	r5, 8004990 <rshift+0x48>
 800498e:	3304      	adds	r3, #4
 8004990:	1b1a      	subs	r2, r3, r4
 8004992:	42a3      	cmp	r3, r4
 8004994:	ea4f 02a2 	mov.w	r2, r2, asr #2
 8004998:	bf08      	it	eq
 800499a:	2300      	moveq	r3, #0
 800499c:	6102      	str	r2, [r0, #16]
 800499e:	bf08      	it	eq
 80049a0:	6143      	streq	r3, [r0, #20]
 80049a2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80049a4:	683f      	ldr	r7, [r7, #0]
 80049a6:	fa07 f70c 	lsl.w	r7, r7, ip
 80049aa:	433d      	orrs	r5, r7
 80049ac:	f843 5b04 	str.w	r5, [r3], #4
 80049b0:	f852 5b04 	ldr.w	r5, [r2], #4
 80049b4:	40cd      	lsrs	r5, r1
 80049b6:	e7e5      	b.n	8004984 <rshift+0x3c>
 80049b8:	4623      	mov	r3, r4
 80049ba:	e7e9      	b.n	8004990 <rshift+0x48>

080049bc <__hexdig_fun>:
 80049bc:	f1a0 0330 	sub.w	r3, r0, #48	; 0x30
 80049c0:	2b09      	cmp	r3, #9
 80049c2:	d802      	bhi.n	80049ca <__hexdig_fun+0xe>
 80049c4:	3820      	subs	r0, #32
 80049c6:	b2c0      	uxtb	r0, r0
 80049c8:	4770      	bx	lr
 80049ca:	f1a0 0361 	sub.w	r3, r0, #97	; 0x61
 80049ce:	2b05      	cmp	r3, #5
 80049d0:	d801      	bhi.n	80049d6 <__hexdig_fun+0x1a>
 80049d2:	3847      	subs	r0, #71	; 0x47
 80049d4:	e7f7      	b.n	80049c6 <__hexdig_fun+0xa>
 80049d6:	f1a0 0341 	sub.w	r3, r0, #65	; 0x41
 80049da:	2b05      	cmp	r3, #5
 80049dc:	d801      	bhi.n	80049e2 <__hexdig_fun+0x26>
 80049de:	3827      	subs	r0, #39	; 0x27
 80049e0:	e7f1      	b.n	80049c6 <__hexdig_fun+0xa>
 80049e2:	2000      	movs	r0, #0
 80049e4:	4770      	bx	lr

080049e6 <__gethex>:
 80049e6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80049ea:	b08b      	sub	sp, #44	; 0x2c
 80049ec:	468a      	mov	sl, r1
 80049ee:	9002      	str	r0, [sp, #8]
 80049f0:	9816      	ldr	r0, [sp, #88]	; 0x58
 80049f2:	9306      	str	r3, [sp, #24]
 80049f4:	4690      	mov	r8, r2
 80049f6:	f000 fad0 	bl	8004f9a <__localeconv_l>
 80049fa:	6803      	ldr	r3, [r0, #0]
 80049fc:	9303      	str	r3, [sp, #12]
 80049fe:	4618      	mov	r0, r3
 8004a00:	f7fb fc06 	bl	8000210 <strlen>
 8004a04:	9b03      	ldr	r3, [sp, #12]
 8004a06:	9001      	str	r0, [sp, #4]
 8004a08:	4403      	add	r3, r0
 8004a0a:	f04f 0b00 	mov.w	fp, #0
 8004a0e:	f813 3c01 	ldrb.w	r3, [r3, #-1]
 8004a12:	9307      	str	r3, [sp, #28]
 8004a14:	f8da 3000 	ldr.w	r3, [sl]
 8004a18:	3302      	adds	r3, #2
 8004a1a:	461f      	mov	r7, r3
 8004a1c:	f813 0b01 	ldrb.w	r0, [r3], #1
 8004a20:	2830      	cmp	r0, #48	; 0x30
 8004a22:	d06c      	beq.n	8004afe <__gethex+0x118>
 8004a24:	f7ff ffca 	bl	80049bc <__hexdig_fun>
 8004a28:	4604      	mov	r4, r0
 8004a2a:	2800      	cmp	r0, #0
 8004a2c:	d16a      	bne.n	8004b04 <__gethex+0x11e>
 8004a2e:	9a01      	ldr	r2, [sp, #4]
 8004a30:	9903      	ldr	r1, [sp, #12]
 8004a32:	4638      	mov	r0, r7
 8004a34:	f001 fadd 	bl	8005ff2 <strncmp>
 8004a38:	2800      	cmp	r0, #0
 8004a3a:	d166      	bne.n	8004b0a <__gethex+0x124>
 8004a3c:	9b01      	ldr	r3, [sp, #4]
 8004a3e:	5cf8      	ldrb	r0, [r7, r3]
 8004a40:	18fe      	adds	r6, r7, r3
 8004a42:	f7ff ffbb 	bl	80049bc <__hexdig_fun>
 8004a46:	2800      	cmp	r0, #0
 8004a48:	d062      	beq.n	8004b10 <__gethex+0x12a>
 8004a4a:	4633      	mov	r3, r6
 8004a4c:	7818      	ldrb	r0, [r3, #0]
 8004a4e:	2830      	cmp	r0, #48	; 0x30
 8004a50:	461f      	mov	r7, r3
 8004a52:	f103 0301 	add.w	r3, r3, #1
 8004a56:	d0f9      	beq.n	8004a4c <__gethex+0x66>
 8004a58:	f7ff ffb0 	bl	80049bc <__hexdig_fun>
 8004a5c:	fab0 f580 	clz	r5, r0
 8004a60:	096d      	lsrs	r5, r5, #5
 8004a62:	4634      	mov	r4, r6
 8004a64:	f04f 0b01 	mov.w	fp, #1
 8004a68:	463a      	mov	r2, r7
 8004a6a:	4616      	mov	r6, r2
 8004a6c:	3201      	adds	r2, #1
 8004a6e:	7830      	ldrb	r0, [r6, #0]
 8004a70:	f7ff ffa4 	bl	80049bc <__hexdig_fun>
 8004a74:	2800      	cmp	r0, #0
 8004a76:	d1f8      	bne.n	8004a6a <__gethex+0x84>
 8004a78:	9a01      	ldr	r2, [sp, #4]
 8004a7a:	9903      	ldr	r1, [sp, #12]
 8004a7c:	4630      	mov	r0, r6
 8004a7e:	f001 fab8 	bl	8005ff2 <strncmp>
 8004a82:	b950      	cbnz	r0, 8004a9a <__gethex+0xb4>
 8004a84:	b954      	cbnz	r4, 8004a9c <__gethex+0xb6>
 8004a86:	9b01      	ldr	r3, [sp, #4]
 8004a88:	18f4      	adds	r4, r6, r3
 8004a8a:	4622      	mov	r2, r4
 8004a8c:	4616      	mov	r6, r2
 8004a8e:	3201      	adds	r2, #1
 8004a90:	7830      	ldrb	r0, [r6, #0]
 8004a92:	f7ff ff93 	bl	80049bc <__hexdig_fun>
 8004a96:	2800      	cmp	r0, #0
 8004a98:	d1f8      	bne.n	8004a8c <__gethex+0xa6>
 8004a9a:	b10c      	cbz	r4, 8004aa0 <__gethex+0xba>
 8004a9c:	1ba4      	subs	r4, r4, r6
 8004a9e:	00a4      	lsls	r4, r4, #2
 8004aa0:	7833      	ldrb	r3, [r6, #0]
 8004aa2:	2b50      	cmp	r3, #80	; 0x50
 8004aa4:	d001      	beq.n	8004aaa <__gethex+0xc4>
 8004aa6:	2b70      	cmp	r3, #112	; 0x70
 8004aa8:	d140      	bne.n	8004b2c <__gethex+0x146>
 8004aaa:	7873      	ldrb	r3, [r6, #1]
 8004aac:	2b2b      	cmp	r3, #43	; 0x2b
 8004aae:	d031      	beq.n	8004b14 <__gethex+0x12e>
 8004ab0:	2b2d      	cmp	r3, #45	; 0x2d
 8004ab2:	d033      	beq.n	8004b1c <__gethex+0x136>
 8004ab4:	1c71      	adds	r1, r6, #1
 8004ab6:	f04f 0900 	mov.w	r9, #0
 8004aba:	7808      	ldrb	r0, [r1, #0]
 8004abc:	f7ff ff7e 	bl	80049bc <__hexdig_fun>
 8004ac0:	1e43      	subs	r3, r0, #1
 8004ac2:	b2db      	uxtb	r3, r3
 8004ac4:	2b18      	cmp	r3, #24
 8004ac6:	d831      	bhi.n	8004b2c <__gethex+0x146>
 8004ac8:	f1a0 0210 	sub.w	r2, r0, #16
 8004acc:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 8004ad0:	f7ff ff74 	bl	80049bc <__hexdig_fun>
 8004ad4:	1e43      	subs	r3, r0, #1
 8004ad6:	b2db      	uxtb	r3, r3
 8004ad8:	2b18      	cmp	r3, #24
 8004ada:	d922      	bls.n	8004b22 <__gethex+0x13c>
 8004adc:	f1b9 0f00 	cmp.w	r9, #0
 8004ae0:	d000      	beq.n	8004ae4 <__gethex+0xfe>
 8004ae2:	4252      	negs	r2, r2
 8004ae4:	4414      	add	r4, r2
 8004ae6:	f8ca 1000 	str.w	r1, [sl]
 8004aea:	b30d      	cbz	r5, 8004b30 <__gethex+0x14a>
 8004aec:	f1bb 0f00 	cmp.w	fp, #0
 8004af0:	bf0c      	ite	eq
 8004af2:	2706      	moveq	r7, #6
 8004af4:	2700      	movne	r7, #0
 8004af6:	4638      	mov	r0, r7
 8004af8:	b00b      	add	sp, #44	; 0x2c
 8004afa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004afe:	f10b 0b01 	add.w	fp, fp, #1
 8004b02:	e78a      	b.n	8004a1a <__gethex+0x34>
 8004b04:	2500      	movs	r5, #0
 8004b06:	462c      	mov	r4, r5
 8004b08:	e7ae      	b.n	8004a68 <__gethex+0x82>
 8004b0a:	463e      	mov	r6, r7
 8004b0c:	2501      	movs	r5, #1
 8004b0e:	e7c7      	b.n	8004aa0 <__gethex+0xba>
 8004b10:	4604      	mov	r4, r0
 8004b12:	e7fb      	b.n	8004b0c <__gethex+0x126>
 8004b14:	f04f 0900 	mov.w	r9, #0
 8004b18:	1cb1      	adds	r1, r6, #2
 8004b1a:	e7ce      	b.n	8004aba <__gethex+0xd4>
 8004b1c:	f04f 0901 	mov.w	r9, #1
 8004b20:	e7fa      	b.n	8004b18 <__gethex+0x132>
 8004b22:	230a      	movs	r3, #10
 8004b24:	fb03 0202 	mla	r2, r3, r2, r0
 8004b28:	3a10      	subs	r2, #16
 8004b2a:	e7cf      	b.n	8004acc <__gethex+0xe6>
 8004b2c:	4631      	mov	r1, r6
 8004b2e:	e7da      	b.n	8004ae6 <__gethex+0x100>
 8004b30:	1bf3      	subs	r3, r6, r7
 8004b32:	3b01      	subs	r3, #1
 8004b34:	4629      	mov	r1, r5
 8004b36:	2b07      	cmp	r3, #7
 8004b38:	dc49      	bgt.n	8004bce <__gethex+0x1e8>
 8004b3a:	9802      	ldr	r0, [sp, #8]
 8004b3c:	f000 fac7 	bl	80050ce <_Balloc>
 8004b40:	9b01      	ldr	r3, [sp, #4]
 8004b42:	f100 0914 	add.w	r9, r0, #20
 8004b46:	f04f 0b00 	mov.w	fp, #0
 8004b4a:	f1c3 0301 	rsb	r3, r3, #1
 8004b4e:	4605      	mov	r5, r0
 8004b50:	f8cd 9010 	str.w	r9, [sp, #16]
 8004b54:	46da      	mov	sl, fp
 8004b56:	9308      	str	r3, [sp, #32]
 8004b58:	42b7      	cmp	r7, r6
 8004b5a:	d33b      	bcc.n	8004bd4 <__gethex+0x1ee>
 8004b5c:	9804      	ldr	r0, [sp, #16]
 8004b5e:	f840 ab04 	str.w	sl, [r0], #4
 8004b62:	eba0 0009 	sub.w	r0, r0, r9
 8004b66:	1080      	asrs	r0, r0, #2
 8004b68:	6128      	str	r0, [r5, #16]
 8004b6a:	0147      	lsls	r7, r0, #5
 8004b6c:	4650      	mov	r0, sl
 8004b6e:	f000 fb72 	bl	8005256 <__hi0bits>
 8004b72:	f8d8 6000 	ldr.w	r6, [r8]
 8004b76:	1a3f      	subs	r7, r7, r0
 8004b78:	42b7      	cmp	r7, r6
 8004b7a:	dd64      	ble.n	8004c46 <__gethex+0x260>
 8004b7c:	1bbf      	subs	r7, r7, r6
 8004b7e:	4639      	mov	r1, r7
 8004b80:	4628      	mov	r0, r5
 8004b82:	f000 fe7c 	bl	800587e <__any_on>
 8004b86:	4682      	mov	sl, r0
 8004b88:	b178      	cbz	r0, 8004baa <__gethex+0x1c4>
 8004b8a:	1e7b      	subs	r3, r7, #1
 8004b8c:	1159      	asrs	r1, r3, #5
 8004b8e:	f003 021f 	and.w	r2, r3, #31
 8004b92:	f04f 0a01 	mov.w	sl, #1
 8004b96:	f859 1021 	ldr.w	r1, [r9, r1, lsl #2]
 8004b9a:	fa0a f202 	lsl.w	r2, sl, r2
 8004b9e:	420a      	tst	r2, r1
 8004ba0:	d003      	beq.n	8004baa <__gethex+0x1c4>
 8004ba2:	4553      	cmp	r3, sl
 8004ba4:	dc46      	bgt.n	8004c34 <__gethex+0x24e>
 8004ba6:	f04f 0a02 	mov.w	sl, #2
 8004baa:	4639      	mov	r1, r7
 8004bac:	4628      	mov	r0, r5
 8004bae:	f7ff fecb 	bl	8004948 <rshift>
 8004bb2:	443c      	add	r4, r7
 8004bb4:	f8d8 3008 	ldr.w	r3, [r8, #8]
 8004bb8:	42a3      	cmp	r3, r4
 8004bba:	da52      	bge.n	8004c62 <__gethex+0x27c>
 8004bbc:	4629      	mov	r1, r5
 8004bbe:	9802      	ldr	r0, [sp, #8]
 8004bc0:	f000 fab9 	bl	8005136 <_Bfree>
 8004bc4:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8004bc6:	2300      	movs	r3, #0
 8004bc8:	6013      	str	r3, [r2, #0]
 8004bca:	27a3      	movs	r7, #163	; 0xa3
 8004bcc:	e793      	b.n	8004af6 <__gethex+0x110>
 8004bce:	3101      	adds	r1, #1
 8004bd0:	105b      	asrs	r3, r3, #1
 8004bd2:	e7b0      	b.n	8004b36 <__gethex+0x150>
 8004bd4:	1e73      	subs	r3, r6, #1
 8004bd6:	9305      	str	r3, [sp, #20]
 8004bd8:	9a07      	ldr	r2, [sp, #28]
 8004bda:	f816 3c01 	ldrb.w	r3, [r6, #-1]
 8004bde:	4293      	cmp	r3, r2
 8004be0:	d018      	beq.n	8004c14 <__gethex+0x22e>
 8004be2:	f1bb 0f20 	cmp.w	fp, #32
 8004be6:	d107      	bne.n	8004bf8 <__gethex+0x212>
 8004be8:	9b04      	ldr	r3, [sp, #16]
 8004bea:	f8c3 a000 	str.w	sl, [r3]
 8004bee:	3304      	adds	r3, #4
 8004bf0:	f04f 0a00 	mov.w	sl, #0
 8004bf4:	9304      	str	r3, [sp, #16]
 8004bf6:	46d3      	mov	fp, sl
 8004bf8:	f816 0c01 	ldrb.w	r0, [r6, #-1]
 8004bfc:	f7ff fede 	bl	80049bc <__hexdig_fun>
 8004c00:	f000 000f 	and.w	r0, r0, #15
 8004c04:	fa00 f00b 	lsl.w	r0, r0, fp
 8004c08:	ea4a 0a00 	orr.w	sl, sl, r0
 8004c0c:	f10b 0b04 	add.w	fp, fp, #4
 8004c10:	9b05      	ldr	r3, [sp, #20]
 8004c12:	e00d      	b.n	8004c30 <__gethex+0x24a>
 8004c14:	9b05      	ldr	r3, [sp, #20]
 8004c16:	9a08      	ldr	r2, [sp, #32]
 8004c18:	4413      	add	r3, r2
 8004c1a:	42bb      	cmp	r3, r7
 8004c1c:	d3e1      	bcc.n	8004be2 <__gethex+0x1fc>
 8004c1e:	4618      	mov	r0, r3
 8004c20:	9a01      	ldr	r2, [sp, #4]
 8004c22:	9903      	ldr	r1, [sp, #12]
 8004c24:	9309      	str	r3, [sp, #36]	; 0x24
 8004c26:	f001 f9e4 	bl	8005ff2 <strncmp>
 8004c2a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004c2c:	2800      	cmp	r0, #0
 8004c2e:	d1d8      	bne.n	8004be2 <__gethex+0x1fc>
 8004c30:	461e      	mov	r6, r3
 8004c32:	e791      	b.n	8004b58 <__gethex+0x172>
 8004c34:	1eb9      	subs	r1, r7, #2
 8004c36:	4628      	mov	r0, r5
 8004c38:	f000 fe21 	bl	800587e <__any_on>
 8004c3c:	2800      	cmp	r0, #0
 8004c3e:	d0b2      	beq.n	8004ba6 <__gethex+0x1c0>
 8004c40:	f04f 0a03 	mov.w	sl, #3
 8004c44:	e7b1      	b.n	8004baa <__gethex+0x1c4>
 8004c46:	da09      	bge.n	8004c5c <__gethex+0x276>
 8004c48:	1bf7      	subs	r7, r6, r7
 8004c4a:	4629      	mov	r1, r5
 8004c4c:	463a      	mov	r2, r7
 8004c4e:	9802      	ldr	r0, [sp, #8]
 8004c50:	f000 fc3c 	bl	80054cc <__lshift>
 8004c54:	1be4      	subs	r4, r4, r7
 8004c56:	4605      	mov	r5, r0
 8004c58:	f100 0914 	add.w	r9, r0, #20
 8004c5c:	f04f 0a00 	mov.w	sl, #0
 8004c60:	e7a8      	b.n	8004bb4 <__gethex+0x1ce>
 8004c62:	f8d8 0004 	ldr.w	r0, [r8, #4]
 8004c66:	42a0      	cmp	r0, r4
 8004c68:	dd6a      	ble.n	8004d40 <__gethex+0x35a>
 8004c6a:	1b04      	subs	r4, r0, r4
 8004c6c:	42a6      	cmp	r6, r4
 8004c6e:	dc2e      	bgt.n	8004cce <__gethex+0x2e8>
 8004c70:	f8d8 300c 	ldr.w	r3, [r8, #12]
 8004c74:	2b02      	cmp	r3, #2
 8004c76:	d022      	beq.n	8004cbe <__gethex+0x2d8>
 8004c78:	2b03      	cmp	r3, #3
 8004c7a:	d024      	beq.n	8004cc6 <__gethex+0x2e0>
 8004c7c:	2b01      	cmp	r3, #1
 8004c7e:	d115      	bne.n	8004cac <__gethex+0x2c6>
 8004c80:	42a6      	cmp	r6, r4
 8004c82:	d113      	bne.n	8004cac <__gethex+0x2c6>
 8004c84:	2e01      	cmp	r6, #1
 8004c86:	dc0b      	bgt.n	8004ca0 <__gethex+0x2ba>
 8004c88:	9a06      	ldr	r2, [sp, #24]
 8004c8a:	f8d8 3004 	ldr.w	r3, [r8, #4]
 8004c8e:	6013      	str	r3, [r2, #0]
 8004c90:	2301      	movs	r3, #1
 8004c92:	612b      	str	r3, [r5, #16]
 8004c94:	f8c9 3000 	str.w	r3, [r9]
 8004c98:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8004c9a:	2762      	movs	r7, #98	; 0x62
 8004c9c:	601d      	str	r5, [r3, #0]
 8004c9e:	e72a      	b.n	8004af6 <__gethex+0x110>
 8004ca0:	1e71      	subs	r1, r6, #1
 8004ca2:	4628      	mov	r0, r5
 8004ca4:	f000 fdeb 	bl	800587e <__any_on>
 8004ca8:	2800      	cmp	r0, #0
 8004caa:	d1ed      	bne.n	8004c88 <__gethex+0x2a2>
 8004cac:	4629      	mov	r1, r5
 8004cae:	9802      	ldr	r0, [sp, #8]
 8004cb0:	f000 fa41 	bl	8005136 <_Bfree>
 8004cb4:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8004cb6:	2300      	movs	r3, #0
 8004cb8:	6013      	str	r3, [r2, #0]
 8004cba:	2750      	movs	r7, #80	; 0x50
 8004cbc:	e71b      	b.n	8004af6 <__gethex+0x110>
 8004cbe:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8004cc0:	2b00      	cmp	r3, #0
 8004cc2:	d0e1      	beq.n	8004c88 <__gethex+0x2a2>
 8004cc4:	e7f2      	b.n	8004cac <__gethex+0x2c6>
 8004cc6:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8004cc8:	2b00      	cmp	r3, #0
 8004cca:	d1dd      	bne.n	8004c88 <__gethex+0x2a2>
 8004ccc:	e7ee      	b.n	8004cac <__gethex+0x2c6>
 8004cce:	1e67      	subs	r7, r4, #1
 8004cd0:	f1ba 0f00 	cmp.w	sl, #0
 8004cd4:	d131      	bne.n	8004d3a <__gethex+0x354>
 8004cd6:	b127      	cbz	r7, 8004ce2 <__gethex+0x2fc>
 8004cd8:	4639      	mov	r1, r7
 8004cda:	4628      	mov	r0, r5
 8004cdc:	f000 fdcf 	bl	800587e <__any_on>
 8004ce0:	4682      	mov	sl, r0
 8004ce2:	117a      	asrs	r2, r7, #5
 8004ce4:	2301      	movs	r3, #1
 8004ce6:	f007 071f 	and.w	r7, r7, #31
 8004cea:	fa03 f707 	lsl.w	r7, r3, r7
 8004cee:	f859 3022 	ldr.w	r3, [r9, r2, lsl #2]
 8004cf2:	4621      	mov	r1, r4
 8004cf4:	421f      	tst	r7, r3
 8004cf6:	4628      	mov	r0, r5
 8004cf8:	bf18      	it	ne
 8004cfa:	f04a 0a02 	orrne.w	sl, sl, #2
 8004cfe:	1b36      	subs	r6, r6, r4
 8004d00:	f7ff fe22 	bl	8004948 <rshift>
 8004d04:	f8d8 4004 	ldr.w	r4, [r8, #4]
 8004d08:	2702      	movs	r7, #2
 8004d0a:	f1ba 0f00 	cmp.w	sl, #0
 8004d0e:	d048      	beq.n	8004da2 <__gethex+0x3bc>
 8004d10:	f8d8 300c 	ldr.w	r3, [r8, #12]
 8004d14:	2b02      	cmp	r3, #2
 8004d16:	d015      	beq.n	8004d44 <__gethex+0x35e>
 8004d18:	2b03      	cmp	r3, #3
 8004d1a:	d017      	beq.n	8004d4c <__gethex+0x366>
 8004d1c:	2b01      	cmp	r3, #1
 8004d1e:	d109      	bne.n	8004d34 <__gethex+0x34e>
 8004d20:	f01a 0f02 	tst.w	sl, #2
 8004d24:	d006      	beq.n	8004d34 <__gethex+0x34e>
 8004d26:	f8d9 3000 	ldr.w	r3, [r9]
 8004d2a:	ea4a 0a03 	orr.w	sl, sl, r3
 8004d2e:	f01a 0f01 	tst.w	sl, #1
 8004d32:	d10e      	bne.n	8004d52 <__gethex+0x36c>
 8004d34:	f047 0710 	orr.w	r7, r7, #16
 8004d38:	e033      	b.n	8004da2 <__gethex+0x3bc>
 8004d3a:	f04f 0a01 	mov.w	sl, #1
 8004d3e:	e7d0      	b.n	8004ce2 <__gethex+0x2fc>
 8004d40:	2701      	movs	r7, #1
 8004d42:	e7e2      	b.n	8004d0a <__gethex+0x324>
 8004d44:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8004d46:	f1c3 0301 	rsb	r3, r3, #1
 8004d4a:	9315      	str	r3, [sp, #84]	; 0x54
 8004d4c:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8004d4e:	2b00      	cmp	r3, #0
 8004d50:	d0f0      	beq.n	8004d34 <__gethex+0x34e>
 8004d52:	f8d5 9010 	ldr.w	r9, [r5, #16]
 8004d56:	f105 0314 	add.w	r3, r5, #20
 8004d5a:	ea4f 0a89 	mov.w	sl, r9, lsl #2
 8004d5e:	eb03 010a 	add.w	r1, r3, sl
 8004d62:	f04f 0c00 	mov.w	ip, #0
 8004d66:	4618      	mov	r0, r3
 8004d68:	f853 2b04 	ldr.w	r2, [r3], #4
 8004d6c:	f1b2 3fff 	cmp.w	r2, #4294967295
 8004d70:	d01c      	beq.n	8004dac <__gethex+0x3c6>
 8004d72:	3201      	adds	r2, #1
 8004d74:	6002      	str	r2, [r0, #0]
 8004d76:	2f02      	cmp	r7, #2
 8004d78:	f105 0314 	add.w	r3, r5, #20
 8004d7c:	d138      	bne.n	8004df0 <__gethex+0x40a>
 8004d7e:	f8d8 2000 	ldr.w	r2, [r8]
 8004d82:	3a01      	subs	r2, #1
 8004d84:	42b2      	cmp	r2, r6
 8004d86:	d10a      	bne.n	8004d9e <__gethex+0x3b8>
 8004d88:	1171      	asrs	r1, r6, #5
 8004d8a:	2201      	movs	r2, #1
 8004d8c:	f006 061f 	and.w	r6, r6, #31
 8004d90:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 8004d94:	fa02 f606 	lsl.w	r6, r2, r6
 8004d98:	421e      	tst	r6, r3
 8004d9a:	bf18      	it	ne
 8004d9c:	4617      	movne	r7, r2
 8004d9e:	f047 0720 	orr.w	r7, r7, #32
 8004da2:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8004da4:	601d      	str	r5, [r3, #0]
 8004da6:	9b06      	ldr	r3, [sp, #24]
 8004da8:	601c      	str	r4, [r3, #0]
 8004daa:	e6a4      	b.n	8004af6 <__gethex+0x110>
 8004dac:	4299      	cmp	r1, r3
 8004dae:	f843 cc04 	str.w	ip, [r3, #-4]
 8004db2:	d8d8      	bhi.n	8004d66 <__gethex+0x380>
 8004db4:	68ab      	ldr	r3, [r5, #8]
 8004db6:	4599      	cmp	r9, r3
 8004db8:	db12      	blt.n	8004de0 <__gethex+0x3fa>
 8004dba:	6869      	ldr	r1, [r5, #4]
 8004dbc:	9802      	ldr	r0, [sp, #8]
 8004dbe:	3101      	adds	r1, #1
 8004dc0:	f000 f985 	bl	80050ce <_Balloc>
 8004dc4:	692a      	ldr	r2, [r5, #16]
 8004dc6:	3202      	adds	r2, #2
 8004dc8:	f105 010c 	add.w	r1, r5, #12
 8004dcc:	4683      	mov	fp, r0
 8004dce:	0092      	lsls	r2, r2, #2
 8004dd0:	300c      	adds	r0, #12
 8004dd2:	f000 f971 	bl	80050b8 <memcpy>
 8004dd6:	4629      	mov	r1, r5
 8004dd8:	9802      	ldr	r0, [sp, #8]
 8004dda:	f000 f9ac 	bl	8005136 <_Bfree>
 8004dde:	465d      	mov	r5, fp
 8004de0:	692b      	ldr	r3, [r5, #16]
 8004de2:	1c5a      	adds	r2, r3, #1
 8004de4:	eb05 0383 	add.w	r3, r5, r3, lsl #2
 8004de8:	612a      	str	r2, [r5, #16]
 8004dea:	2201      	movs	r2, #1
 8004dec:	615a      	str	r2, [r3, #20]
 8004dee:	e7c2      	b.n	8004d76 <__gethex+0x390>
 8004df0:	692a      	ldr	r2, [r5, #16]
 8004df2:	454a      	cmp	r2, r9
 8004df4:	dd0b      	ble.n	8004e0e <__gethex+0x428>
 8004df6:	2101      	movs	r1, #1
 8004df8:	4628      	mov	r0, r5
 8004dfa:	f7ff fda5 	bl	8004948 <rshift>
 8004dfe:	f8d8 3008 	ldr.w	r3, [r8, #8]
 8004e02:	3401      	adds	r4, #1
 8004e04:	42a3      	cmp	r3, r4
 8004e06:	f6ff aed9 	blt.w	8004bbc <__gethex+0x1d6>
 8004e0a:	2701      	movs	r7, #1
 8004e0c:	e7c7      	b.n	8004d9e <__gethex+0x3b8>
 8004e0e:	f016 061f 	ands.w	r6, r6, #31
 8004e12:	d0fa      	beq.n	8004e0a <__gethex+0x424>
 8004e14:	449a      	add	sl, r3
 8004e16:	f1c6 0620 	rsb	r6, r6, #32
 8004e1a:	f85a 0c04 	ldr.w	r0, [sl, #-4]
 8004e1e:	f000 fa1a 	bl	8005256 <__hi0bits>
 8004e22:	42b0      	cmp	r0, r6
 8004e24:	dbe7      	blt.n	8004df6 <__gethex+0x410>
 8004e26:	e7f0      	b.n	8004e0a <__gethex+0x424>

08004e28 <L_shift>:
 8004e28:	f1c2 0208 	rsb	r2, r2, #8
 8004e2c:	0092      	lsls	r2, r2, #2
 8004e2e:	b570      	push	{r4, r5, r6, lr}
 8004e30:	f1c2 0620 	rsb	r6, r2, #32
 8004e34:	6843      	ldr	r3, [r0, #4]
 8004e36:	6804      	ldr	r4, [r0, #0]
 8004e38:	fa03 f506 	lsl.w	r5, r3, r6
 8004e3c:	432c      	orrs	r4, r5
 8004e3e:	40d3      	lsrs	r3, r2
 8004e40:	6004      	str	r4, [r0, #0]
 8004e42:	f840 3f04 	str.w	r3, [r0, #4]!
 8004e46:	4288      	cmp	r0, r1
 8004e48:	d3f4      	bcc.n	8004e34 <L_shift+0xc>
 8004e4a:	bd70      	pop	{r4, r5, r6, pc}

08004e4c <__match>:
 8004e4c:	b530      	push	{r4, r5, lr}
 8004e4e:	6803      	ldr	r3, [r0, #0]
 8004e50:	3301      	adds	r3, #1
 8004e52:	f811 4b01 	ldrb.w	r4, [r1], #1
 8004e56:	b914      	cbnz	r4, 8004e5e <__match+0x12>
 8004e58:	6003      	str	r3, [r0, #0]
 8004e5a:	2001      	movs	r0, #1
 8004e5c:	bd30      	pop	{r4, r5, pc}
 8004e5e:	f813 2b01 	ldrb.w	r2, [r3], #1
 8004e62:	f1a2 0541 	sub.w	r5, r2, #65	; 0x41
 8004e66:	2d19      	cmp	r5, #25
 8004e68:	bf98      	it	ls
 8004e6a:	3220      	addls	r2, #32
 8004e6c:	42a2      	cmp	r2, r4
 8004e6e:	d0f0      	beq.n	8004e52 <__match+0x6>
 8004e70:	2000      	movs	r0, #0
 8004e72:	e7f3      	b.n	8004e5c <__match+0x10>

08004e74 <__hexnan>:
 8004e74:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004e78:	680b      	ldr	r3, [r1, #0]
 8004e7a:	6801      	ldr	r1, [r0, #0]
 8004e7c:	115f      	asrs	r7, r3, #5
 8004e7e:	eb02 0787 	add.w	r7, r2, r7, lsl #2
 8004e82:	f013 031f 	ands.w	r3, r3, #31
 8004e86:	b087      	sub	sp, #28
 8004e88:	bf18      	it	ne
 8004e8a:	3704      	addne	r7, #4
 8004e8c:	2500      	movs	r5, #0
 8004e8e:	1f3e      	subs	r6, r7, #4
 8004e90:	4682      	mov	sl, r0
 8004e92:	4690      	mov	r8, r2
 8004e94:	9301      	str	r3, [sp, #4]
 8004e96:	f847 5c04 	str.w	r5, [r7, #-4]
 8004e9a:	46b1      	mov	r9, r6
 8004e9c:	4634      	mov	r4, r6
 8004e9e:	9502      	str	r5, [sp, #8]
 8004ea0:	46ab      	mov	fp, r5
 8004ea2:	784a      	ldrb	r2, [r1, #1]
 8004ea4:	1c4b      	adds	r3, r1, #1
 8004ea6:	9303      	str	r3, [sp, #12]
 8004ea8:	b342      	cbz	r2, 8004efc <__hexnan+0x88>
 8004eaa:	4610      	mov	r0, r2
 8004eac:	9105      	str	r1, [sp, #20]
 8004eae:	9204      	str	r2, [sp, #16]
 8004eb0:	f7ff fd84 	bl	80049bc <__hexdig_fun>
 8004eb4:	2800      	cmp	r0, #0
 8004eb6:	d143      	bne.n	8004f40 <__hexnan+0xcc>
 8004eb8:	9a04      	ldr	r2, [sp, #16]
 8004eba:	9905      	ldr	r1, [sp, #20]
 8004ebc:	2a20      	cmp	r2, #32
 8004ebe:	d818      	bhi.n	8004ef2 <__hexnan+0x7e>
 8004ec0:	9b02      	ldr	r3, [sp, #8]
 8004ec2:	459b      	cmp	fp, r3
 8004ec4:	dd13      	ble.n	8004eee <__hexnan+0x7a>
 8004ec6:	454c      	cmp	r4, r9
 8004ec8:	d206      	bcs.n	8004ed8 <__hexnan+0x64>
 8004eca:	2d07      	cmp	r5, #7
 8004ecc:	dc04      	bgt.n	8004ed8 <__hexnan+0x64>
 8004ece:	462a      	mov	r2, r5
 8004ed0:	4649      	mov	r1, r9
 8004ed2:	4620      	mov	r0, r4
 8004ed4:	f7ff ffa8 	bl	8004e28 <L_shift>
 8004ed8:	4544      	cmp	r4, r8
 8004eda:	d944      	bls.n	8004f66 <__hexnan+0xf2>
 8004edc:	2300      	movs	r3, #0
 8004ede:	f1a4 0904 	sub.w	r9, r4, #4
 8004ee2:	f844 3c04 	str.w	r3, [r4, #-4]
 8004ee6:	f8cd b008 	str.w	fp, [sp, #8]
 8004eea:	464c      	mov	r4, r9
 8004eec:	461d      	mov	r5, r3
 8004eee:	9903      	ldr	r1, [sp, #12]
 8004ef0:	e7d7      	b.n	8004ea2 <__hexnan+0x2e>
 8004ef2:	2a29      	cmp	r2, #41	; 0x29
 8004ef4:	d14a      	bne.n	8004f8c <__hexnan+0x118>
 8004ef6:	3102      	adds	r1, #2
 8004ef8:	f8ca 1000 	str.w	r1, [sl]
 8004efc:	f1bb 0f00 	cmp.w	fp, #0
 8004f00:	d044      	beq.n	8004f8c <__hexnan+0x118>
 8004f02:	454c      	cmp	r4, r9
 8004f04:	d206      	bcs.n	8004f14 <__hexnan+0xa0>
 8004f06:	2d07      	cmp	r5, #7
 8004f08:	dc04      	bgt.n	8004f14 <__hexnan+0xa0>
 8004f0a:	462a      	mov	r2, r5
 8004f0c:	4649      	mov	r1, r9
 8004f0e:	4620      	mov	r0, r4
 8004f10:	f7ff ff8a 	bl	8004e28 <L_shift>
 8004f14:	4544      	cmp	r4, r8
 8004f16:	d928      	bls.n	8004f6a <__hexnan+0xf6>
 8004f18:	4643      	mov	r3, r8
 8004f1a:	f854 2b04 	ldr.w	r2, [r4], #4
 8004f1e:	f843 2b04 	str.w	r2, [r3], #4
 8004f22:	42a6      	cmp	r6, r4
 8004f24:	d2f9      	bcs.n	8004f1a <__hexnan+0xa6>
 8004f26:	2200      	movs	r2, #0
 8004f28:	f843 2b04 	str.w	r2, [r3], #4
 8004f2c:	429e      	cmp	r6, r3
 8004f2e:	d2fb      	bcs.n	8004f28 <__hexnan+0xb4>
 8004f30:	6833      	ldr	r3, [r6, #0]
 8004f32:	b91b      	cbnz	r3, 8004f3c <__hexnan+0xc8>
 8004f34:	4546      	cmp	r6, r8
 8004f36:	d127      	bne.n	8004f88 <__hexnan+0x114>
 8004f38:	2301      	movs	r3, #1
 8004f3a:	6033      	str	r3, [r6, #0]
 8004f3c:	2005      	movs	r0, #5
 8004f3e:	e026      	b.n	8004f8e <__hexnan+0x11a>
 8004f40:	3501      	adds	r5, #1
 8004f42:	2d08      	cmp	r5, #8
 8004f44:	f10b 0b01 	add.w	fp, fp, #1
 8004f48:	dd06      	ble.n	8004f58 <__hexnan+0xe4>
 8004f4a:	4544      	cmp	r4, r8
 8004f4c:	d9cf      	bls.n	8004eee <__hexnan+0x7a>
 8004f4e:	2300      	movs	r3, #0
 8004f50:	f844 3c04 	str.w	r3, [r4, #-4]
 8004f54:	2501      	movs	r5, #1
 8004f56:	3c04      	subs	r4, #4
 8004f58:	6822      	ldr	r2, [r4, #0]
 8004f5a:	f000 000f 	and.w	r0, r0, #15
 8004f5e:	ea40 1002 	orr.w	r0, r0, r2, lsl #4
 8004f62:	6020      	str	r0, [r4, #0]
 8004f64:	e7c3      	b.n	8004eee <__hexnan+0x7a>
 8004f66:	2508      	movs	r5, #8
 8004f68:	e7c1      	b.n	8004eee <__hexnan+0x7a>
 8004f6a:	9b01      	ldr	r3, [sp, #4]
 8004f6c:	2b00      	cmp	r3, #0
 8004f6e:	d0df      	beq.n	8004f30 <__hexnan+0xbc>
 8004f70:	f04f 32ff 	mov.w	r2, #4294967295
 8004f74:	f1c3 0320 	rsb	r3, r3, #32
 8004f78:	fa22 f303 	lsr.w	r3, r2, r3
 8004f7c:	f857 2c04 	ldr.w	r2, [r7, #-4]
 8004f80:	401a      	ands	r2, r3
 8004f82:	f847 2c04 	str.w	r2, [r7, #-4]
 8004f86:	e7d3      	b.n	8004f30 <__hexnan+0xbc>
 8004f88:	3e04      	subs	r6, #4
 8004f8a:	e7d1      	b.n	8004f30 <__hexnan+0xbc>
 8004f8c:	2004      	movs	r0, #4
 8004f8e:	b007      	add	sp, #28
 8004f90:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08004f94 <__locale_ctype_ptr_l>:
 8004f94:	f8d0 00ec 	ldr.w	r0, [r0, #236]	; 0xec
 8004f98:	4770      	bx	lr

08004f9a <__localeconv_l>:
 8004f9a:	30f0      	adds	r0, #240	; 0xf0
 8004f9c:	4770      	bx	lr
	...

08004fa0 <_localeconv_r>:
 8004fa0:	4b04      	ldr	r3, [pc, #16]	; (8004fb4 <_localeconv_r+0x14>)
 8004fa2:	681b      	ldr	r3, [r3, #0]
 8004fa4:	6a18      	ldr	r0, [r3, #32]
 8004fa6:	4b04      	ldr	r3, [pc, #16]	; (8004fb8 <_localeconv_r+0x18>)
 8004fa8:	2800      	cmp	r0, #0
 8004faa:	bf08      	it	eq
 8004fac:	4618      	moveq	r0, r3
 8004fae:	30f0      	adds	r0, #240	; 0xf0
 8004fb0:	4770      	bx	lr
 8004fb2:	bf00      	nop
 8004fb4:	20000014 	.word	0x20000014
 8004fb8:	20000078 	.word	0x20000078

08004fbc <__swhatbuf_r>:
 8004fbc:	b570      	push	{r4, r5, r6, lr}
 8004fbe:	460e      	mov	r6, r1
 8004fc0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8004fc4:	2900      	cmp	r1, #0
 8004fc6:	b096      	sub	sp, #88	; 0x58
 8004fc8:	4614      	mov	r4, r2
 8004fca:	461d      	mov	r5, r3
 8004fcc:	da07      	bge.n	8004fde <__swhatbuf_r+0x22>
 8004fce:	2300      	movs	r3, #0
 8004fd0:	602b      	str	r3, [r5, #0]
 8004fd2:	89b3      	ldrh	r3, [r6, #12]
 8004fd4:	061a      	lsls	r2, r3, #24
 8004fd6:	d410      	bmi.n	8004ffa <__swhatbuf_r+0x3e>
 8004fd8:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8004fdc:	e00e      	b.n	8004ffc <__swhatbuf_r+0x40>
 8004fde:	466a      	mov	r2, sp
 8004fe0:	f001 f848 	bl	8006074 <_fstat_r>
 8004fe4:	2800      	cmp	r0, #0
 8004fe6:	dbf2      	blt.n	8004fce <__swhatbuf_r+0x12>
 8004fe8:	9a01      	ldr	r2, [sp, #4]
 8004fea:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8004fee:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8004ff2:	425a      	negs	r2, r3
 8004ff4:	415a      	adcs	r2, r3
 8004ff6:	602a      	str	r2, [r5, #0]
 8004ff8:	e7ee      	b.n	8004fd8 <__swhatbuf_r+0x1c>
 8004ffa:	2340      	movs	r3, #64	; 0x40
 8004ffc:	2000      	movs	r0, #0
 8004ffe:	6023      	str	r3, [r4, #0]
 8005000:	b016      	add	sp, #88	; 0x58
 8005002:	bd70      	pop	{r4, r5, r6, pc}

08005004 <__smakebuf_r>:
 8005004:	898b      	ldrh	r3, [r1, #12]
 8005006:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8005008:	079d      	lsls	r5, r3, #30
 800500a:	4606      	mov	r6, r0
 800500c:	460c      	mov	r4, r1
 800500e:	d507      	bpl.n	8005020 <__smakebuf_r+0x1c>
 8005010:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8005014:	6023      	str	r3, [r4, #0]
 8005016:	6123      	str	r3, [r4, #16]
 8005018:	2301      	movs	r3, #1
 800501a:	6163      	str	r3, [r4, #20]
 800501c:	b002      	add	sp, #8
 800501e:	bd70      	pop	{r4, r5, r6, pc}
 8005020:	ab01      	add	r3, sp, #4
 8005022:	466a      	mov	r2, sp
 8005024:	f7ff ffca 	bl	8004fbc <__swhatbuf_r>
 8005028:	9900      	ldr	r1, [sp, #0]
 800502a:	4605      	mov	r5, r0
 800502c:	4630      	mov	r0, r6
 800502e:	f000 fca3 	bl	8005978 <_malloc_r>
 8005032:	b948      	cbnz	r0, 8005048 <__smakebuf_r+0x44>
 8005034:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8005038:	059a      	lsls	r2, r3, #22
 800503a:	d4ef      	bmi.n	800501c <__smakebuf_r+0x18>
 800503c:	f023 0303 	bic.w	r3, r3, #3
 8005040:	f043 0302 	orr.w	r3, r3, #2
 8005044:	81a3      	strh	r3, [r4, #12]
 8005046:	e7e3      	b.n	8005010 <__smakebuf_r+0xc>
 8005048:	4b0d      	ldr	r3, [pc, #52]	; (8005080 <__smakebuf_r+0x7c>)
 800504a:	62b3      	str	r3, [r6, #40]	; 0x28
 800504c:	89a3      	ldrh	r3, [r4, #12]
 800504e:	6020      	str	r0, [r4, #0]
 8005050:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8005054:	81a3      	strh	r3, [r4, #12]
 8005056:	9b00      	ldr	r3, [sp, #0]
 8005058:	6163      	str	r3, [r4, #20]
 800505a:	9b01      	ldr	r3, [sp, #4]
 800505c:	6120      	str	r0, [r4, #16]
 800505e:	b15b      	cbz	r3, 8005078 <__smakebuf_r+0x74>
 8005060:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8005064:	4630      	mov	r0, r6
 8005066:	f001 f817 	bl	8006098 <_isatty_r>
 800506a:	b128      	cbz	r0, 8005078 <__smakebuf_r+0x74>
 800506c:	89a3      	ldrh	r3, [r4, #12]
 800506e:	f023 0303 	bic.w	r3, r3, #3
 8005072:	f043 0301 	orr.w	r3, r3, #1
 8005076:	81a3      	strh	r3, [r4, #12]
 8005078:	89a3      	ldrh	r3, [r4, #12]
 800507a:	431d      	orrs	r5, r3
 800507c:	81a5      	strh	r5, [r4, #12]
 800507e:	e7cd      	b.n	800501c <__smakebuf_r+0x18>
 8005080:	080047fd 	.word	0x080047fd

08005084 <malloc>:
 8005084:	4b02      	ldr	r3, [pc, #8]	; (8005090 <malloc+0xc>)
 8005086:	4601      	mov	r1, r0
 8005088:	6818      	ldr	r0, [r3, #0]
 800508a:	f000 bc75 	b.w	8005978 <_malloc_r>
 800508e:	bf00      	nop
 8005090:	20000014 	.word	0x20000014

08005094 <__ascii_mbtowc>:
 8005094:	b082      	sub	sp, #8
 8005096:	b901      	cbnz	r1, 800509a <__ascii_mbtowc+0x6>
 8005098:	a901      	add	r1, sp, #4
 800509a:	b142      	cbz	r2, 80050ae <__ascii_mbtowc+0x1a>
 800509c:	b14b      	cbz	r3, 80050b2 <__ascii_mbtowc+0x1e>
 800509e:	7813      	ldrb	r3, [r2, #0]
 80050a0:	600b      	str	r3, [r1, #0]
 80050a2:	7812      	ldrb	r2, [r2, #0]
 80050a4:	1c10      	adds	r0, r2, #0
 80050a6:	bf18      	it	ne
 80050a8:	2001      	movne	r0, #1
 80050aa:	b002      	add	sp, #8
 80050ac:	4770      	bx	lr
 80050ae:	4610      	mov	r0, r2
 80050b0:	e7fb      	b.n	80050aa <__ascii_mbtowc+0x16>
 80050b2:	f06f 0001 	mvn.w	r0, #1
 80050b6:	e7f8      	b.n	80050aa <__ascii_mbtowc+0x16>

080050b8 <memcpy>:
 80050b8:	b510      	push	{r4, lr}
 80050ba:	1e43      	subs	r3, r0, #1
 80050bc:	440a      	add	r2, r1
 80050be:	4291      	cmp	r1, r2
 80050c0:	d100      	bne.n	80050c4 <memcpy+0xc>
 80050c2:	bd10      	pop	{r4, pc}
 80050c4:	f811 4b01 	ldrb.w	r4, [r1], #1
 80050c8:	f803 4f01 	strb.w	r4, [r3, #1]!
 80050cc:	e7f7      	b.n	80050be <memcpy+0x6>

080050ce <_Balloc>:
 80050ce:	b570      	push	{r4, r5, r6, lr}
 80050d0:	6a45      	ldr	r5, [r0, #36]	; 0x24
 80050d2:	4604      	mov	r4, r0
 80050d4:	460e      	mov	r6, r1
 80050d6:	b93d      	cbnz	r5, 80050e8 <_Balloc+0x1a>
 80050d8:	2010      	movs	r0, #16
 80050da:	f7ff ffd3 	bl	8005084 <malloc>
 80050de:	6260      	str	r0, [r4, #36]	; 0x24
 80050e0:	e9c0 5501 	strd	r5, r5, [r0, #4]
 80050e4:	6005      	str	r5, [r0, #0]
 80050e6:	60c5      	str	r5, [r0, #12]
 80050e8:	6a65      	ldr	r5, [r4, #36]	; 0x24
 80050ea:	68eb      	ldr	r3, [r5, #12]
 80050ec:	b183      	cbz	r3, 8005110 <_Balloc+0x42>
 80050ee:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80050f0:	68db      	ldr	r3, [r3, #12]
 80050f2:	f853 0026 	ldr.w	r0, [r3, r6, lsl #2]
 80050f6:	b9b8      	cbnz	r0, 8005128 <_Balloc+0x5a>
 80050f8:	2101      	movs	r1, #1
 80050fa:	fa01 f506 	lsl.w	r5, r1, r6
 80050fe:	1d6a      	adds	r2, r5, #5
 8005100:	0092      	lsls	r2, r2, #2
 8005102:	4620      	mov	r0, r4
 8005104:	f000 fbdc 	bl	80058c0 <_calloc_r>
 8005108:	b160      	cbz	r0, 8005124 <_Balloc+0x56>
 800510a:	e9c0 6501 	strd	r6, r5, [r0, #4]
 800510e:	e00e      	b.n	800512e <_Balloc+0x60>
 8005110:	2221      	movs	r2, #33	; 0x21
 8005112:	2104      	movs	r1, #4
 8005114:	4620      	mov	r0, r4
 8005116:	f000 fbd3 	bl	80058c0 <_calloc_r>
 800511a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800511c:	60e8      	str	r0, [r5, #12]
 800511e:	68db      	ldr	r3, [r3, #12]
 8005120:	2b00      	cmp	r3, #0
 8005122:	d1e4      	bne.n	80050ee <_Balloc+0x20>
 8005124:	2000      	movs	r0, #0
 8005126:	bd70      	pop	{r4, r5, r6, pc}
 8005128:	6802      	ldr	r2, [r0, #0]
 800512a:	f843 2026 	str.w	r2, [r3, r6, lsl #2]
 800512e:	2300      	movs	r3, #0
 8005130:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8005134:	e7f7      	b.n	8005126 <_Balloc+0x58>

08005136 <_Bfree>:
 8005136:	b570      	push	{r4, r5, r6, lr}
 8005138:	6a44      	ldr	r4, [r0, #36]	; 0x24
 800513a:	4606      	mov	r6, r0
 800513c:	460d      	mov	r5, r1
 800513e:	b93c      	cbnz	r4, 8005150 <_Bfree+0x1a>
 8005140:	2010      	movs	r0, #16
 8005142:	f7ff ff9f 	bl	8005084 <malloc>
 8005146:	6270      	str	r0, [r6, #36]	; 0x24
 8005148:	e9c0 4401 	strd	r4, r4, [r0, #4]
 800514c:	6004      	str	r4, [r0, #0]
 800514e:	60c4      	str	r4, [r0, #12]
 8005150:	b13d      	cbz	r5, 8005162 <_Bfree+0x2c>
 8005152:	6a73      	ldr	r3, [r6, #36]	; 0x24
 8005154:	686a      	ldr	r2, [r5, #4]
 8005156:	68db      	ldr	r3, [r3, #12]
 8005158:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 800515c:	6029      	str	r1, [r5, #0]
 800515e:	f843 5022 	str.w	r5, [r3, r2, lsl #2]
 8005162:	bd70      	pop	{r4, r5, r6, pc}

08005164 <__multadd>:
 8005164:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005168:	690d      	ldr	r5, [r1, #16]
 800516a:	461f      	mov	r7, r3
 800516c:	4606      	mov	r6, r0
 800516e:	460c      	mov	r4, r1
 8005170:	f101 0c14 	add.w	ip, r1, #20
 8005174:	2300      	movs	r3, #0
 8005176:	f8dc 0000 	ldr.w	r0, [ip]
 800517a:	b281      	uxth	r1, r0
 800517c:	fb02 7101 	mla	r1, r2, r1, r7
 8005180:	0c0f      	lsrs	r7, r1, #16
 8005182:	0c00      	lsrs	r0, r0, #16
 8005184:	fb02 7000 	mla	r0, r2, r0, r7
 8005188:	b289      	uxth	r1, r1
 800518a:	3301      	adds	r3, #1
 800518c:	eb01 4100 	add.w	r1, r1, r0, lsl #16
 8005190:	429d      	cmp	r5, r3
 8005192:	ea4f 4710 	mov.w	r7, r0, lsr #16
 8005196:	f84c 1b04 	str.w	r1, [ip], #4
 800519a:	dcec      	bgt.n	8005176 <__multadd+0x12>
 800519c:	b1d7      	cbz	r7, 80051d4 <__multadd+0x70>
 800519e:	68a3      	ldr	r3, [r4, #8]
 80051a0:	42ab      	cmp	r3, r5
 80051a2:	dc12      	bgt.n	80051ca <__multadd+0x66>
 80051a4:	6861      	ldr	r1, [r4, #4]
 80051a6:	4630      	mov	r0, r6
 80051a8:	3101      	adds	r1, #1
 80051aa:	f7ff ff90 	bl	80050ce <_Balloc>
 80051ae:	6922      	ldr	r2, [r4, #16]
 80051b0:	3202      	adds	r2, #2
 80051b2:	f104 010c 	add.w	r1, r4, #12
 80051b6:	4680      	mov	r8, r0
 80051b8:	0092      	lsls	r2, r2, #2
 80051ba:	300c      	adds	r0, #12
 80051bc:	f7ff ff7c 	bl	80050b8 <memcpy>
 80051c0:	4621      	mov	r1, r4
 80051c2:	4630      	mov	r0, r6
 80051c4:	f7ff ffb7 	bl	8005136 <_Bfree>
 80051c8:	4644      	mov	r4, r8
 80051ca:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 80051ce:	3501      	adds	r5, #1
 80051d0:	615f      	str	r7, [r3, #20]
 80051d2:	6125      	str	r5, [r4, #16]
 80051d4:	4620      	mov	r0, r4
 80051d6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080051da <__s2b>:
 80051da:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80051de:	460c      	mov	r4, r1
 80051e0:	4615      	mov	r5, r2
 80051e2:	461f      	mov	r7, r3
 80051e4:	2209      	movs	r2, #9
 80051e6:	3308      	adds	r3, #8
 80051e8:	4606      	mov	r6, r0
 80051ea:	fb93 f3f2 	sdiv	r3, r3, r2
 80051ee:	2100      	movs	r1, #0
 80051f0:	2201      	movs	r2, #1
 80051f2:	429a      	cmp	r2, r3
 80051f4:	db20      	blt.n	8005238 <__s2b+0x5e>
 80051f6:	4630      	mov	r0, r6
 80051f8:	f7ff ff69 	bl	80050ce <_Balloc>
 80051fc:	9b08      	ldr	r3, [sp, #32]
 80051fe:	6143      	str	r3, [r0, #20]
 8005200:	2d09      	cmp	r5, #9
 8005202:	f04f 0301 	mov.w	r3, #1
 8005206:	6103      	str	r3, [r0, #16]
 8005208:	dd19      	ble.n	800523e <__s2b+0x64>
 800520a:	f104 0809 	add.w	r8, r4, #9
 800520e:	46c1      	mov	r9, r8
 8005210:	442c      	add	r4, r5
 8005212:	f819 3b01 	ldrb.w	r3, [r9], #1
 8005216:	4601      	mov	r1, r0
 8005218:	3b30      	subs	r3, #48	; 0x30
 800521a:	220a      	movs	r2, #10
 800521c:	4630      	mov	r0, r6
 800521e:	f7ff ffa1 	bl	8005164 <__multadd>
 8005222:	45a1      	cmp	r9, r4
 8005224:	d1f5      	bne.n	8005212 <__s2b+0x38>
 8005226:	eb08 0405 	add.w	r4, r8, r5
 800522a:	3c08      	subs	r4, #8
 800522c:	1b2d      	subs	r5, r5, r4
 800522e:	1963      	adds	r3, r4, r5
 8005230:	42bb      	cmp	r3, r7
 8005232:	db07      	blt.n	8005244 <__s2b+0x6a>
 8005234:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8005238:	0052      	lsls	r2, r2, #1
 800523a:	3101      	adds	r1, #1
 800523c:	e7d9      	b.n	80051f2 <__s2b+0x18>
 800523e:	340a      	adds	r4, #10
 8005240:	2509      	movs	r5, #9
 8005242:	e7f3      	b.n	800522c <__s2b+0x52>
 8005244:	f814 3b01 	ldrb.w	r3, [r4], #1
 8005248:	4601      	mov	r1, r0
 800524a:	3b30      	subs	r3, #48	; 0x30
 800524c:	220a      	movs	r2, #10
 800524e:	4630      	mov	r0, r6
 8005250:	f7ff ff88 	bl	8005164 <__multadd>
 8005254:	e7eb      	b.n	800522e <__s2b+0x54>

08005256 <__hi0bits>:
 8005256:	0c02      	lsrs	r2, r0, #16
 8005258:	0412      	lsls	r2, r2, #16
 800525a:	4603      	mov	r3, r0
 800525c:	b9b2      	cbnz	r2, 800528c <__hi0bits+0x36>
 800525e:	0403      	lsls	r3, r0, #16
 8005260:	2010      	movs	r0, #16
 8005262:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8005266:	bf04      	itt	eq
 8005268:	021b      	lsleq	r3, r3, #8
 800526a:	3008      	addeq	r0, #8
 800526c:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 8005270:	bf04      	itt	eq
 8005272:	011b      	lsleq	r3, r3, #4
 8005274:	3004      	addeq	r0, #4
 8005276:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 800527a:	bf04      	itt	eq
 800527c:	009b      	lsleq	r3, r3, #2
 800527e:	3002      	addeq	r0, #2
 8005280:	2b00      	cmp	r3, #0
 8005282:	db06      	blt.n	8005292 <__hi0bits+0x3c>
 8005284:	005b      	lsls	r3, r3, #1
 8005286:	d503      	bpl.n	8005290 <__hi0bits+0x3a>
 8005288:	3001      	adds	r0, #1
 800528a:	4770      	bx	lr
 800528c:	2000      	movs	r0, #0
 800528e:	e7e8      	b.n	8005262 <__hi0bits+0xc>
 8005290:	2020      	movs	r0, #32
 8005292:	4770      	bx	lr

08005294 <__lo0bits>:
 8005294:	6803      	ldr	r3, [r0, #0]
 8005296:	f013 0207 	ands.w	r2, r3, #7
 800529a:	4601      	mov	r1, r0
 800529c:	d00b      	beq.n	80052b6 <__lo0bits+0x22>
 800529e:	07da      	lsls	r2, r3, #31
 80052a0:	d423      	bmi.n	80052ea <__lo0bits+0x56>
 80052a2:	0798      	lsls	r0, r3, #30
 80052a4:	bf49      	itett	mi
 80052a6:	085b      	lsrmi	r3, r3, #1
 80052a8:	089b      	lsrpl	r3, r3, #2
 80052aa:	2001      	movmi	r0, #1
 80052ac:	600b      	strmi	r3, [r1, #0]
 80052ae:	bf5c      	itt	pl
 80052b0:	600b      	strpl	r3, [r1, #0]
 80052b2:	2002      	movpl	r0, #2
 80052b4:	4770      	bx	lr
 80052b6:	b298      	uxth	r0, r3
 80052b8:	b9a8      	cbnz	r0, 80052e6 <__lo0bits+0x52>
 80052ba:	0c1b      	lsrs	r3, r3, #16
 80052bc:	2010      	movs	r0, #16
 80052be:	f013 0fff 	tst.w	r3, #255	; 0xff
 80052c2:	bf04      	itt	eq
 80052c4:	0a1b      	lsreq	r3, r3, #8
 80052c6:	3008      	addeq	r0, #8
 80052c8:	071a      	lsls	r2, r3, #28
 80052ca:	bf04      	itt	eq
 80052cc:	091b      	lsreq	r3, r3, #4
 80052ce:	3004      	addeq	r0, #4
 80052d0:	079a      	lsls	r2, r3, #30
 80052d2:	bf04      	itt	eq
 80052d4:	089b      	lsreq	r3, r3, #2
 80052d6:	3002      	addeq	r0, #2
 80052d8:	07da      	lsls	r2, r3, #31
 80052da:	d402      	bmi.n	80052e2 <__lo0bits+0x4e>
 80052dc:	085b      	lsrs	r3, r3, #1
 80052de:	d006      	beq.n	80052ee <__lo0bits+0x5a>
 80052e0:	3001      	adds	r0, #1
 80052e2:	600b      	str	r3, [r1, #0]
 80052e4:	4770      	bx	lr
 80052e6:	4610      	mov	r0, r2
 80052e8:	e7e9      	b.n	80052be <__lo0bits+0x2a>
 80052ea:	2000      	movs	r0, #0
 80052ec:	4770      	bx	lr
 80052ee:	2020      	movs	r0, #32
 80052f0:	4770      	bx	lr

080052f2 <__i2b>:
 80052f2:	b510      	push	{r4, lr}
 80052f4:	460c      	mov	r4, r1
 80052f6:	2101      	movs	r1, #1
 80052f8:	f7ff fee9 	bl	80050ce <_Balloc>
 80052fc:	2201      	movs	r2, #1
 80052fe:	6144      	str	r4, [r0, #20]
 8005300:	6102      	str	r2, [r0, #16]
 8005302:	bd10      	pop	{r4, pc}

08005304 <__multiply>:
 8005304:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005308:	4614      	mov	r4, r2
 800530a:	690a      	ldr	r2, [r1, #16]
 800530c:	6923      	ldr	r3, [r4, #16]
 800530e:	429a      	cmp	r2, r3
 8005310:	bfb8      	it	lt
 8005312:	460b      	movlt	r3, r1
 8005314:	4688      	mov	r8, r1
 8005316:	bfbc      	itt	lt
 8005318:	46a0      	movlt	r8, r4
 800531a:	461c      	movlt	r4, r3
 800531c:	f8d8 7010 	ldr.w	r7, [r8, #16]
 8005320:	f8d4 9010 	ldr.w	r9, [r4, #16]
 8005324:	f8d8 3008 	ldr.w	r3, [r8, #8]
 8005328:	f8d8 1004 	ldr.w	r1, [r8, #4]
 800532c:	eb07 0609 	add.w	r6, r7, r9
 8005330:	42b3      	cmp	r3, r6
 8005332:	bfb8      	it	lt
 8005334:	3101      	addlt	r1, #1
 8005336:	f7ff feca 	bl	80050ce <_Balloc>
 800533a:	f100 0514 	add.w	r5, r0, #20
 800533e:	eb05 0e86 	add.w	lr, r5, r6, lsl #2
 8005342:	462b      	mov	r3, r5
 8005344:	2200      	movs	r2, #0
 8005346:	4573      	cmp	r3, lr
 8005348:	d316      	bcc.n	8005378 <__multiply+0x74>
 800534a:	f104 0214 	add.w	r2, r4, #20
 800534e:	f108 0114 	add.w	r1, r8, #20
 8005352:	eb02 0389 	add.w	r3, r2, r9, lsl #2
 8005356:	eb01 0787 	add.w	r7, r1, r7, lsl #2
 800535a:	9300      	str	r3, [sp, #0]
 800535c:	9b00      	ldr	r3, [sp, #0]
 800535e:	9201      	str	r2, [sp, #4]
 8005360:	4293      	cmp	r3, r2
 8005362:	d80c      	bhi.n	800537e <__multiply+0x7a>
 8005364:	2e00      	cmp	r6, #0
 8005366:	dd03      	ble.n	8005370 <__multiply+0x6c>
 8005368:	f85e 3d04 	ldr.w	r3, [lr, #-4]!
 800536c:	2b00      	cmp	r3, #0
 800536e:	d05d      	beq.n	800542c <__multiply+0x128>
 8005370:	6106      	str	r6, [r0, #16]
 8005372:	b003      	add	sp, #12
 8005374:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005378:	f843 2b04 	str.w	r2, [r3], #4
 800537c:	e7e3      	b.n	8005346 <__multiply+0x42>
 800537e:	f8b2 b000 	ldrh.w	fp, [r2]
 8005382:	f1bb 0f00 	cmp.w	fp, #0
 8005386:	d023      	beq.n	80053d0 <__multiply+0xcc>
 8005388:	4689      	mov	r9, r1
 800538a:	46ac      	mov	ip, r5
 800538c:	f04f 0800 	mov.w	r8, #0
 8005390:	f859 4b04 	ldr.w	r4, [r9], #4
 8005394:	f8dc a000 	ldr.w	sl, [ip]
 8005398:	b2a3      	uxth	r3, r4
 800539a:	fa1f fa8a 	uxth.w	sl, sl
 800539e:	fb0b a303 	mla	r3, fp, r3, sl
 80053a2:	ea4f 4a14 	mov.w	sl, r4, lsr #16
 80053a6:	f8dc 4000 	ldr.w	r4, [ip]
 80053aa:	4443      	add	r3, r8
 80053ac:	ea4f 4814 	mov.w	r8, r4, lsr #16
 80053b0:	fb0b 840a 	mla	r4, fp, sl, r8
 80053b4:	eb04 4413 	add.w	r4, r4, r3, lsr #16
 80053b8:	46e2      	mov	sl, ip
 80053ba:	b29b      	uxth	r3, r3
 80053bc:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 80053c0:	454f      	cmp	r7, r9
 80053c2:	ea4f 4814 	mov.w	r8, r4, lsr #16
 80053c6:	f84a 3b04 	str.w	r3, [sl], #4
 80053ca:	d82b      	bhi.n	8005424 <__multiply+0x120>
 80053cc:	f8cc 8004 	str.w	r8, [ip, #4]
 80053d0:	9b01      	ldr	r3, [sp, #4]
 80053d2:	f8b3 a002 	ldrh.w	sl, [r3, #2]
 80053d6:	3204      	adds	r2, #4
 80053d8:	f1ba 0f00 	cmp.w	sl, #0
 80053dc:	d020      	beq.n	8005420 <__multiply+0x11c>
 80053de:	682b      	ldr	r3, [r5, #0]
 80053e0:	4689      	mov	r9, r1
 80053e2:	46a8      	mov	r8, r5
 80053e4:	f04f 0b00 	mov.w	fp, #0
 80053e8:	f8b9 c000 	ldrh.w	ip, [r9]
 80053ec:	f8b8 4002 	ldrh.w	r4, [r8, #2]
 80053f0:	fb0a 440c 	mla	r4, sl, ip, r4
 80053f4:	445c      	add	r4, fp
 80053f6:	46c4      	mov	ip, r8
 80053f8:	b29b      	uxth	r3, r3
 80053fa:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 80053fe:	f84c 3b04 	str.w	r3, [ip], #4
 8005402:	f859 3b04 	ldr.w	r3, [r9], #4
 8005406:	f8b8 b004 	ldrh.w	fp, [r8, #4]
 800540a:	0c1b      	lsrs	r3, r3, #16
 800540c:	fb0a b303 	mla	r3, sl, r3, fp
 8005410:	eb03 4314 	add.w	r3, r3, r4, lsr #16
 8005414:	454f      	cmp	r7, r9
 8005416:	ea4f 4b13 	mov.w	fp, r3, lsr #16
 800541a:	d805      	bhi.n	8005428 <__multiply+0x124>
 800541c:	f8c8 3004 	str.w	r3, [r8, #4]
 8005420:	3504      	adds	r5, #4
 8005422:	e79b      	b.n	800535c <__multiply+0x58>
 8005424:	46d4      	mov	ip, sl
 8005426:	e7b3      	b.n	8005390 <__multiply+0x8c>
 8005428:	46e0      	mov	r8, ip
 800542a:	e7dd      	b.n	80053e8 <__multiply+0xe4>
 800542c:	3e01      	subs	r6, #1
 800542e:	e799      	b.n	8005364 <__multiply+0x60>

08005430 <__pow5mult>:
 8005430:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8005434:	4615      	mov	r5, r2
 8005436:	f012 0203 	ands.w	r2, r2, #3
 800543a:	4606      	mov	r6, r0
 800543c:	460f      	mov	r7, r1
 800543e:	d007      	beq.n	8005450 <__pow5mult+0x20>
 8005440:	3a01      	subs	r2, #1
 8005442:	4c21      	ldr	r4, [pc, #132]	; (80054c8 <__pow5mult+0x98>)
 8005444:	2300      	movs	r3, #0
 8005446:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 800544a:	f7ff fe8b 	bl	8005164 <__multadd>
 800544e:	4607      	mov	r7, r0
 8005450:	10ad      	asrs	r5, r5, #2
 8005452:	d035      	beq.n	80054c0 <__pow5mult+0x90>
 8005454:	6a74      	ldr	r4, [r6, #36]	; 0x24
 8005456:	b93c      	cbnz	r4, 8005468 <__pow5mult+0x38>
 8005458:	2010      	movs	r0, #16
 800545a:	f7ff fe13 	bl	8005084 <malloc>
 800545e:	6270      	str	r0, [r6, #36]	; 0x24
 8005460:	e9c0 4401 	strd	r4, r4, [r0, #4]
 8005464:	6004      	str	r4, [r0, #0]
 8005466:	60c4      	str	r4, [r0, #12]
 8005468:	f8d6 8024 	ldr.w	r8, [r6, #36]	; 0x24
 800546c:	f8d8 4008 	ldr.w	r4, [r8, #8]
 8005470:	b94c      	cbnz	r4, 8005486 <__pow5mult+0x56>
 8005472:	f240 2171 	movw	r1, #625	; 0x271
 8005476:	4630      	mov	r0, r6
 8005478:	f7ff ff3b 	bl	80052f2 <__i2b>
 800547c:	2300      	movs	r3, #0
 800547e:	f8c8 0008 	str.w	r0, [r8, #8]
 8005482:	4604      	mov	r4, r0
 8005484:	6003      	str	r3, [r0, #0]
 8005486:	f04f 0800 	mov.w	r8, #0
 800548a:	07eb      	lsls	r3, r5, #31
 800548c:	d50a      	bpl.n	80054a4 <__pow5mult+0x74>
 800548e:	4639      	mov	r1, r7
 8005490:	4622      	mov	r2, r4
 8005492:	4630      	mov	r0, r6
 8005494:	f7ff ff36 	bl	8005304 <__multiply>
 8005498:	4639      	mov	r1, r7
 800549a:	4681      	mov	r9, r0
 800549c:	4630      	mov	r0, r6
 800549e:	f7ff fe4a 	bl	8005136 <_Bfree>
 80054a2:	464f      	mov	r7, r9
 80054a4:	106d      	asrs	r5, r5, #1
 80054a6:	d00b      	beq.n	80054c0 <__pow5mult+0x90>
 80054a8:	6820      	ldr	r0, [r4, #0]
 80054aa:	b938      	cbnz	r0, 80054bc <__pow5mult+0x8c>
 80054ac:	4622      	mov	r2, r4
 80054ae:	4621      	mov	r1, r4
 80054b0:	4630      	mov	r0, r6
 80054b2:	f7ff ff27 	bl	8005304 <__multiply>
 80054b6:	6020      	str	r0, [r4, #0]
 80054b8:	f8c0 8000 	str.w	r8, [r0]
 80054bc:	4604      	mov	r4, r0
 80054be:	e7e4      	b.n	800548a <__pow5mult+0x5a>
 80054c0:	4638      	mov	r0, r7
 80054c2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80054c6:	bf00      	nop
 80054c8:	08006920 	.word	0x08006920

080054cc <__lshift>:
 80054cc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80054d0:	460c      	mov	r4, r1
 80054d2:	ea4f 1a62 	mov.w	sl, r2, asr #5
 80054d6:	6923      	ldr	r3, [r4, #16]
 80054d8:	6849      	ldr	r1, [r1, #4]
 80054da:	eb0a 0903 	add.w	r9, sl, r3
 80054de:	68a3      	ldr	r3, [r4, #8]
 80054e0:	4607      	mov	r7, r0
 80054e2:	4616      	mov	r6, r2
 80054e4:	f109 0501 	add.w	r5, r9, #1
 80054e8:	42ab      	cmp	r3, r5
 80054ea:	db32      	blt.n	8005552 <__lshift+0x86>
 80054ec:	4638      	mov	r0, r7
 80054ee:	f7ff fdee 	bl	80050ce <_Balloc>
 80054f2:	2300      	movs	r3, #0
 80054f4:	4680      	mov	r8, r0
 80054f6:	f100 0114 	add.w	r1, r0, #20
 80054fa:	461a      	mov	r2, r3
 80054fc:	4553      	cmp	r3, sl
 80054fe:	db2b      	blt.n	8005558 <__lshift+0x8c>
 8005500:	6920      	ldr	r0, [r4, #16]
 8005502:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 8005506:	f104 0314 	add.w	r3, r4, #20
 800550a:	f016 021f 	ands.w	r2, r6, #31
 800550e:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 8005512:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 8005516:	d025      	beq.n	8005564 <__lshift+0x98>
 8005518:	f1c2 0e20 	rsb	lr, r2, #32
 800551c:	2000      	movs	r0, #0
 800551e:	681e      	ldr	r6, [r3, #0]
 8005520:	468a      	mov	sl, r1
 8005522:	4096      	lsls	r6, r2
 8005524:	4330      	orrs	r0, r6
 8005526:	f84a 0b04 	str.w	r0, [sl], #4
 800552a:	f853 0b04 	ldr.w	r0, [r3], #4
 800552e:	459c      	cmp	ip, r3
 8005530:	fa20 f00e 	lsr.w	r0, r0, lr
 8005534:	d814      	bhi.n	8005560 <__lshift+0x94>
 8005536:	6048      	str	r0, [r1, #4]
 8005538:	b108      	cbz	r0, 800553e <__lshift+0x72>
 800553a:	f109 0502 	add.w	r5, r9, #2
 800553e:	3d01      	subs	r5, #1
 8005540:	4638      	mov	r0, r7
 8005542:	f8c8 5010 	str.w	r5, [r8, #16]
 8005546:	4621      	mov	r1, r4
 8005548:	f7ff fdf5 	bl	8005136 <_Bfree>
 800554c:	4640      	mov	r0, r8
 800554e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8005552:	3101      	adds	r1, #1
 8005554:	005b      	lsls	r3, r3, #1
 8005556:	e7c7      	b.n	80054e8 <__lshift+0x1c>
 8005558:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 800555c:	3301      	adds	r3, #1
 800555e:	e7cd      	b.n	80054fc <__lshift+0x30>
 8005560:	4651      	mov	r1, sl
 8005562:	e7dc      	b.n	800551e <__lshift+0x52>
 8005564:	3904      	subs	r1, #4
 8005566:	f853 2b04 	ldr.w	r2, [r3], #4
 800556a:	f841 2f04 	str.w	r2, [r1, #4]!
 800556e:	459c      	cmp	ip, r3
 8005570:	d8f9      	bhi.n	8005566 <__lshift+0x9a>
 8005572:	e7e4      	b.n	800553e <__lshift+0x72>

08005574 <__mcmp>:
 8005574:	6903      	ldr	r3, [r0, #16]
 8005576:	690a      	ldr	r2, [r1, #16]
 8005578:	1a9b      	subs	r3, r3, r2
 800557a:	b530      	push	{r4, r5, lr}
 800557c:	d10c      	bne.n	8005598 <__mcmp+0x24>
 800557e:	0092      	lsls	r2, r2, #2
 8005580:	3014      	adds	r0, #20
 8005582:	3114      	adds	r1, #20
 8005584:	1884      	adds	r4, r0, r2
 8005586:	4411      	add	r1, r2
 8005588:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 800558c:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 8005590:	4295      	cmp	r5, r2
 8005592:	d003      	beq.n	800559c <__mcmp+0x28>
 8005594:	d305      	bcc.n	80055a2 <__mcmp+0x2e>
 8005596:	2301      	movs	r3, #1
 8005598:	4618      	mov	r0, r3
 800559a:	bd30      	pop	{r4, r5, pc}
 800559c:	42a0      	cmp	r0, r4
 800559e:	d3f3      	bcc.n	8005588 <__mcmp+0x14>
 80055a0:	e7fa      	b.n	8005598 <__mcmp+0x24>
 80055a2:	f04f 33ff 	mov.w	r3, #4294967295
 80055a6:	e7f7      	b.n	8005598 <__mcmp+0x24>

080055a8 <__mdiff>:
 80055a8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80055ac:	460d      	mov	r5, r1
 80055ae:	4607      	mov	r7, r0
 80055b0:	4611      	mov	r1, r2
 80055b2:	4628      	mov	r0, r5
 80055b4:	4614      	mov	r4, r2
 80055b6:	f7ff ffdd 	bl	8005574 <__mcmp>
 80055ba:	1e06      	subs	r6, r0, #0
 80055bc:	d108      	bne.n	80055d0 <__mdiff+0x28>
 80055be:	4631      	mov	r1, r6
 80055c0:	4638      	mov	r0, r7
 80055c2:	f7ff fd84 	bl	80050ce <_Balloc>
 80055c6:	2301      	movs	r3, #1
 80055c8:	e9c0 3604 	strd	r3, r6, [r0, #16]
 80055cc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80055d0:	bfa4      	itt	ge
 80055d2:	4623      	movge	r3, r4
 80055d4:	462c      	movge	r4, r5
 80055d6:	4638      	mov	r0, r7
 80055d8:	6861      	ldr	r1, [r4, #4]
 80055da:	bfa6      	itte	ge
 80055dc:	461d      	movge	r5, r3
 80055de:	2600      	movge	r6, #0
 80055e0:	2601      	movlt	r6, #1
 80055e2:	f7ff fd74 	bl	80050ce <_Balloc>
 80055e6:	692b      	ldr	r3, [r5, #16]
 80055e8:	60c6      	str	r6, [r0, #12]
 80055ea:	6926      	ldr	r6, [r4, #16]
 80055ec:	f105 0914 	add.w	r9, r5, #20
 80055f0:	f104 0214 	add.w	r2, r4, #20
 80055f4:	eb02 0786 	add.w	r7, r2, r6, lsl #2
 80055f8:	eb09 0883 	add.w	r8, r9, r3, lsl #2
 80055fc:	f100 0514 	add.w	r5, r0, #20
 8005600:	f04f 0e00 	mov.w	lr, #0
 8005604:	f852 ab04 	ldr.w	sl, [r2], #4
 8005608:	f859 4b04 	ldr.w	r4, [r9], #4
 800560c:	fa1e f18a 	uxtah	r1, lr, sl
 8005610:	b2a3      	uxth	r3, r4
 8005612:	1ac9      	subs	r1, r1, r3
 8005614:	0c23      	lsrs	r3, r4, #16
 8005616:	ebc3 431a 	rsb	r3, r3, sl, lsr #16
 800561a:	eb03 4321 	add.w	r3, r3, r1, asr #16
 800561e:	b289      	uxth	r1, r1
 8005620:	ea4f 4e23 	mov.w	lr, r3, asr #16
 8005624:	45c8      	cmp	r8, r9
 8005626:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
 800562a:	4694      	mov	ip, r2
 800562c:	f845 3b04 	str.w	r3, [r5], #4
 8005630:	d8e8      	bhi.n	8005604 <__mdiff+0x5c>
 8005632:	45bc      	cmp	ip, r7
 8005634:	d304      	bcc.n	8005640 <__mdiff+0x98>
 8005636:	f855 3d04 	ldr.w	r3, [r5, #-4]!
 800563a:	b183      	cbz	r3, 800565e <__mdiff+0xb6>
 800563c:	6106      	str	r6, [r0, #16]
 800563e:	e7c5      	b.n	80055cc <__mdiff+0x24>
 8005640:	f85c 1b04 	ldr.w	r1, [ip], #4
 8005644:	fa1e f381 	uxtah	r3, lr, r1
 8005648:	141a      	asrs	r2, r3, #16
 800564a:	eb02 4211 	add.w	r2, r2, r1, lsr #16
 800564e:	b29b      	uxth	r3, r3
 8005650:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8005654:	ea4f 4e22 	mov.w	lr, r2, asr #16
 8005658:	f845 3b04 	str.w	r3, [r5], #4
 800565c:	e7e9      	b.n	8005632 <__mdiff+0x8a>
 800565e:	3e01      	subs	r6, #1
 8005660:	e7e9      	b.n	8005636 <__mdiff+0x8e>
	...

08005664 <__ulp>:
 8005664:	4b10      	ldr	r3, [pc, #64]	; (80056a8 <__ulp+0x44>)
 8005666:	400b      	ands	r3, r1
 8005668:	f1a3 7350 	sub.w	r3, r3, #54525952	; 0x3400000
 800566c:	2b00      	cmp	r3, #0
 800566e:	dd02      	ble.n	8005676 <__ulp+0x12>
 8005670:	2000      	movs	r0, #0
 8005672:	4619      	mov	r1, r3
 8005674:	4770      	bx	lr
 8005676:	425b      	negs	r3, r3
 8005678:	151b      	asrs	r3, r3, #20
 800567a:	2b13      	cmp	r3, #19
 800567c:	f04f 0000 	mov.w	r0, #0
 8005680:	f04f 0100 	mov.w	r1, #0
 8005684:	dc04      	bgt.n	8005690 <__ulp+0x2c>
 8005686:	f44f 2200 	mov.w	r2, #524288	; 0x80000
 800568a:	fa42 f103 	asr.w	r1, r2, r3
 800568e:	4770      	bx	lr
 8005690:	3b14      	subs	r3, #20
 8005692:	2b1e      	cmp	r3, #30
 8005694:	f04f 0201 	mov.w	r2, #1
 8005698:	bfda      	itte	le
 800569a:	f1c3 031f 	rsble	r3, r3, #31
 800569e:	fa02 f303 	lslle.w	r3, r2, r3
 80056a2:	4613      	movgt	r3, r2
 80056a4:	4618      	mov	r0, r3
 80056a6:	4770      	bx	lr
 80056a8:	7ff00000 	.word	0x7ff00000

080056ac <__b2d>:
 80056ac:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80056b0:	6907      	ldr	r7, [r0, #16]
 80056b2:	f100 0914 	add.w	r9, r0, #20
 80056b6:	eb09 0787 	add.w	r7, r9, r7, lsl #2
 80056ba:	f1a7 0804 	sub.w	r8, r7, #4
 80056be:	f857 6c04 	ldr.w	r6, [r7, #-4]
 80056c2:	4630      	mov	r0, r6
 80056c4:	f7ff fdc7 	bl	8005256 <__hi0bits>
 80056c8:	f1c0 0320 	rsb	r3, r0, #32
 80056cc:	280a      	cmp	r0, #10
 80056ce:	600b      	str	r3, [r1, #0]
 80056d0:	491e      	ldr	r1, [pc, #120]	; (800574c <__b2d+0xa0>)
 80056d2:	dc17      	bgt.n	8005704 <__b2d+0x58>
 80056d4:	f1c0 0c0b 	rsb	ip, r0, #11
 80056d8:	45c1      	cmp	r9, r8
 80056da:	fa26 f30c 	lsr.w	r3, r6, ip
 80056de:	bf38      	it	cc
 80056e0:	f857 2c08 	ldrcc.w	r2, [r7, #-8]
 80056e4:	ea43 0501 	orr.w	r5, r3, r1
 80056e8:	bf28      	it	cs
 80056ea:	2200      	movcs	r2, #0
 80056ec:	f100 0315 	add.w	r3, r0, #21
 80056f0:	fa06 f303 	lsl.w	r3, r6, r3
 80056f4:	fa22 f20c 	lsr.w	r2, r2, ip
 80056f8:	ea43 0402 	orr.w	r4, r3, r2
 80056fc:	4620      	mov	r0, r4
 80056fe:	4629      	mov	r1, r5
 8005700:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8005704:	45c1      	cmp	r9, r8
 8005706:	bf3a      	itte	cc
 8005708:	f1a7 0808 	subcc.w	r8, r7, #8
 800570c:	f857 2c08 	ldrcc.w	r2, [r7, #-8]
 8005710:	2200      	movcs	r2, #0
 8005712:	f1b0 030b 	subs.w	r3, r0, #11
 8005716:	d015      	beq.n	8005744 <__b2d+0x98>
 8005718:	409e      	lsls	r6, r3
 800571a:	f1c3 0720 	rsb	r7, r3, #32
 800571e:	f046 567f 	orr.w	r6, r6, #1069547520	; 0x3fc00000
 8005722:	fa22 f107 	lsr.w	r1, r2, r7
 8005726:	45c8      	cmp	r8, r9
 8005728:	f446 1640 	orr.w	r6, r6, #3145728	; 0x300000
 800572c:	ea46 0501 	orr.w	r5, r6, r1
 8005730:	bf8c      	ite	hi
 8005732:	f858 1c04 	ldrhi.w	r1, [r8, #-4]
 8005736:	2100      	movls	r1, #0
 8005738:	fa02 f003 	lsl.w	r0, r2, r3
 800573c:	40f9      	lsrs	r1, r7
 800573e:	ea40 0401 	orr.w	r4, r0, r1
 8005742:	e7db      	b.n	80056fc <__b2d+0x50>
 8005744:	ea46 0501 	orr.w	r5, r6, r1
 8005748:	4614      	mov	r4, r2
 800574a:	e7d7      	b.n	80056fc <__b2d+0x50>
 800574c:	3ff00000 	.word	0x3ff00000

08005750 <__d2b>:
 8005750:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8005754:	2101      	movs	r1, #1
 8005756:	461c      	mov	r4, r3
 8005758:	4690      	mov	r8, r2
 800575a:	e9dd 6508 	ldrd	r6, r5, [sp, #32]
 800575e:	f7ff fcb6 	bl	80050ce <_Balloc>
 8005762:	f3c4 0213 	ubfx	r2, r4, #0, #20
 8005766:	f3c4 540a 	ubfx	r4, r4, #20, #11
 800576a:	4607      	mov	r7, r0
 800576c:	bb34      	cbnz	r4, 80057bc <__d2b+0x6c>
 800576e:	9201      	str	r2, [sp, #4]
 8005770:	f1b8 0200 	subs.w	r2, r8, #0
 8005774:	d027      	beq.n	80057c6 <__d2b+0x76>
 8005776:	a802      	add	r0, sp, #8
 8005778:	f840 2d08 	str.w	r2, [r0, #-8]!
 800577c:	f7ff fd8a 	bl	8005294 <__lo0bits>
 8005780:	9900      	ldr	r1, [sp, #0]
 8005782:	b1f0      	cbz	r0, 80057c2 <__d2b+0x72>
 8005784:	9a01      	ldr	r2, [sp, #4]
 8005786:	f1c0 0320 	rsb	r3, r0, #32
 800578a:	fa02 f303 	lsl.w	r3, r2, r3
 800578e:	430b      	orrs	r3, r1
 8005790:	40c2      	lsrs	r2, r0
 8005792:	617b      	str	r3, [r7, #20]
 8005794:	9201      	str	r2, [sp, #4]
 8005796:	9b01      	ldr	r3, [sp, #4]
 8005798:	61bb      	str	r3, [r7, #24]
 800579a:	2b00      	cmp	r3, #0
 800579c:	bf14      	ite	ne
 800579e:	2102      	movne	r1, #2
 80057a0:	2101      	moveq	r1, #1
 80057a2:	6139      	str	r1, [r7, #16]
 80057a4:	b1c4      	cbz	r4, 80057d8 <__d2b+0x88>
 80057a6:	f2a4 4433 	subw	r4, r4, #1075	; 0x433
 80057aa:	4404      	add	r4, r0
 80057ac:	6034      	str	r4, [r6, #0]
 80057ae:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 80057b2:	6028      	str	r0, [r5, #0]
 80057b4:	4638      	mov	r0, r7
 80057b6:	b002      	add	sp, #8
 80057b8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80057bc:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 80057c0:	e7d5      	b.n	800576e <__d2b+0x1e>
 80057c2:	6179      	str	r1, [r7, #20]
 80057c4:	e7e7      	b.n	8005796 <__d2b+0x46>
 80057c6:	a801      	add	r0, sp, #4
 80057c8:	f7ff fd64 	bl	8005294 <__lo0bits>
 80057cc:	9b01      	ldr	r3, [sp, #4]
 80057ce:	617b      	str	r3, [r7, #20]
 80057d0:	2101      	movs	r1, #1
 80057d2:	6139      	str	r1, [r7, #16]
 80057d4:	3020      	adds	r0, #32
 80057d6:	e7e5      	b.n	80057a4 <__d2b+0x54>
 80057d8:	eb07 0381 	add.w	r3, r7, r1, lsl #2
 80057dc:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 80057e0:	6030      	str	r0, [r6, #0]
 80057e2:	6918      	ldr	r0, [r3, #16]
 80057e4:	f7ff fd37 	bl	8005256 <__hi0bits>
 80057e8:	ebc0 1041 	rsb	r0, r0, r1, lsl #5
 80057ec:	e7e1      	b.n	80057b2 <__d2b+0x62>

080057ee <__ratio>:
 80057ee:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80057f2:	4688      	mov	r8, r1
 80057f4:	4669      	mov	r1, sp
 80057f6:	4681      	mov	r9, r0
 80057f8:	f7ff ff58 	bl	80056ac <__b2d>
 80057fc:	468b      	mov	fp, r1
 80057fe:	4606      	mov	r6, r0
 8005800:	460f      	mov	r7, r1
 8005802:	4640      	mov	r0, r8
 8005804:	a901      	add	r1, sp, #4
 8005806:	f7ff ff51 	bl	80056ac <__b2d>
 800580a:	f8d9 3010 	ldr.w	r3, [r9, #16]
 800580e:	f8d8 2010 	ldr.w	r2, [r8, #16]
 8005812:	eba3 0c02 	sub.w	ip, r3, r2
 8005816:	e9dd 3200 	ldrd	r3, r2, [sp]
 800581a:	1a9b      	subs	r3, r3, r2
 800581c:	eb03 134c 	add.w	r3, r3, ip, lsl #5
 8005820:	2b00      	cmp	r3, #0
 8005822:	bfd5      	itete	le
 8005824:	460a      	movle	r2, r1
 8005826:	463a      	movgt	r2, r7
 8005828:	ebc3 3303 	rsble	r3, r3, r3, lsl #12
 800582c:	eb02 5b03 	addgt.w	fp, r2, r3, lsl #20
 8005830:	460d      	mov	r5, r1
 8005832:	bfd8      	it	le
 8005834:	eb02 5503 	addle.w	r5, r2, r3, lsl #20
 8005838:	462b      	mov	r3, r5
 800583a:	4602      	mov	r2, r0
 800583c:	4659      	mov	r1, fp
 800583e:	4630      	mov	r0, r6
 8005840:	f7fb f824 	bl	800088c <__aeabi_ddiv>
 8005844:	b003      	add	sp, #12
 8005846:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800584a <__copybits>:
 800584a:	3901      	subs	r1, #1
 800584c:	b510      	push	{r4, lr}
 800584e:	1149      	asrs	r1, r1, #5
 8005850:	6914      	ldr	r4, [r2, #16]
 8005852:	3101      	adds	r1, #1
 8005854:	f102 0314 	add.w	r3, r2, #20
 8005858:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 800585c:	eb03 0484 	add.w	r4, r3, r4, lsl #2
 8005860:	42a3      	cmp	r3, r4
 8005862:	4602      	mov	r2, r0
 8005864:	d303      	bcc.n	800586e <__copybits+0x24>
 8005866:	2300      	movs	r3, #0
 8005868:	428a      	cmp	r2, r1
 800586a:	d305      	bcc.n	8005878 <__copybits+0x2e>
 800586c:	bd10      	pop	{r4, pc}
 800586e:	f853 2b04 	ldr.w	r2, [r3], #4
 8005872:	f840 2b04 	str.w	r2, [r0], #4
 8005876:	e7f3      	b.n	8005860 <__copybits+0x16>
 8005878:	f842 3b04 	str.w	r3, [r2], #4
 800587c:	e7f4      	b.n	8005868 <__copybits+0x1e>

0800587e <__any_on>:
 800587e:	f100 0214 	add.w	r2, r0, #20
 8005882:	6900      	ldr	r0, [r0, #16]
 8005884:	114b      	asrs	r3, r1, #5
 8005886:	4298      	cmp	r0, r3
 8005888:	b510      	push	{r4, lr}
 800588a:	db11      	blt.n	80058b0 <__any_on+0x32>
 800588c:	dd0a      	ble.n	80058a4 <__any_on+0x26>
 800588e:	f011 011f 	ands.w	r1, r1, #31
 8005892:	d007      	beq.n	80058a4 <__any_on+0x26>
 8005894:	f852 4023 	ldr.w	r4, [r2, r3, lsl #2]
 8005898:	fa24 f001 	lsr.w	r0, r4, r1
 800589c:	fa00 f101 	lsl.w	r1, r0, r1
 80058a0:	428c      	cmp	r4, r1
 80058a2:	d10b      	bne.n	80058bc <__any_on+0x3e>
 80058a4:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 80058a8:	4293      	cmp	r3, r2
 80058aa:	d803      	bhi.n	80058b4 <__any_on+0x36>
 80058ac:	2000      	movs	r0, #0
 80058ae:	bd10      	pop	{r4, pc}
 80058b0:	4603      	mov	r3, r0
 80058b2:	e7f7      	b.n	80058a4 <__any_on+0x26>
 80058b4:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 80058b8:	2900      	cmp	r1, #0
 80058ba:	d0f5      	beq.n	80058a8 <__any_on+0x2a>
 80058bc:	2001      	movs	r0, #1
 80058be:	e7f6      	b.n	80058ae <__any_on+0x30>

080058c0 <_calloc_r>:
 80058c0:	b538      	push	{r3, r4, r5, lr}
 80058c2:	fb02 f401 	mul.w	r4, r2, r1
 80058c6:	4621      	mov	r1, r4
 80058c8:	f000 f856 	bl	8005978 <_malloc_r>
 80058cc:	4605      	mov	r5, r0
 80058ce:	b118      	cbz	r0, 80058d8 <_calloc_r+0x18>
 80058d0:	4622      	mov	r2, r4
 80058d2:	2100      	movs	r1, #0
 80058d4:	f7fc fa22 	bl	8001d1c <memset>
 80058d8:	4628      	mov	r0, r5
 80058da:	bd38      	pop	{r3, r4, r5, pc}

080058dc <_free_r>:
 80058dc:	b538      	push	{r3, r4, r5, lr}
 80058de:	4605      	mov	r5, r0
 80058e0:	2900      	cmp	r1, #0
 80058e2:	d045      	beq.n	8005970 <_free_r+0x94>
 80058e4:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80058e8:	1f0c      	subs	r4, r1, #4
 80058ea:	2b00      	cmp	r3, #0
 80058ec:	bfb8      	it	lt
 80058ee:	18e4      	addlt	r4, r4, r3
 80058f0:	f000 fc0d 	bl	800610e <__malloc_lock>
 80058f4:	4a1f      	ldr	r2, [pc, #124]	; (8005974 <_free_r+0x98>)
 80058f6:	6813      	ldr	r3, [r2, #0]
 80058f8:	4610      	mov	r0, r2
 80058fa:	b933      	cbnz	r3, 800590a <_free_r+0x2e>
 80058fc:	6063      	str	r3, [r4, #4]
 80058fe:	6014      	str	r4, [r2, #0]
 8005900:	4628      	mov	r0, r5
 8005902:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8005906:	f000 bc03 	b.w	8006110 <__malloc_unlock>
 800590a:	42a3      	cmp	r3, r4
 800590c:	d90c      	bls.n	8005928 <_free_r+0x4c>
 800590e:	6821      	ldr	r1, [r4, #0]
 8005910:	1862      	adds	r2, r4, r1
 8005912:	4293      	cmp	r3, r2
 8005914:	bf04      	itt	eq
 8005916:	681a      	ldreq	r2, [r3, #0]
 8005918:	685b      	ldreq	r3, [r3, #4]
 800591a:	6063      	str	r3, [r4, #4]
 800591c:	bf04      	itt	eq
 800591e:	1852      	addeq	r2, r2, r1
 8005920:	6022      	streq	r2, [r4, #0]
 8005922:	6004      	str	r4, [r0, #0]
 8005924:	e7ec      	b.n	8005900 <_free_r+0x24>
 8005926:	4613      	mov	r3, r2
 8005928:	685a      	ldr	r2, [r3, #4]
 800592a:	b10a      	cbz	r2, 8005930 <_free_r+0x54>
 800592c:	42a2      	cmp	r2, r4
 800592e:	d9fa      	bls.n	8005926 <_free_r+0x4a>
 8005930:	6819      	ldr	r1, [r3, #0]
 8005932:	1858      	adds	r0, r3, r1
 8005934:	42a0      	cmp	r0, r4
 8005936:	d10b      	bne.n	8005950 <_free_r+0x74>
 8005938:	6820      	ldr	r0, [r4, #0]
 800593a:	4401      	add	r1, r0
 800593c:	1858      	adds	r0, r3, r1
 800593e:	4282      	cmp	r2, r0
 8005940:	6019      	str	r1, [r3, #0]
 8005942:	d1dd      	bne.n	8005900 <_free_r+0x24>
 8005944:	6810      	ldr	r0, [r2, #0]
 8005946:	6852      	ldr	r2, [r2, #4]
 8005948:	605a      	str	r2, [r3, #4]
 800594a:	4401      	add	r1, r0
 800594c:	6019      	str	r1, [r3, #0]
 800594e:	e7d7      	b.n	8005900 <_free_r+0x24>
 8005950:	d902      	bls.n	8005958 <_free_r+0x7c>
 8005952:	230c      	movs	r3, #12
 8005954:	602b      	str	r3, [r5, #0]
 8005956:	e7d3      	b.n	8005900 <_free_r+0x24>
 8005958:	6820      	ldr	r0, [r4, #0]
 800595a:	1821      	adds	r1, r4, r0
 800595c:	428a      	cmp	r2, r1
 800595e:	bf04      	itt	eq
 8005960:	6811      	ldreq	r1, [r2, #0]
 8005962:	6852      	ldreq	r2, [r2, #4]
 8005964:	6062      	str	r2, [r4, #4]
 8005966:	bf04      	itt	eq
 8005968:	1809      	addeq	r1, r1, r0
 800596a:	6021      	streq	r1, [r4, #0]
 800596c:	605c      	str	r4, [r3, #4]
 800596e:	e7c7      	b.n	8005900 <_free_r+0x24>
 8005970:	bd38      	pop	{r3, r4, r5, pc}
 8005972:	bf00      	nop
 8005974:	20000218 	.word	0x20000218

08005978 <_malloc_r>:
 8005978:	b570      	push	{r4, r5, r6, lr}
 800597a:	1ccd      	adds	r5, r1, #3
 800597c:	f025 0503 	bic.w	r5, r5, #3
 8005980:	3508      	adds	r5, #8
 8005982:	2d0c      	cmp	r5, #12
 8005984:	bf38      	it	cc
 8005986:	250c      	movcc	r5, #12
 8005988:	2d00      	cmp	r5, #0
 800598a:	4606      	mov	r6, r0
 800598c:	db01      	blt.n	8005992 <_malloc_r+0x1a>
 800598e:	42a9      	cmp	r1, r5
 8005990:	d903      	bls.n	800599a <_malloc_r+0x22>
 8005992:	230c      	movs	r3, #12
 8005994:	6033      	str	r3, [r6, #0]
 8005996:	2000      	movs	r0, #0
 8005998:	bd70      	pop	{r4, r5, r6, pc}
 800599a:	f000 fbb8 	bl	800610e <__malloc_lock>
 800599e:	4a21      	ldr	r2, [pc, #132]	; (8005a24 <_malloc_r+0xac>)
 80059a0:	6814      	ldr	r4, [r2, #0]
 80059a2:	4621      	mov	r1, r4
 80059a4:	b991      	cbnz	r1, 80059cc <_malloc_r+0x54>
 80059a6:	4c20      	ldr	r4, [pc, #128]	; (8005a28 <_malloc_r+0xb0>)
 80059a8:	6823      	ldr	r3, [r4, #0]
 80059aa:	b91b      	cbnz	r3, 80059b4 <_malloc_r+0x3c>
 80059ac:	4630      	mov	r0, r6
 80059ae:	f000 facd 	bl	8005f4c <_sbrk_r>
 80059b2:	6020      	str	r0, [r4, #0]
 80059b4:	4629      	mov	r1, r5
 80059b6:	4630      	mov	r0, r6
 80059b8:	f000 fac8 	bl	8005f4c <_sbrk_r>
 80059bc:	1c43      	adds	r3, r0, #1
 80059be:	d124      	bne.n	8005a0a <_malloc_r+0x92>
 80059c0:	230c      	movs	r3, #12
 80059c2:	6033      	str	r3, [r6, #0]
 80059c4:	4630      	mov	r0, r6
 80059c6:	f000 fba3 	bl	8006110 <__malloc_unlock>
 80059ca:	e7e4      	b.n	8005996 <_malloc_r+0x1e>
 80059cc:	680b      	ldr	r3, [r1, #0]
 80059ce:	1b5b      	subs	r3, r3, r5
 80059d0:	d418      	bmi.n	8005a04 <_malloc_r+0x8c>
 80059d2:	2b0b      	cmp	r3, #11
 80059d4:	d90f      	bls.n	80059f6 <_malloc_r+0x7e>
 80059d6:	600b      	str	r3, [r1, #0]
 80059d8:	50cd      	str	r5, [r1, r3]
 80059da:	18cc      	adds	r4, r1, r3
 80059dc:	4630      	mov	r0, r6
 80059de:	f000 fb97 	bl	8006110 <__malloc_unlock>
 80059e2:	f104 000b 	add.w	r0, r4, #11
 80059e6:	1d23      	adds	r3, r4, #4
 80059e8:	f020 0007 	bic.w	r0, r0, #7
 80059ec:	1ac3      	subs	r3, r0, r3
 80059ee:	d0d3      	beq.n	8005998 <_malloc_r+0x20>
 80059f0:	425a      	negs	r2, r3
 80059f2:	50e2      	str	r2, [r4, r3]
 80059f4:	e7d0      	b.n	8005998 <_malloc_r+0x20>
 80059f6:	428c      	cmp	r4, r1
 80059f8:	684b      	ldr	r3, [r1, #4]
 80059fa:	bf16      	itet	ne
 80059fc:	6063      	strne	r3, [r4, #4]
 80059fe:	6013      	streq	r3, [r2, #0]
 8005a00:	460c      	movne	r4, r1
 8005a02:	e7eb      	b.n	80059dc <_malloc_r+0x64>
 8005a04:	460c      	mov	r4, r1
 8005a06:	6849      	ldr	r1, [r1, #4]
 8005a08:	e7cc      	b.n	80059a4 <_malloc_r+0x2c>
 8005a0a:	1cc4      	adds	r4, r0, #3
 8005a0c:	f024 0403 	bic.w	r4, r4, #3
 8005a10:	42a0      	cmp	r0, r4
 8005a12:	d005      	beq.n	8005a20 <_malloc_r+0xa8>
 8005a14:	1a21      	subs	r1, r4, r0
 8005a16:	4630      	mov	r0, r6
 8005a18:	f000 fa98 	bl	8005f4c <_sbrk_r>
 8005a1c:	3001      	adds	r0, #1
 8005a1e:	d0cf      	beq.n	80059c0 <_malloc_r+0x48>
 8005a20:	6025      	str	r5, [r4, #0]
 8005a22:	e7db      	b.n	80059dc <_malloc_r+0x64>
 8005a24:	20000218 	.word	0x20000218
 8005a28:	2000021c 	.word	0x2000021c

08005a2c <__ssputs_r>:
 8005a2c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005a30:	688e      	ldr	r6, [r1, #8]
 8005a32:	429e      	cmp	r6, r3
 8005a34:	4682      	mov	sl, r0
 8005a36:	460c      	mov	r4, r1
 8005a38:	4690      	mov	r8, r2
 8005a3a:	4699      	mov	r9, r3
 8005a3c:	d837      	bhi.n	8005aae <__ssputs_r+0x82>
 8005a3e:	898a      	ldrh	r2, [r1, #12]
 8005a40:	f412 6f90 	tst.w	r2, #1152	; 0x480
 8005a44:	d031      	beq.n	8005aaa <__ssputs_r+0x7e>
 8005a46:	6825      	ldr	r5, [r4, #0]
 8005a48:	6909      	ldr	r1, [r1, #16]
 8005a4a:	1a6f      	subs	r7, r5, r1
 8005a4c:	6965      	ldr	r5, [r4, #20]
 8005a4e:	2302      	movs	r3, #2
 8005a50:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8005a54:	fb95 f5f3 	sdiv	r5, r5, r3
 8005a58:	f109 0301 	add.w	r3, r9, #1
 8005a5c:	443b      	add	r3, r7
 8005a5e:	429d      	cmp	r5, r3
 8005a60:	bf38      	it	cc
 8005a62:	461d      	movcc	r5, r3
 8005a64:	0553      	lsls	r3, r2, #21
 8005a66:	d530      	bpl.n	8005aca <__ssputs_r+0x9e>
 8005a68:	4629      	mov	r1, r5
 8005a6a:	f7ff ff85 	bl	8005978 <_malloc_r>
 8005a6e:	4606      	mov	r6, r0
 8005a70:	b950      	cbnz	r0, 8005a88 <__ssputs_r+0x5c>
 8005a72:	230c      	movs	r3, #12
 8005a74:	f8ca 3000 	str.w	r3, [sl]
 8005a78:	89a3      	ldrh	r3, [r4, #12]
 8005a7a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8005a7e:	81a3      	strh	r3, [r4, #12]
 8005a80:	f04f 30ff 	mov.w	r0, #4294967295
 8005a84:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8005a88:	463a      	mov	r2, r7
 8005a8a:	6921      	ldr	r1, [r4, #16]
 8005a8c:	f7ff fb14 	bl	80050b8 <memcpy>
 8005a90:	89a3      	ldrh	r3, [r4, #12]
 8005a92:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 8005a96:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8005a9a:	81a3      	strh	r3, [r4, #12]
 8005a9c:	6126      	str	r6, [r4, #16]
 8005a9e:	6165      	str	r5, [r4, #20]
 8005aa0:	443e      	add	r6, r7
 8005aa2:	1bed      	subs	r5, r5, r7
 8005aa4:	6026      	str	r6, [r4, #0]
 8005aa6:	60a5      	str	r5, [r4, #8]
 8005aa8:	464e      	mov	r6, r9
 8005aaa:	454e      	cmp	r6, r9
 8005aac:	d900      	bls.n	8005ab0 <__ssputs_r+0x84>
 8005aae:	464e      	mov	r6, r9
 8005ab0:	4632      	mov	r2, r6
 8005ab2:	4641      	mov	r1, r8
 8005ab4:	6820      	ldr	r0, [r4, #0]
 8005ab6:	f000 fb11 	bl	80060dc <memmove>
 8005aba:	68a3      	ldr	r3, [r4, #8]
 8005abc:	1b9b      	subs	r3, r3, r6
 8005abe:	60a3      	str	r3, [r4, #8]
 8005ac0:	6823      	ldr	r3, [r4, #0]
 8005ac2:	441e      	add	r6, r3
 8005ac4:	6026      	str	r6, [r4, #0]
 8005ac6:	2000      	movs	r0, #0
 8005ac8:	e7dc      	b.n	8005a84 <__ssputs_r+0x58>
 8005aca:	462a      	mov	r2, r5
 8005acc:	f000 fb21 	bl	8006112 <_realloc_r>
 8005ad0:	4606      	mov	r6, r0
 8005ad2:	2800      	cmp	r0, #0
 8005ad4:	d1e2      	bne.n	8005a9c <__ssputs_r+0x70>
 8005ad6:	6921      	ldr	r1, [r4, #16]
 8005ad8:	4650      	mov	r0, sl
 8005ada:	f7ff feff 	bl	80058dc <_free_r>
 8005ade:	e7c8      	b.n	8005a72 <__ssputs_r+0x46>

08005ae0 <_svfiprintf_r>:
 8005ae0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005ae4:	461d      	mov	r5, r3
 8005ae6:	898b      	ldrh	r3, [r1, #12]
 8005ae8:	061f      	lsls	r7, r3, #24
 8005aea:	b09d      	sub	sp, #116	; 0x74
 8005aec:	4680      	mov	r8, r0
 8005aee:	460c      	mov	r4, r1
 8005af0:	4616      	mov	r6, r2
 8005af2:	d50f      	bpl.n	8005b14 <_svfiprintf_r+0x34>
 8005af4:	690b      	ldr	r3, [r1, #16]
 8005af6:	b96b      	cbnz	r3, 8005b14 <_svfiprintf_r+0x34>
 8005af8:	2140      	movs	r1, #64	; 0x40
 8005afa:	f7ff ff3d 	bl	8005978 <_malloc_r>
 8005afe:	6020      	str	r0, [r4, #0]
 8005b00:	6120      	str	r0, [r4, #16]
 8005b02:	b928      	cbnz	r0, 8005b10 <_svfiprintf_r+0x30>
 8005b04:	230c      	movs	r3, #12
 8005b06:	f8c8 3000 	str.w	r3, [r8]
 8005b0a:	f04f 30ff 	mov.w	r0, #4294967295
 8005b0e:	e0c8      	b.n	8005ca2 <_svfiprintf_r+0x1c2>
 8005b10:	2340      	movs	r3, #64	; 0x40
 8005b12:	6163      	str	r3, [r4, #20]
 8005b14:	2300      	movs	r3, #0
 8005b16:	9309      	str	r3, [sp, #36]	; 0x24
 8005b18:	2320      	movs	r3, #32
 8005b1a:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8005b1e:	2330      	movs	r3, #48	; 0x30
 8005b20:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8005b24:	9503      	str	r5, [sp, #12]
 8005b26:	f04f 0b01 	mov.w	fp, #1
 8005b2a:	4637      	mov	r7, r6
 8005b2c:	463d      	mov	r5, r7
 8005b2e:	f815 3b01 	ldrb.w	r3, [r5], #1
 8005b32:	b10b      	cbz	r3, 8005b38 <_svfiprintf_r+0x58>
 8005b34:	2b25      	cmp	r3, #37	; 0x25
 8005b36:	d13e      	bne.n	8005bb6 <_svfiprintf_r+0xd6>
 8005b38:	ebb7 0a06 	subs.w	sl, r7, r6
 8005b3c:	d00b      	beq.n	8005b56 <_svfiprintf_r+0x76>
 8005b3e:	4653      	mov	r3, sl
 8005b40:	4632      	mov	r2, r6
 8005b42:	4621      	mov	r1, r4
 8005b44:	4640      	mov	r0, r8
 8005b46:	f7ff ff71 	bl	8005a2c <__ssputs_r>
 8005b4a:	3001      	adds	r0, #1
 8005b4c:	f000 80a4 	beq.w	8005c98 <_svfiprintf_r+0x1b8>
 8005b50:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005b52:	4453      	add	r3, sl
 8005b54:	9309      	str	r3, [sp, #36]	; 0x24
 8005b56:	783b      	ldrb	r3, [r7, #0]
 8005b58:	2b00      	cmp	r3, #0
 8005b5a:	f000 809d 	beq.w	8005c98 <_svfiprintf_r+0x1b8>
 8005b5e:	2300      	movs	r3, #0
 8005b60:	f04f 32ff 	mov.w	r2, #4294967295
 8005b64:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8005b68:	9304      	str	r3, [sp, #16]
 8005b6a:	9307      	str	r3, [sp, #28]
 8005b6c:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8005b70:	931a      	str	r3, [sp, #104]	; 0x68
 8005b72:	462f      	mov	r7, r5
 8005b74:	2205      	movs	r2, #5
 8005b76:	f817 1b01 	ldrb.w	r1, [r7], #1
 8005b7a:	4850      	ldr	r0, [pc, #320]	; (8005cbc <_svfiprintf_r+0x1dc>)
 8005b7c:	f7fa fb50 	bl	8000220 <memchr>
 8005b80:	9b04      	ldr	r3, [sp, #16]
 8005b82:	b9d0      	cbnz	r0, 8005bba <_svfiprintf_r+0xda>
 8005b84:	06d9      	lsls	r1, r3, #27
 8005b86:	bf44      	itt	mi
 8005b88:	2220      	movmi	r2, #32
 8005b8a:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 8005b8e:	071a      	lsls	r2, r3, #28
 8005b90:	bf44      	itt	mi
 8005b92:	222b      	movmi	r2, #43	; 0x2b
 8005b94:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 8005b98:	782a      	ldrb	r2, [r5, #0]
 8005b9a:	2a2a      	cmp	r2, #42	; 0x2a
 8005b9c:	d015      	beq.n	8005bca <_svfiprintf_r+0xea>
 8005b9e:	9a07      	ldr	r2, [sp, #28]
 8005ba0:	462f      	mov	r7, r5
 8005ba2:	2000      	movs	r0, #0
 8005ba4:	250a      	movs	r5, #10
 8005ba6:	4639      	mov	r1, r7
 8005ba8:	f811 3b01 	ldrb.w	r3, [r1], #1
 8005bac:	3b30      	subs	r3, #48	; 0x30
 8005bae:	2b09      	cmp	r3, #9
 8005bb0:	d94d      	bls.n	8005c4e <_svfiprintf_r+0x16e>
 8005bb2:	b1b8      	cbz	r0, 8005be4 <_svfiprintf_r+0x104>
 8005bb4:	e00f      	b.n	8005bd6 <_svfiprintf_r+0xf6>
 8005bb6:	462f      	mov	r7, r5
 8005bb8:	e7b8      	b.n	8005b2c <_svfiprintf_r+0x4c>
 8005bba:	4a40      	ldr	r2, [pc, #256]	; (8005cbc <_svfiprintf_r+0x1dc>)
 8005bbc:	1a80      	subs	r0, r0, r2
 8005bbe:	fa0b f000 	lsl.w	r0, fp, r0
 8005bc2:	4318      	orrs	r0, r3
 8005bc4:	9004      	str	r0, [sp, #16]
 8005bc6:	463d      	mov	r5, r7
 8005bc8:	e7d3      	b.n	8005b72 <_svfiprintf_r+0x92>
 8005bca:	9a03      	ldr	r2, [sp, #12]
 8005bcc:	1d11      	adds	r1, r2, #4
 8005bce:	6812      	ldr	r2, [r2, #0]
 8005bd0:	9103      	str	r1, [sp, #12]
 8005bd2:	2a00      	cmp	r2, #0
 8005bd4:	db01      	blt.n	8005bda <_svfiprintf_r+0xfa>
 8005bd6:	9207      	str	r2, [sp, #28]
 8005bd8:	e004      	b.n	8005be4 <_svfiprintf_r+0x104>
 8005bda:	4252      	negs	r2, r2
 8005bdc:	f043 0302 	orr.w	r3, r3, #2
 8005be0:	9207      	str	r2, [sp, #28]
 8005be2:	9304      	str	r3, [sp, #16]
 8005be4:	783b      	ldrb	r3, [r7, #0]
 8005be6:	2b2e      	cmp	r3, #46	; 0x2e
 8005be8:	d10c      	bne.n	8005c04 <_svfiprintf_r+0x124>
 8005bea:	787b      	ldrb	r3, [r7, #1]
 8005bec:	2b2a      	cmp	r3, #42	; 0x2a
 8005bee:	d133      	bne.n	8005c58 <_svfiprintf_r+0x178>
 8005bf0:	9b03      	ldr	r3, [sp, #12]
 8005bf2:	1d1a      	adds	r2, r3, #4
 8005bf4:	681b      	ldr	r3, [r3, #0]
 8005bf6:	9203      	str	r2, [sp, #12]
 8005bf8:	2b00      	cmp	r3, #0
 8005bfa:	bfb8      	it	lt
 8005bfc:	f04f 33ff 	movlt.w	r3, #4294967295
 8005c00:	3702      	adds	r7, #2
 8005c02:	9305      	str	r3, [sp, #20]
 8005c04:	4d2e      	ldr	r5, [pc, #184]	; (8005cc0 <_svfiprintf_r+0x1e0>)
 8005c06:	7839      	ldrb	r1, [r7, #0]
 8005c08:	2203      	movs	r2, #3
 8005c0a:	4628      	mov	r0, r5
 8005c0c:	f7fa fb08 	bl	8000220 <memchr>
 8005c10:	b138      	cbz	r0, 8005c22 <_svfiprintf_r+0x142>
 8005c12:	2340      	movs	r3, #64	; 0x40
 8005c14:	1b40      	subs	r0, r0, r5
 8005c16:	fa03 f000 	lsl.w	r0, r3, r0
 8005c1a:	9b04      	ldr	r3, [sp, #16]
 8005c1c:	4303      	orrs	r3, r0
 8005c1e:	3701      	adds	r7, #1
 8005c20:	9304      	str	r3, [sp, #16]
 8005c22:	7839      	ldrb	r1, [r7, #0]
 8005c24:	4827      	ldr	r0, [pc, #156]	; (8005cc4 <_svfiprintf_r+0x1e4>)
 8005c26:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8005c2a:	2206      	movs	r2, #6
 8005c2c:	1c7e      	adds	r6, r7, #1
 8005c2e:	f7fa faf7 	bl	8000220 <memchr>
 8005c32:	2800      	cmp	r0, #0
 8005c34:	d038      	beq.n	8005ca8 <_svfiprintf_r+0x1c8>
 8005c36:	4b24      	ldr	r3, [pc, #144]	; (8005cc8 <_svfiprintf_r+0x1e8>)
 8005c38:	bb13      	cbnz	r3, 8005c80 <_svfiprintf_r+0x1a0>
 8005c3a:	9b03      	ldr	r3, [sp, #12]
 8005c3c:	3307      	adds	r3, #7
 8005c3e:	f023 0307 	bic.w	r3, r3, #7
 8005c42:	3308      	adds	r3, #8
 8005c44:	9303      	str	r3, [sp, #12]
 8005c46:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005c48:	444b      	add	r3, r9
 8005c4a:	9309      	str	r3, [sp, #36]	; 0x24
 8005c4c:	e76d      	b.n	8005b2a <_svfiprintf_r+0x4a>
 8005c4e:	fb05 3202 	mla	r2, r5, r2, r3
 8005c52:	2001      	movs	r0, #1
 8005c54:	460f      	mov	r7, r1
 8005c56:	e7a6      	b.n	8005ba6 <_svfiprintf_r+0xc6>
 8005c58:	2300      	movs	r3, #0
 8005c5a:	3701      	adds	r7, #1
 8005c5c:	9305      	str	r3, [sp, #20]
 8005c5e:	4619      	mov	r1, r3
 8005c60:	250a      	movs	r5, #10
 8005c62:	4638      	mov	r0, r7
 8005c64:	f810 2b01 	ldrb.w	r2, [r0], #1
 8005c68:	3a30      	subs	r2, #48	; 0x30
 8005c6a:	2a09      	cmp	r2, #9
 8005c6c:	d903      	bls.n	8005c76 <_svfiprintf_r+0x196>
 8005c6e:	2b00      	cmp	r3, #0
 8005c70:	d0c8      	beq.n	8005c04 <_svfiprintf_r+0x124>
 8005c72:	9105      	str	r1, [sp, #20]
 8005c74:	e7c6      	b.n	8005c04 <_svfiprintf_r+0x124>
 8005c76:	fb05 2101 	mla	r1, r5, r1, r2
 8005c7a:	2301      	movs	r3, #1
 8005c7c:	4607      	mov	r7, r0
 8005c7e:	e7f0      	b.n	8005c62 <_svfiprintf_r+0x182>
 8005c80:	ab03      	add	r3, sp, #12
 8005c82:	9300      	str	r3, [sp, #0]
 8005c84:	4622      	mov	r2, r4
 8005c86:	4b11      	ldr	r3, [pc, #68]	; (8005ccc <_svfiprintf_r+0x1ec>)
 8005c88:	a904      	add	r1, sp, #16
 8005c8a:	4640      	mov	r0, r8
 8005c8c:	f7fc f8de 	bl	8001e4c <_printf_float>
 8005c90:	f1b0 3fff 	cmp.w	r0, #4294967295
 8005c94:	4681      	mov	r9, r0
 8005c96:	d1d6      	bne.n	8005c46 <_svfiprintf_r+0x166>
 8005c98:	89a3      	ldrh	r3, [r4, #12]
 8005c9a:	065b      	lsls	r3, r3, #25
 8005c9c:	f53f af35 	bmi.w	8005b0a <_svfiprintf_r+0x2a>
 8005ca0:	9809      	ldr	r0, [sp, #36]	; 0x24
 8005ca2:	b01d      	add	sp, #116	; 0x74
 8005ca4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005ca8:	ab03      	add	r3, sp, #12
 8005caa:	9300      	str	r3, [sp, #0]
 8005cac:	4622      	mov	r2, r4
 8005cae:	4b07      	ldr	r3, [pc, #28]	; (8005ccc <_svfiprintf_r+0x1ec>)
 8005cb0:	a904      	add	r1, sp, #16
 8005cb2:	4640      	mov	r0, r8
 8005cb4:	f7fc fb76 	bl	80023a4 <_printf_i>
 8005cb8:	e7ea      	b.n	8005c90 <_svfiprintf_r+0x1b0>
 8005cba:	bf00      	nop
 8005cbc:	0800692c 	.word	0x0800692c
 8005cc0:	08006932 	.word	0x08006932
 8005cc4:	08006936 	.word	0x08006936
 8005cc8:	08001e4d 	.word	0x08001e4d
 8005ccc:	08005a2d 	.word	0x08005a2d

08005cd0 <__sfputc_r>:
 8005cd0:	6893      	ldr	r3, [r2, #8]
 8005cd2:	3b01      	subs	r3, #1
 8005cd4:	2b00      	cmp	r3, #0
 8005cd6:	b410      	push	{r4}
 8005cd8:	6093      	str	r3, [r2, #8]
 8005cda:	da07      	bge.n	8005cec <__sfputc_r+0x1c>
 8005cdc:	6994      	ldr	r4, [r2, #24]
 8005cde:	42a3      	cmp	r3, r4
 8005ce0:	db01      	blt.n	8005ce6 <__sfputc_r+0x16>
 8005ce2:	290a      	cmp	r1, #10
 8005ce4:	d102      	bne.n	8005cec <__sfputc_r+0x1c>
 8005ce6:	bc10      	pop	{r4}
 8005ce8:	f7fd bdac 	b.w	8003844 <__swbuf_r>
 8005cec:	6813      	ldr	r3, [r2, #0]
 8005cee:	1c58      	adds	r0, r3, #1
 8005cf0:	6010      	str	r0, [r2, #0]
 8005cf2:	7019      	strb	r1, [r3, #0]
 8005cf4:	4608      	mov	r0, r1
 8005cf6:	bc10      	pop	{r4}
 8005cf8:	4770      	bx	lr

08005cfa <__sfputs_r>:
 8005cfa:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005cfc:	4606      	mov	r6, r0
 8005cfe:	460f      	mov	r7, r1
 8005d00:	4614      	mov	r4, r2
 8005d02:	18d5      	adds	r5, r2, r3
 8005d04:	42ac      	cmp	r4, r5
 8005d06:	d101      	bne.n	8005d0c <__sfputs_r+0x12>
 8005d08:	2000      	movs	r0, #0
 8005d0a:	e007      	b.n	8005d1c <__sfputs_r+0x22>
 8005d0c:	463a      	mov	r2, r7
 8005d0e:	f814 1b01 	ldrb.w	r1, [r4], #1
 8005d12:	4630      	mov	r0, r6
 8005d14:	f7ff ffdc 	bl	8005cd0 <__sfputc_r>
 8005d18:	1c43      	adds	r3, r0, #1
 8005d1a:	d1f3      	bne.n	8005d04 <__sfputs_r+0xa>
 8005d1c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08005d20 <_vfiprintf_r>:
 8005d20:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005d24:	460c      	mov	r4, r1
 8005d26:	b09d      	sub	sp, #116	; 0x74
 8005d28:	4617      	mov	r7, r2
 8005d2a:	461d      	mov	r5, r3
 8005d2c:	4606      	mov	r6, r0
 8005d2e:	b118      	cbz	r0, 8005d38 <_vfiprintf_r+0x18>
 8005d30:	6983      	ldr	r3, [r0, #24]
 8005d32:	b90b      	cbnz	r3, 8005d38 <_vfiprintf_r+0x18>
 8005d34:	f7fe fd7e 	bl	8004834 <__sinit>
 8005d38:	4b7c      	ldr	r3, [pc, #496]	; (8005f2c <_vfiprintf_r+0x20c>)
 8005d3a:	429c      	cmp	r4, r3
 8005d3c:	d158      	bne.n	8005df0 <_vfiprintf_r+0xd0>
 8005d3e:	6874      	ldr	r4, [r6, #4]
 8005d40:	89a3      	ldrh	r3, [r4, #12]
 8005d42:	0718      	lsls	r0, r3, #28
 8005d44:	d55e      	bpl.n	8005e04 <_vfiprintf_r+0xe4>
 8005d46:	6923      	ldr	r3, [r4, #16]
 8005d48:	2b00      	cmp	r3, #0
 8005d4a:	d05b      	beq.n	8005e04 <_vfiprintf_r+0xe4>
 8005d4c:	2300      	movs	r3, #0
 8005d4e:	9309      	str	r3, [sp, #36]	; 0x24
 8005d50:	2320      	movs	r3, #32
 8005d52:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8005d56:	2330      	movs	r3, #48	; 0x30
 8005d58:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8005d5c:	9503      	str	r5, [sp, #12]
 8005d5e:	f04f 0b01 	mov.w	fp, #1
 8005d62:	46b8      	mov	r8, r7
 8005d64:	4645      	mov	r5, r8
 8005d66:	f815 3b01 	ldrb.w	r3, [r5], #1
 8005d6a:	b10b      	cbz	r3, 8005d70 <_vfiprintf_r+0x50>
 8005d6c:	2b25      	cmp	r3, #37	; 0x25
 8005d6e:	d154      	bne.n	8005e1a <_vfiprintf_r+0xfa>
 8005d70:	ebb8 0a07 	subs.w	sl, r8, r7
 8005d74:	d00b      	beq.n	8005d8e <_vfiprintf_r+0x6e>
 8005d76:	4653      	mov	r3, sl
 8005d78:	463a      	mov	r2, r7
 8005d7a:	4621      	mov	r1, r4
 8005d7c:	4630      	mov	r0, r6
 8005d7e:	f7ff ffbc 	bl	8005cfa <__sfputs_r>
 8005d82:	3001      	adds	r0, #1
 8005d84:	f000 80c2 	beq.w	8005f0c <_vfiprintf_r+0x1ec>
 8005d88:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005d8a:	4453      	add	r3, sl
 8005d8c:	9309      	str	r3, [sp, #36]	; 0x24
 8005d8e:	f898 3000 	ldrb.w	r3, [r8]
 8005d92:	2b00      	cmp	r3, #0
 8005d94:	f000 80ba 	beq.w	8005f0c <_vfiprintf_r+0x1ec>
 8005d98:	2300      	movs	r3, #0
 8005d9a:	f04f 32ff 	mov.w	r2, #4294967295
 8005d9e:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8005da2:	9304      	str	r3, [sp, #16]
 8005da4:	9307      	str	r3, [sp, #28]
 8005da6:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8005daa:	931a      	str	r3, [sp, #104]	; 0x68
 8005dac:	46a8      	mov	r8, r5
 8005dae:	2205      	movs	r2, #5
 8005db0:	f818 1b01 	ldrb.w	r1, [r8], #1
 8005db4:	485e      	ldr	r0, [pc, #376]	; (8005f30 <_vfiprintf_r+0x210>)
 8005db6:	f7fa fa33 	bl	8000220 <memchr>
 8005dba:	9b04      	ldr	r3, [sp, #16]
 8005dbc:	bb78      	cbnz	r0, 8005e1e <_vfiprintf_r+0xfe>
 8005dbe:	06d9      	lsls	r1, r3, #27
 8005dc0:	bf44      	itt	mi
 8005dc2:	2220      	movmi	r2, #32
 8005dc4:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 8005dc8:	071a      	lsls	r2, r3, #28
 8005dca:	bf44      	itt	mi
 8005dcc:	222b      	movmi	r2, #43	; 0x2b
 8005dce:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 8005dd2:	782a      	ldrb	r2, [r5, #0]
 8005dd4:	2a2a      	cmp	r2, #42	; 0x2a
 8005dd6:	d02a      	beq.n	8005e2e <_vfiprintf_r+0x10e>
 8005dd8:	9a07      	ldr	r2, [sp, #28]
 8005dda:	46a8      	mov	r8, r5
 8005ddc:	2000      	movs	r0, #0
 8005dde:	250a      	movs	r5, #10
 8005de0:	4641      	mov	r1, r8
 8005de2:	f811 3b01 	ldrb.w	r3, [r1], #1
 8005de6:	3b30      	subs	r3, #48	; 0x30
 8005de8:	2b09      	cmp	r3, #9
 8005dea:	d969      	bls.n	8005ec0 <_vfiprintf_r+0x1a0>
 8005dec:	b360      	cbz	r0, 8005e48 <_vfiprintf_r+0x128>
 8005dee:	e024      	b.n	8005e3a <_vfiprintf_r+0x11a>
 8005df0:	4b50      	ldr	r3, [pc, #320]	; (8005f34 <_vfiprintf_r+0x214>)
 8005df2:	429c      	cmp	r4, r3
 8005df4:	d101      	bne.n	8005dfa <_vfiprintf_r+0xda>
 8005df6:	68b4      	ldr	r4, [r6, #8]
 8005df8:	e7a2      	b.n	8005d40 <_vfiprintf_r+0x20>
 8005dfa:	4b4f      	ldr	r3, [pc, #316]	; (8005f38 <_vfiprintf_r+0x218>)
 8005dfc:	429c      	cmp	r4, r3
 8005dfe:	bf08      	it	eq
 8005e00:	68f4      	ldreq	r4, [r6, #12]
 8005e02:	e79d      	b.n	8005d40 <_vfiprintf_r+0x20>
 8005e04:	4621      	mov	r1, r4
 8005e06:	4630      	mov	r0, r6
 8005e08:	f7fd fd6e 	bl	80038e8 <__swsetup_r>
 8005e0c:	2800      	cmp	r0, #0
 8005e0e:	d09d      	beq.n	8005d4c <_vfiprintf_r+0x2c>
 8005e10:	f04f 30ff 	mov.w	r0, #4294967295
 8005e14:	b01d      	add	sp, #116	; 0x74
 8005e16:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005e1a:	46a8      	mov	r8, r5
 8005e1c:	e7a2      	b.n	8005d64 <_vfiprintf_r+0x44>
 8005e1e:	4a44      	ldr	r2, [pc, #272]	; (8005f30 <_vfiprintf_r+0x210>)
 8005e20:	1a80      	subs	r0, r0, r2
 8005e22:	fa0b f000 	lsl.w	r0, fp, r0
 8005e26:	4318      	orrs	r0, r3
 8005e28:	9004      	str	r0, [sp, #16]
 8005e2a:	4645      	mov	r5, r8
 8005e2c:	e7be      	b.n	8005dac <_vfiprintf_r+0x8c>
 8005e2e:	9a03      	ldr	r2, [sp, #12]
 8005e30:	1d11      	adds	r1, r2, #4
 8005e32:	6812      	ldr	r2, [r2, #0]
 8005e34:	9103      	str	r1, [sp, #12]
 8005e36:	2a00      	cmp	r2, #0
 8005e38:	db01      	blt.n	8005e3e <_vfiprintf_r+0x11e>
 8005e3a:	9207      	str	r2, [sp, #28]
 8005e3c:	e004      	b.n	8005e48 <_vfiprintf_r+0x128>
 8005e3e:	4252      	negs	r2, r2
 8005e40:	f043 0302 	orr.w	r3, r3, #2
 8005e44:	9207      	str	r2, [sp, #28]
 8005e46:	9304      	str	r3, [sp, #16]
 8005e48:	f898 3000 	ldrb.w	r3, [r8]
 8005e4c:	2b2e      	cmp	r3, #46	; 0x2e
 8005e4e:	d10e      	bne.n	8005e6e <_vfiprintf_r+0x14e>
 8005e50:	f898 3001 	ldrb.w	r3, [r8, #1]
 8005e54:	2b2a      	cmp	r3, #42	; 0x2a
 8005e56:	d138      	bne.n	8005eca <_vfiprintf_r+0x1aa>
 8005e58:	9b03      	ldr	r3, [sp, #12]
 8005e5a:	1d1a      	adds	r2, r3, #4
 8005e5c:	681b      	ldr	r3, [r3, #0]
 8005e5e:	9203      	str	r2, [sp, #12]
 8005e60:	2b00      	cmp	r3, #0
 8005e62:	bfb8      	it	lt
 8005e64:	f04f 33ff 	movlt.w	r3, #4294967295
 8005e68:	f108 0802 	add.w	r8, r8, #2
 8005e6c:	9305      	str	r3, [sp, #20]
 8005e6e:	4d33      	ldr	r5, [pc, #204]	; (8005f3c <_vfiprintf_r+0x21c>)
 8005e70:	f898 1000 	ldrb.w	r1, [r8]
 8005e74:	2203      	movs	r2, #3
 8005e76:	4628      	mov	r0, r5
 8005e78:	f7fa f9d2 	bl	8000220 <memchr>
 8005e7c:	b140      	cbz	r0, 8005e90 <_vfiprintf_r+0x170>
 8005e7e:	2340      	movs	r3, #64	; 0x40
 8005e80:	1b40      	subs	r0, r0, r5
 8005e82:	fa03 f000 	lsl.w	r0, r3, r0
 8005e86:	9b04      	ldr	r3, [sp, #16]
 8005e88:	4303      	orrs	r3, r0
 8005e8a:	f108 0801 	add.w	r8, r8, #1
 8005e8e:	9304      	str	r3, [sp, #16]
 8005e90:	f898 1000 	ldrb.w	r1, [r8]
 8005e94:	482a      	ldr	r0, [pc, #168]	; (8005f40 <_vfiprintf_r+0x220>)
 8005e96:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8005e9a:	2206      	movs	r2, #6
 8005e9c:	f108 0701 	add.w	r7, r8, #1
 8005ea0:	f7fa f9be 	bl	8000220 <memchr>
 8005ea4:	2800      	cmp	r0, #0
 8005ea6:	d037      	beq.n	8005f18 <_vfiprintf_r+0x1f8>
 8005ea8:	4b26      	ldr	r3, [pc, #152]	; (8005f44 <_vfiprintf_r+0x224>)
 8005eaa:	bb1b      	cbnz	r3, 8005ef4 <_vfiprintf_r+0x1d4>
 8005eac:	9b03      	ldr	r3, [sp, #12]
 8005eae:	3307      	adds	r3, #7
 8005eb0:	f023 0307 	bic.w	r3, r3, #7
 8005eb4:	3308      	adds	r3, #8
 8005eb6:	9303      	str	r3, [sp, #12]
 8005eb8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005eba:	444b      	add	r3, r9
 8005ebc:	9309      	str	r3, [sp, #36]	; 0x24
 8005ebe:	e750      	b.n	8005d62 <_vfiprintf_r+0x42>
 8005ec0:	fb05 3202 	mla	r2, r5, r2, r3
 8005ec4:	2001      	movs	r0, #1
 8005ec6:	4688      	mov	r8, r1
 8005ec8:	e78a      	b.n	8005de0 <_vfiprintf_r+0xc0>
 8005eca:	2300      	movs	r3, #0
 8005ecc:	f108 0801 	add.w	r8, r8, #1
 8005ed0:	9305      	str	r3, [sp, #20]
 8005ed2:	4619      	mov	r1, r3
 8005ed4:	250a      	movs	r5, #10
 8005ed6:	4640      	mov	r0, r8
 8005ed8:	f810 2b01 	ldrb.w	r2, [r0], #1
 8005edc:	3a30      	subs	r2, #48	; 0x30
 8005ede:	2a09      	cmp	r2, #9
 8005ee0:	d903      	bls.n	8005eea <_vfiprintf_r+0x1ca>
 8005ee2:	2b00      	cmp	r3, #0
 8005ee4:	d0c3      	beq.n	8005e6e <_vfiprintf_r+0x14e>
 8005ee6:	9105      	str	r1, [sp, #20]
 8005ee8:	e7c1      	b.n	8005e6e <_vfiprintf_r+0x14e>
 8005eea:	fb05 2101 	mla	r1, r5, r1, r2
 8005eee:	2301      	movs	r3, #1
 8005ef0:	4680      	mov	r8, r0
 8005ef2:	e7f0      	b.n	8005ed6 <_vfiprintf_r+0x1b6>
 8005ef4:	ab03      	add	r3, sp, #12
 8005ef6:	9300      	str	r3, [sp, #0]
 8005ef8:	4622      	mov	r2, r4
 8005efa:	4b13      	ldr	r3, [pc, #76]	; (8005f48 <_vfiprintf_r+0x228>)
 8005efc:	a904      	add	r1, sp, #16
 8005efe:	4630      	mov	r0, r6
 8005f00:	f7fb ffa4 	bl	8001e4c <_printf_float>
 8005f04:	f1b0 3fff 	cmp.w	r0, #4294967295
 8005f08:	4681      	mov	r9, r0
 8005f0a:	d1d5      	bne.n	8005eb8 <_vfiprintf_r+0x198>
 8005f0c:	89a3      	ldrh	r3, [r4, #12]
 8005f0e:	065b      	lsls	r3, r3, #25
 8005f10:	f53f af7e 	bmi.w	8005e10 <_vfiprintf_r+0xf0>
 8005f14:	9809      	ldr	r0, [sp, #36]	; 0x24
 8005f16:	e77d      	b.n	8005e14 <_vfiprintf_r+0xf4>
 8005f18:	ab03      	add	r3, sp, #12
 8005f1a:	9300      	str	r3, [sp, #0]
 8005f1c:	4622      	mov	r2, r4
 8005f1e:	4b0a      	ldr	r3, [pc, #40]	; (8005f48 <_vfiprintf_r+0x228>)
 8005f20:	a904      	add	r1, sp, #16
 8005f22:	4630      	mov	r0, r6
 8005f24:	f7fc fa3e 	bl	80023a4 <_printf_i>
 8005f28:	e7ec      	b.n	8005f04 <_vfiprintf_r+0x1e4>
 8005f2a:	bf00      	nop
 8005f2c:	080067e0 	.word	0x080067e0
 8005f30:	0800692c 	.word	0x0800692c
 8005f34:	08006800 	.word	0x08006800
 8005f38:	080067c0 	.word	0x080067c0
 8005f3c:	08006932 	.word	0x08006932
 8005f40:	08006936 	.word	0x08006936
 8005f44:	08001e4d 	.word	0x08001e4d
 8005f48:	08005cfb 	.word	0x08005cfb

08005f4c <_sbrk_r>:
 8005f4c:	b538      	push	{r3, r4, r5, lr}
 8005f4e:	4c06      	ldr	r4, [pc, #24]	; (8005f68 <_sbrk_r+0x1c>)
 8005f50:	2300      	movs	r3, #0
 8005f52:	4605      	mov	r5, r0
 8005f54:	4608      	mov	r0, r1
 8005f56:	6023      	str	r3, [r4, #0]
 8005f58:	f7fb f8c6 	bl	80010e8 <_sbrk>
 8005f5c:	1c43      	adds	r3, r0, #1
 8005f5e:	d102      	bne.n	8005f66 <_sbrk_r+0x1a>
 8005f60:	6823      	ldr	r3, [r4, #0]
 8005f62:	b103      	cbz	r3, 8005f66 <_sbrk_r+0x1a>
 8005f64:	602b      	str	r3, [r5, #0]
 8005f66:	bd38      	pop	{r3, r4, r5, pc}
 8005f68:	200002f8 	.word	0x200002f8

08005f6c <__sread>:
 8005f6c:	b510      	push	{r4, lr}
 8005f6e:	460c      	mov	r4, r1
 8005f70:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8005f74:	f000 f8f4 	bl	8006160 <_read_r>
 8005f78:	2800      	cmp	r0, #0
 8005f7a:	bfab      	itete	ge
 8005f7c:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8005f7e:	89a3      	ldrhlt	r3, [r4, #12]
 8005f80:	181b      	addge	r3, r3, r0
 8005f82:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8005f86:	bfac      	ite	ge
 8005f88:	6563      	strge	r3, [r4, #84]	; 0x54
 8005f8a:	81a3      	strhlt	r3, [r4, #12]
 8005f8c:	bd10      	pop	{r4, pc}

08005f8e <__swrite>:
 8005f8e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005f92:	461f      	mov	r7, r3
 8005f94:	898b      	ldrh	r3, [r1, #12]
 8005f96:	05db      	lsls	r3, r3, #23
 8005f98:	4605      	mov	r5, r0
 8005f9a:	460c      	mov	r4, r1
 8005f9c:	4616      	mov	r6, r2
 8005f9e:	d505      	bpl.n	8005fac <__swrite+0x1e>
 8005fa0:	2302      	movs	r3, #2
 8005fa2:	2200      	movs	r2, #0
 8005fa4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8005fa8:	f000 f886 	bl	80060b8 <_lseek_r>
 8005fac:	89a3      	ldrh	r3, [r4, #12]
 8005fae:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8005fb2:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8005fb6:	81a3      	strh	r3, [r4, #12]
 8005fb8:	4632      	mov	r2, r6
 8005fba:	463b      	mov	r3, r7
 8005fbc:	4628      	mov	r0, r5
 8005fbe:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8005fc2:	f000 b835 	b.w	8006030 <_write_r>

08005fc6 <__sseek>:
 8005fc6:	b510      	push	{r4, lr}
 8005fc8:	460c      	mov	r4, r1
 8005fca:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8005fce:	f000 f873 	bl	80060b8 <_lseek_r>
 8005fd2:	1c43      	adds	r3, r0, #1
 8005fd4:	89a3      	ldrh	r3, [r4, #12]
 8005fd6:	bf15      	itete	ne
 8005fd8:	6560      	strne	r0, [r4, #84]	; 0x54
 8005fda:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8005fde:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8005fe2:	81a3      	strheq	r3, [r4, #12]
 8005fe4:	bf18      	it	ne
 8005fe6:	81a3      	strhne	r3, [r4, #12]
 8005fe8:	bd10      	pop	{r4, pc}

08005fea <__sclose>:
 8005fea:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8005fee:	f000 b831 	b.w	8006054 <_close_r>

08005ff2 <strncmp>:
 8005ff2:	b510      	push	{r4, lr}
 8005ff4:	b16a      	cbz	r2, 8006012 <strncmp+0x20>
 8005ff6:	3901      	subs	r1, #1
 8005ff8:	1884      	adds	r4, r0, r2
 8005ffa:	f810 3b01 	ldrb.w	r3, [r0], #1
 8005ffe:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 8006002:	4293      	cmp	r3, r2
 8006004:	d103      	bne.n	800600e <strncmp+0x1c>
 8006006:	42a0      	cmp	r0, r4
 8006008:	d001      	beq.n	800600e <strncmp+0x1c>
 800600a:	2b00      	cmp	r3, #0
 800600c:	d1f5      	bne.n	8005ffa <strncmp+0x8>
 800600e:	1a98      	subs	r0, r3, r2
 8006010:	bd10      	pop	{r4, pc}
 8006012:	4610      	mov	r0, r2
 8006014:	e7fc      	b.n	8006010 <strncmp+0x1e>

08006016 <__ascii_wctomb>:
 8006016:	b149      	cbz	r1, 800602c <__ascii_wctomb+0x16>
 8006018:	2aff      	cmp	r2, #255	; 0xff
 800601a:	bf85      	ittet	hi
 800601c:	238a      	movhi	r3, #138	; 0x8a
 800601e:	6003      	strhi	r3, [r0, #0]
 8006020:	700a      	strbls	r2, [r1, #0]
 8006022:	f04f 30ff 	movhi.w	r0, #4294967295
 8006026:	bf98      	it	ls
 8006028:	2001      	movls	r0, #1
 800602a:	4770      	bx	lr
 800602c:	4608      	mov	r0, r1
 800602e:	4770      	bx	lr

08006030 <_write_r>:
 8006030:	b538      	push	{r3, r4, r5, lr}
 8006032:	4c07      	ldr	r4, [pc, #28]	; (8006050 <_write_r+0x20>)
 8006034:	4605      	mov	r5, r0
 8006036:	4608      	mov	r0, r1
 8006038:	4611      	mov	r1, r2
 800603a:	2200      	movs	r2, #0
 800603c:	6022      	str	r2, [r4, #0]
 800603e:	461a      	mov	r2, r3
 8006040:	f000 f959 	bl	80062f6 <_write>
 8006044:	1c43      	adds	r3, r0, #1
 8006046:	d102      	bne.n	800604e <_write_r+0x1e>
 8006048:	6823      	ldr	r3, [r4, #0]
 800604a:	b103      	cbz	r3, 800604e <_write_r+0x1e>
 800604c:	602b      	str	r3, [r5, #0]
 800604e:	bd38      	pop	{r3, r4, r5, pc}
 8006050:	200002f8 	.word	0x200002f8

08006054 <_close_r>:
 8006054:	b538      	push	{r3, r4, r5, lr}
 8006056:	4c06      	ldr	r4, [pc, #24]	; (8006070 <_close_r+0x1c>)
 8006058:	2300      	movs	r3, #0
 800605a:	4605      	mov	r5, r0
 800605c:	4608      	mov	r0, r1
 800605e:	6023      	str	r3, [r4, #0]
 8006060:	f000 f978 	bl	8006354 <_close>
 8006064:	1c43      	adds	r3, r0, #1
 8006066:	d102      	bne.n	800606e <_close_r+0x1a>
 8006068:	6823      	ldr	r3, [r4, #0]
 800606a:	b103      	cbz	r3, 800606e <_close_r+0x1a>
 800606c:	602b      	str	r3, [r5, #0]
 800606e:	bd38      	pop	{r3, r4, r5, pc}
 8006070:	200002f8 	.word	0x200002f8

08006074 <_fstat_r>:
 8006074:	b538      	push	{r3, r4, r5, lr}
 8006076:	4c07      	ldr	r4, [pc, #28]	; (8006094 <_fstat_r+0x20>)
 8006078:	2300      	movs	r3, #0
 800607a:	4605      	mov	r5, r0
 800607c:	4608      	mov	r0, r1
 800607e:	4611      	mov	r1, r2
 8006080:	6023      	str	r3, [r4, #0]
 8006082:	f000 f9ae 	bl	80063e2 <_fstat>
 8006086:	1c43      	adds	r3, r0, #1
 8006088:	d102      	bne.n	8006090 <_fstat_r+0x1c>
 800608a:	6823      	ldr	r3, [r4, #0]
 800608c:	b103      	cbz	r3, 8006090 <_fstat_r+0x1c>
 800608e:	602b      	str	r3, [r5, #0]
 8006090:	bd38      	pop	{r3, r4, r5, pc}
 8006092:	bf00      	nop
 8006094:	200002f8 	.word	0x200002f8

08006098 <_isatty_r>:
 8006098:	b538      	push	{r3, r4, r5, lr}
 800609a:	4c06      	ldr	r4, [pc, #24]	; (80060b4 <_isatty_r+0x1c>)
 800609c:	2300      	movs	r3, #0
 800609e:	4605      	mov	r5, r0
 80060a0:	4608      	mov	r0, r1
 80060a2:	6023      	str	r3, [r4, #0]
 80060a4:	f000 fb02 	bl	80066ac <_isatty>
 80060a8:	1c43      	adds	r3, r0, #1
 80060aa:	d102      	bne.n	80060b2 <_isatty_r+0x1a>
 80060ac:	6823      	ldr	r3, [r4, #0]
 80060ae:	b103      	cbz	r3, 80060b2 <_isatty_r+0x1a>
 80060b0:	602b      	str	r3, [r5, #0]
 80060b2:	bd38      	pop	{r3, r4, r5, pc}
 80060b4:	200002f8 	.word	0x200002f8

080060b8 <_lseek_r>:
 80060b8:	b538      	push	{r3, r4, r5, lr}
 80060ba:	4c07      	ldr	r4, [pc, #28]	; (80060d8 <_lseek_r+0x20>)
 80060bc:	4605      	mov	r5, r0
 80060be:	4608      	mov	r0, r1
 80060c0:	4611      	mov	r1, r2
 80060c2:	2200      	movs	r2, #0
 80060c4:	6022      	str	r2, [r4, #0]
 80060c6:	461a      	mov	r2, r3
 80060c8:	f000 f903 	bl	80062d2 <_lseek>
 80060cc:	1c43      	adds	r3, r0, #1
 80060ce:	d102      	bne.n	80060d6 <_lseek_r+0x1e>
 80060d0:	6823      	ldr	r3, [r4, #0]
 80060d2:	b103      	cbz	r3, 80060d6 <_lseek_r+0x1e>
 80060d4:	602b      	str	r3, [r5, #0]
 80060d6:	bd38      	pop	{r3, r4, r5, pc}
 80060d8:	200002f8 	.word	0x200002f8

080060dc <memmove>:
 80060dc:	4288      	cmp	r0, r1
 80060de:	b510      	push	{r4, lr}
 80060e0:	eb01 0302 	add.w	r3, r1, r2
 80060e4:	d807      	bhi.n	80060f6 <memmove+0x1a>
 80060e6:	1e42      	subs	r2, r0, #1
 80060e8:	4299      	cmp	r1, r3
 80060ea:	d00a      	beq.n	8006102 <memmove+0x26>
 80060ec:	f811 4b01 	ldrb.w	r4, [r1], #1
 80060f0:	f802 4f01 	strb.w	r4, [r2, #1]!
 80060f4:	e7f8      	b.n	80060e8 <memmove+0xc>
 80060f6:	4283      	cmp	r3, r0
 80060f8:	d9f5      	bls.n	80060e6 <memmove+0xa>
 80060fa:	1881      	adds	r1, r0, r2
 80060fc:	1ad2      	subs	r2, r2, r3
 80060fe:	42d3      	cmn	r3, r2
 8006100:	d100      	bne.n	8006104 <memmove+0x28>
 8006102:	bd10      	pop	{r4, pc}
 8006104:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8006108:	f801 4d01 	strb.w	r4, [r1, #-1]!
 800610c:	e7f7      	b.n	80060fe <memmove+0x22>

0800610e <__malloc_lock>:
 800610e:	4770      	bx	lr

08006110 <__malloc_unlock>:
 8006110:	4770      	bx	lr

08006112 <_realloc_r>:
 8006112:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006114:	4607      	mov	r7, r0
 8006116:	4614      	mov	r4, r2
 8006118:	460e      	mov	r6, r1
 800611a:	b921      	cbnz	r1, 8006126 <_realloc_r+0x14>
 800611c:	4611      	mov	r1, r2
 800611e:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8006122:	f7ff bc29 	b.w	8005978 <_malloc_r>
 8006126:	b922      	cbnz	r2, 8006132 <_realloc_r+0x20>
 8006128:	f7ff fbd8 	bl	80058dc <_free_r>
 800612c:	4625      	mov	r5, r4
 800612e:	4628      	mov	r0, r5
 8006130:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8006132:	f000 f827 	bl	8006184 <_malloc_usable_size_r>
 8006136:	42a0      	cmp	r0, r4
 8006138:	d20f      	bcs.n	800615a <_realloc_r+0x48>
 800613a:	4621      	mov	r1, r4
 800613c:	4638      	mov	r0, r7
 800613e:	f7ff fc1b 	bl	8005978 <_malloc_r>
 8006142:	4605      	mov	r5, r0
 8006144:	2800      	cmp	r0, #0
 8006146:	d0f2      	beq.n	800612e <_realloc_r+0x1c>
 8006148:	4631      	mov	r1, r6
 800614a:	4622      	mov	r2, r4
 800614c:	f7fe ffb4 	bl	80050b8 <memcpy>
 8006150:	4631      	mov	r1, r6
 8006152:	4638      	mov	r0, r7
 8006154:	f7ff fbc2 	bl	80058dc <_free_r>
 8006158:	e7e9      	b.n	800612e <_realloc_r+0x1c>
 800615a:	4635      	mov	r5, r6
 800615c:	e7e7      	b.n	800612e <_realloc_r+0x1c>
	...

08006160 <_read_r>:
 8006160:	b538      	push	{r3, r4, r5, lr}
 8006162:	4c07      	ldr	r4, [pc, #28]	; (8006180 <_read_r+0x20>)
 8006164:	4605      	mov	r5, r0
 8006166:	4608      	mov	r0, r1
 8006168:	4611      	mov	r1, r2
 800616a:	2200      	movs	r2, #0
 800616c:	6022      	str	r2, [r4, #0]
 800616e:	461a      	mov	r2, r3
 8006170:	f000 f858 	bl	8006224 <_read>
 8006174:	1c43      	adds	r3, r0, #1
 8006176:	d102      	bne.n	800617e <_read_r+0x1e>
 8006178:	6823      	ldr	r3, [r4, #0]
 800617a:	b103      	cbz	r3, 800617e <_read_r+0x1e>
 800617c:	602b      	str	r3, [r5, #0]
 800617e:	bd38      	pop	{r3, r4, r5, pc}
 8006180:	200002f8 	.word	0x200002f8

08006184 <_malloc_usable_size_r>:
 8006184:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8006188:	1f18      	subs	r0, r3, #4
 800618a:	2b00      	cmp	r3, #0
 800618c:	bfbc      	itt	lt
 800618e:	580b      	ldrlt	r3, [r1, r0]
 8006190:	18c0      	addlt	r0, r0, r3
 8006192:	4770      	bx	lr

08006194 <findslot>:
 8006194:	4b0a      	ldr	r3, [pc, #40]	; (80061c0 <findslot+0x2c>)
 8006196:	b510      	push	{r4, lr}
 8006198:	4604      	mov	r4, r0
 800619a:	6818      	ldr	r0, [r3, #0]
 800619c:	b118      	cbz	r0, 80061a6 <findslot+0x12>
 800619e:	6983      	ldr	r3, [r0, #24]
 80061a0:	b90b      	cbnz	r3, 80061a6 <findslot+0x12>
 80061a2:	f7fe fb47 	bl	8004834 <__sinit>
 80061a6:	2c13      	cmp	r4, #19
 80061a8:	d807      	bhi.n	80061ba <findslot+0x26>
 80061aa:	4806      	ldr	r0, [pc, #24]	; (80061c4 <findslot+0x30>)
 80061ac:	f850 3034 	ldr.w	r3, [r0, r4, lsl #3]
 80061b0:	3301      	adds	r3, #1
 80061b2:	d002      	beq.n	80061ba <findslot+0x26>
 80061b4:	eb00 00c4 	add.w	r0, r0, r4, lsl #3
 80061b8:	bd10      	pop	{r4, pc}
 80061ba:	2000      	movs	r0, #0
 80061bc:	e7fc      	b.n	80061b8 <findslot+0x24>
 80061be:	bf00      	nop
 80061c0:	20000014 	.word	0x20000014
 80061c4:	2000022c 	.word	0x2000022c

080061c8 <checkerror>:
 80061c8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80061ca:	1c43      	adds	r3, r0, #1
 80061cc:	4605      	mov	r5, r0
 80061ce:	d109      	bne.n	80061e4 <checkerror+0x1c>
 80061d0:	f7fb fd7a 	bl	8001cc8 <__errno>
 80061d4:	2413      	movs	r4, #19
 80061d6:	4606      	mov	r6, r0
 80061d8:	2700      	movs	r7, #0
 80061da:	4620      	mov	r0, r4
 80061dc:	4639      	mov	r1, r7
 80061de:	beab      	bkpt	0x00ab
 80061e0:	4604      	mov	r4, r0
 80061e2:	6034      	str	r4, [r6, #0]
 80061e4:	4628      	mov	r0, r5
 80061e6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

080061e8 <error>:
 80061e8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80061ea:	4605      	mov	r5, r0
 80061ec:	f7fb fd6c 	bl	8001cc8 <__errno>
 80061f0:	2413      	movs	r4, #19
 80061f2:	4606      	mov	r6, r0
 80061f4:	2700      	movs	r7, #0
 80061f6:	4620      	mov	r0, r4
 80061f8:	4639      	mov	r1, r7
 80061fa:	beab      	bkpt	0x00ab
 80061fc:	4604      	mov	r4, r0
 80061fe:	6034      	str	r4, [r6, #0]
 8006200:	4628      	mov	r0, r5
 8006202:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08006204 <_swiread>:
 8006204:	b530      	push	{r4, r5, lr}
 8006206:	b085      	sub	sp, #20
 8006208:	e9cd 0101 	strd	r0, r1, [sp, #4]
 800620c:	9203      	str	r2, [sp, #12]
 800620e:	2406      	movs	r4, #6
 8006210:	ad01      	add	r5, sp, #4
 8006212:	4620      	mov	r0, r4
 8006214:	4629      	mov	r1, r5
 8006216:	beab      	bkpt	0x00ab
 8006218:	4604      	mov	r4, r0
 800621a:	4620      	mov	r0, r4
 800621c:	f7ff ffd4 	bl	80061c8 <checkerror>
 8006220:	b005      	add	sp, #20
 8006222:	bd30      	pop	{r4, r5, pc}

08006224 <_read>:
 8006224:	b570      	push	{r4, r5, r6, lr}
 8006226:	460e      	mov	r6, r1
 8006228:	4615      	mov	r5, r2
 800622a:	f7ff ffb3 	bl	8006194 <findslot>
 800622e:	4604      	mov	r4, r0
 8006230:	b930      	cbnz	r0, 8006240 <_read+0x1c>
 8006232:	f7fb fd49 	bl	8001cc8 <__errno>
 8006236:	2309      	movs	r3, #9
 8006238:	6003      	str	r3, [r0, #0]
 800623a:	f04f 30ff 	mov.w	r0, #4294967295
 800623e:	bd70      	pop	{r4, r5, r6, pc}
 8006240:	462a      	mov	r2, r5
 8006242:	4631      	mov	r1, r6
 8006244:	6800      	ldr	r0, [r0, #0]
 8006246:	f7ff ffdd 	bl	8006204 <_swiread>
 800624a:	1c43      	adds	r3, r0, #1
 800624c:	bf1f      	itttt	ne
 800624e:	6863      	ldrne	r3, [r4, #4]
 8006250:	1a28      	subne	r0, r5, r0
 8006252:	181b      	addne	r3, r3, r0
 8006254:	6063      	strne	r3, [r4, #4]
 8006256:	e7f2      	b.n	800623e <_read+0x1a>

08006258 <_swilseek>:
 8006258:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800625a:	460c      	mov	r4, r1
 800625c:	4616      	mov	r6, r2
 800625e:	f7ff ff99 	bl	8006194 <findslot>
 8006262:	4605      	mov	r5, r0
 8006264:	b940      	cbnz	r0, 8006278 <_swilseek+0x20>
 8006266:	f7fb fd2f 	bl	8001cc8 <__errno>
 800626a:	2309      	movs	r3, #9
 800626c:	6003      	str	r3, [r0, #0]
 800626e:	f04f 34ff 	mov.w	r4, #4294967295
 8006272:	4620      	mov	r0, r4
 8006274:	b003      	add	sp, #12
 8006276:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8006278:	2e02      	cmp	r6, #2
 800627a:	d903      	bls.n	8006284 <_swilseek+0x2c>
 800627c:	f7fb fd24 	bl	8001cc8 <__errno>
 8006280:	2316      	movs	r3, #22
 8006282:	e7f3      	b.n	800626c <_swilseek+0x14>
 8006284:	2e01      	cmp	r6, #1
 8006286:	d112      	bne.n	80062ae <_swilseek+0x56>
 8006288:	6843      	ldr	r3, [r0, #4]
 800628a:	18e4      	adds	r4, r4, r3
 800628c:	d4f6      	bmi.n	800627c <_swilseek+0x24>
 800628e:	682b      	ldr	r3, [r5, #0]
 8006290:	260a      	movs	r6, #10
 8006292:	e9cd 3400 	strd	r3, r4, [sp]
 8006296:	466f      	mov	r7, sp
 8006298:	4630      	mov	r0, r6
 800629a:	4639      	mov	r1, r7
 800629c:	beab      	bkpt	0x00ab
 800629e:	4606      	mov	r6, r0
 80062a0:	4630      	mov	r0, r6
 80062a2:	f7ff ff91 	bl	80061c8 <checkerror>
 80062a6:	2800      	cmp	r0, #0
 80062a8:	dbe1      	blt.n	800626e <_swilseek+0x16>
 80062aa:	606c      	str	r4, [r5, #4]
 80062ac:	e7e1      	b.n	8006272 <_swilseek+0x1a>
 80062ae:	2e02      	cmp	r6, #2
 80062b0:	d1ed      	bne.n	800628e <_swilseek+0x36>
 80062b2:	af02      	add	r7, sp, #8
 80062b4:	6803      	ldr	r3, [r0, #0]
 80062b6:	f847 3d08 	str.w	r3, [r7, #-8]!
 80062ba:	260c      	movs	r6, #12
 80062bc:	4630      	mov	r0, r6
 80062be:	4639      	mov	r1, r7
 80062c0:	beab      	bkpt	0x00ab
 80062c2:	4606      	mov	r6, r0
 80062c4:	4630      	mov	r0, r6
 80062c6:	f7ff ff7f 	bl	80061c8 <checkerror>
 80062ca:	1c43      	adds	r3, r0, #1
 80062cc:	d0cf      	beq.n	800626e <_swilseek+0x16>
 80062ce:	4404      	add	r4, r0
 80062d0:	e7dd      	b.n	800628e <_swilseek+0x36>

080062d2 <_lseek>:
 80062d2:	f7ff bfc1 	b.w	8006258 <_swilseek>

080062d6 <_swiwrite>:
 80062d6:	b530      	push	{r4, r5, lr}
 80062d8:	b085      	sub	sp, #20
 80062da:	e9cd 0101 	strd	r0, r1, [sp, #4]
 80062de:	9203      	str	r2, [sp, #12]
 80062e0:	2405      	movs	r4, #5
 80062e2:	ad01      	add	r5, sp, #4
 80062e4:	4620      	mov	r0, r4
 80062e6:	4629      	mov	r1, r5
 80062e8:	beab      	bkpt	0x00ab
 80062ea:	4604      	mov	r4, r0
 80062ec:	4620      	mov	r0, r4
 80062ee:	f7ff ff6b 	bl	80061c8 <checkerror>
 80062f2:	b005      	add	sp, #20
 80062f4:	bd30      	pop	{r4, r5, pc}

080062f6 <_write>:
 80062f6:	b570      	push	{r4, r5, r6, lr}
 80062f8:	460e      	mov	r6, r1
 80062fa:	4615      	mov	r5, r2
 80062fc:	f7ff ff4a 	bl	8006194 <findslot>
 8006300:	4604      	mov	r4, r0
 8006302:	b930      	cbnz	r0, 8006312 <_write+0x1c>
 8006304:	f7fb fce0 	bl	8001cc8 <__errno>
 8006308:	2309      	movs	r3, #9
 800630a:	6003      	str	r3, [r0, #0]
 800630c:	f04f 30ff 	mov.w	r0, #4294967295
 8006310:	bd70      	pop	{r4, r5, r6, pc}
 8006312:	462a      	mov	r2, r5
 8006314:	4631      	mov	r1, r6
 8006316:	6800      	ldr	r0, [r0, #0]
 8006318:	f7ff ffdd 	bl	80062d6 <_swiwrite>
 800631c:	1e02      	subs	r2, r0, #0
 800631e:	dbf5      	blt.n	800630c <_write+0x16>
 8006320:	6863      	ldr	r3, [r4, #4]
 8006322:	1aa8      	subs	r0, r5, r2
 8006324:	4403      	add	r3, r0
 8006326:	42aa      	cmp	r2, r5
 8006328:	6063      	str	r3, [r4, #4]
 800632a:	d1f1      	bne.n	8006310 <_write+0x1a>
 800632c:	2000      	movs	r0, #0
 800632e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8006332:	f7ff bf59 	b.w	80061e8 <error>

08006336 <_swiclose>:
 8006336:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8006338:	ad02      	add	r5, sp, #8
 800633a:	2402      	movs	r4, #2
 800633c:	f845 0d04 	str.w	r0, [r5, #-4]!
 8006340:	4620      	mov	r0, r4
 8006342:	4629      	mov	r1, r5
 8006344:	beab      	bkpt	0x00ab
 8006346:	4604      	mov	r4, r0
 8006348:	4620      	mov	r0, r4
 800634a:	f7ff ff3d 	bl	80061c8 <checkerror>
 800634e:	b003      	add	sp, #12
 8006350:	bd30      	pop	{r4, r5, pc}
	...

08006354 <_close>:
 8006354:	b538      	push	{r3, r4, r5, lr}
 8006356:	4605      	mov	r5, r0
 8006358:	f7ff ff1c 	bl	8006194 <findslot>
 800635c:	4604      	mov	r4, r0
 800635e:	b930      	cbnz	r0, 800636e <_close+0x1a>
 8006360:	f7fb fcb2 	bl	8001cc8 <__errno>
 8006364:	2309      	movs	r3, #9
 8006366:	6003      	str	r3, [r0, #0]
 8006368:	f04f 30ff 	mov.w	r0, #4294967295
 800636c:	bd38      	pop	{r3, r4, r5, pc}
 800636e:	3d01      	subs	r5, #1
 8006370:	2d01      	cmp	r5, #1
 8006372:	d809      	bhi.n	8006388 <_close+0x34>
 8006374:	4b09      	ldr	r3, [pc, #36]	; (800639c <_close+0x48>)
 8006376:	689a      	ldr	r2, [r3, #8]
 8006378:	691b      	ldr	r3, [r3, #16]
 800637a:	429a      	cmp	r2, r3
 800637c:	d104      	bne.n	8006388 <_close+0x34>
 800637e:	f04f 33ff 	mov.w	r3, #4294967295
 8006382:	6003      	str	r3, [r0, #0]
 8006384:	2000      	movs	r0, #0
 8006386:	e7f1      	b.n	800636c <_close+0x18>
 8006388:	6820      	ldr	r0, [r4, #0]
 800638a:	f7ff ffd4 	bl	8006336 <_swiclose>
 800638e:	2800      	cmp	r0, #0
 8006390:	d1ec      	bne.n	800636c <_close+0x18>
 8006392:	f04f 33ff 	mov.w	r3, #4294967295
 8006396:	6023      	str	r3, [r4, #0]
 8006398:	e7e8      	b.n	800636c <_close+0x18>
 800639a:	bf00      	nop
 800639c:	2000022c 	.word	0x2000022c

080063a0 <_swistat>:
 80063a0:	b570      	push	{r4, r5, r6, lr}
 80063a2:	460c      	mov	r4, r1
 80063a4:	f7ff fef6 	bl	8006194 <findslot>
 80063a8:	4606      	mov	r6, r0
 80063aa:	b930      	cbnz	r0, 80063ba <_swistat+0x1a>
 80063ac:	f7fb fc8c 	bl	8001cc8 <__errno>
 80063b0:	2309      	movs	r3, #9
 80063b2:	6003      	str	r3, [r0, #0]
 80063b4:	f04f 30ff 	mov.w	r0, #4294967295
 80063b8:	bd70      	pop	{r4, r5, r6, pc}
 80063ba:	6863      	ldr	r3, [r4, #4]
 80063bc:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 80063c0:	6063      	str	r3, [r4, #4]
 80063c2:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80063c6:	6463      	str	r3, [r4, #68]	; 0x44
 80063c8:	250c      	movs	r5, #12
 80063ca:	4628      	mov	r0, r5
 80063cc:	4631      	mov	r1, r6
 80063ce:	beab      	bkpt	0x00ab
 80063d0:	4605      	mov	r5, r0
 80063d2:	4628      	mov	r0, r5
 80063d4:	f7ff fef8 	bl	80061c8 <checkerror>
 80063d8:	1c43      	adds	r3, r0, #1
 80063da:	bf1c      	itt	ne
 80063dc:	6120      	strne	r0, [r4, #16]
 80063de:	2000      	movne	r0, #0
 80063e0:	e7ea      	b.n	80063b8 <_swistat+0x18>

080063e2 <_fstat>:
 80063e2:	460b      	mov	r3, r1
 80063e4:	b510      	push	{r4, lr}
 80063e6:	2100      	movs	r1, #0
 80063e8:	4604      	mov	r4, r0
 80063ea:	2258      	movs	r2, #88	; 0x58
 80063ec:	4618      	mov	r0, r3
 80063ee:	f7fb fc95 	bl	8001d1c <memset>
 80063f2:	4601      	mov	r1, r0
 80063f4:	4620      	mov	r0, r4
 80063f6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80063fa:	f7ff bfd1 	b.w	80063a0 <_swistat>

080063fe <_stat>:
 80063fe:	b538      	push	{r3, r4, r5, lr}
 8006400:	460d      	mov	r5, r1
 8006402:	4604      	mov	r4, r0
 8006404:	2258      	movs	r2, #88	; 0x58
 8006406:	2100      	movs	r1, #0
 8006408:	4628      	mov	r0, r5
 800640a:	f7fb fc87 	bl	8001d1c <memset>
 800640e:	4620      	mov	r0, r4
 8006410:	2100      	movs	r1, #0
 8006412:	f000 f811 	bl	8006438 <_swiopen>
 8006416:	1c43      	adds	r3, r0, #1
 8006418:	4604      	mov	r4, r0
 800641a:	d00b      	beq.n	8006434 <_stat+0x36>
 800641c:	686b      	ldr	r3, [r5, #4]
 800641e:	f443 4301 	orr.w	r3, r3, #33024	; 0x8100
 8006422:	606b      	str	r3, [r5, #4]
 8006424:	4629      	mov	r1, r5
 8006426:	f7ff ffbb 	bl	80063a0 <_swistat>
 800642a:	4605      	mov	r5, r0
 800642c:	4620      	mov	r0, r4
 800642e:	f7ff ff91 	bl	8006354 <_close>
 8006432:	462c      	mov	r4, r5
 8006434:	4620      	mov	r0, r4
 8006436:	bd38      	pop	{r3, r4, r5, pc}

08006438 <_swiopen>:
 8006438:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800643c:	4b2b      	ldr	r3, [pc, #172]	; (80064ec <_swiopen+0xb4>)
 800643e:	b096      	sub	sp, #88	; 0x58
 8006440:	4682      	mov	sl, r0
 8006442:	460e      	mov	r6, r1
 8006444:	2500      	movs	r5, #0
 8006446:	4698      	mov	r8, r3
 8006448:	f853 4035 	ldr.w	r4, [r3, r5, lsl #3]
 800644c:	1c61      	adds	r1, r4, #1
 800644e:	ea4f 07c5 	mov.w	r7, r5, lsl #3
 8006452:	d036      	beq.n	80064c2 <_swiopen+0x8a>
 8006454:	3501      	adds	r5, #1
 8006456:	2d14      	cmp	r5, #20
 8006458:	d1f6      	bne.n	8006448 <_swiopen+0x10>
 800645a:	f7fb fc35 	bl	8001cc8 <__errno>
 800645e:	2318      	movs	r3, #24
 8006460:	6003      	str	r3, [r0, #0]
 8006462:	f04f 34ff 	mov.w	r4, #4294967295
 8006466:	e03c      	b.n	80064e2 <_swiopen+0xaa>
 8006468:	f3c6 4400 	ubfx	r4, r6, #16, #1
 800646c:	f240 6301 	movw	r3, #1537	; 0x601
 8006470:	07b2      	lsls	r2, r6, #30
 8006472:	bf48      	it	mi
 8006474:	f044 0402 	orrmi.w	r4, r4, #2
 8006478:	421e      	tst	r6, r3
 800647a:	bf18      	it	ne
 800647c:	f044 0404 	orrne.w	r4, r4, #4
 8006480:	0733      	lsls	r3, r6, #28
 8006482:	bf48      	it	mi
 8006484:	f024 0404 	bicmi.w	r4, r4, #4
 8006488:	4650      	mov	r0, sl
 800648a:	bf48      	it	mi
 800648c:	f044 0408 	orrmi.w	r4, r4, #8
 8006490:	f8cd a000 	str.w	sl, [sp]
 8006494:	f7f9 febc 	bl	8000210 <strlen>
 8006498:	e9cd 4001 	strd	r4, r0, [sp, #4]
 800649c:	2401      	movs	r4, #1
 800649e:	4620      	mov	r0, r4
 80064a0:	4649      	mov	r1, r9
 80064a2:	beab      	bkpt	0x00ab
 80064a4:	4604      	mov	r4, r0
 80064a6:	2c00      	cmp	r4, #0
 80064a8:	db06      	blt.n	80064b8 <_swiopen+0x80>
 80064aa:	4447      	add	r7, r8
 80064ac:	2300      	movs	r3, #0
 80064ae:	f848 4035 	str.w	r4, [r8, r5, lsl #3]
 80064b2:	607b      	str	r3, [r7, #4]
 80064b4:	462c      	mov	r4, r5
 80064b6:	e014      	b.n	80064e2 <_swiopen+0xaa>
 80064b8:	4620      	mov	r0, r4
 80064ba:	f7ff fe95 	bl	80061e8 <error>
 80064be:	4604      	mov	r4, r0
 80064c0:	e00f      	b.n	80064e2 <_swiopen+0xaa>
 80064c2:	f406 6320 	and.w	r3, r6, #2560	; 0xa00
 80064c6:	f5b3 6f20 	cmp.w	r3, #2560	; 0xa00
 80064ca:	46e9      	mov	r9, sp
 80064cc:	d1cc      	bne.n	8006468 <_swiopen+0x30>
 80064ce:	4649      	mov	r1, r9
 80064d0:	4650      	mov	r0, sl
 80064d2:	f7ff ff94 	bl	80063fe <_stat>
 80064d6:	3001      	adds	r0, #1
 80064d8:	d0c6      	beq.n	8006468 <_swiopen+0x30>
 80064da:	f7fb fbf5 	bl	8001cc8 <__errno>
 80064de:	2311      	movs	r3, #17
 80064e0:	6003      	str	r3, [r0, #0]
 80064e2:	4620      	mov	r0, r4
 80064e4:	b016      	add	sp, #88	; 0x58
 80064e6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80064ea:	bf00      	nop
 80064ec:	2000022c 	.word	0x2000022c

080064f0 <_get_semihosting_exts>:
 80064f0:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80064f4:	4607      	mov	r7, r0
 80064f6:	4688      	mov	r8, r1
 80064f8:	4829      	ldr	r0, [pc, #164]	; (80065a0 <_get_semihosting_exts+0xb0>)
 80064fa:	2100      	movs	r1, #0
 80064fc:	4615      	mov	r5, r2
 80064fe:	f7ff ff9b 	bl	8006438 <_swiopen>
 8006502:	462a      	mov	r2, r5
 8006504:	4604      	mov	r4, r0
 8006506:	2100      	movs	r1, #0
 8006508:	4638      	mov	r0, r7
 800650a:	f7fb fc07 	bl	8001d1c <memset>
 800650e:	1c63      	adds	r3, r4, #1
 8006510:	d015      	beq.n	800653e <_get_semihosting_exts+0x4e>
 8006512:	4620      	mov	r0, r4
 8006514:	f7ff fe3e 	bl	8006194 <findslot>
 8006518:	260c      	movs	r6, #12
 800651a:	4681      	mov	r9, r0
 800651c:	4630      	mov	r0, r6
 800651e:	4649      	mov	r1, r9
 8006520:	beab      	bkpt	0x00ab
 8006522:	4606      	mov	r6, r0
 8006524:	4630      	mov	r0, r6
 8006526:	f7ff fe4f 	bl	80061c8 <checkerror>
 800652a:	2803      	cmp	r0, #3
 800652c:	dd02      	ble.n	8006534 <_get_semihosting_exts+0x44>
 800652e:	3803      	subs	r0, #3
 8006530:	42a8      	cmp	r0, r5
 8006532:	dc08      	bgt.n	8006546 <_get_semihosting_exts+0x56>
 8006534:	4620      	mov	r0, r4
 8006536:	f7ff ff0d 	bl	8006354 <_close>
 800653a:	f04f 34ff 	mov.w	r4, #4294967295
 800653e:	4620      	mov	r0, r4
 8006540:	b003      	add	sp, #12
 8006542:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8006546:	2204      	movs	r2, #4
 8006548:	eb0d 0102 	add.w	r1, sp, r2
 800654c:	4620      	mov	r0, r4
 800654e:	f7ff fe69 	bl	8006224 <_read>
 8006552:	2803      	cmp	r0, #3
 8006554:	ddee      	ble.n	8006534 <_get_semihosting_exts+0x44>
 8006556:	f89d 3004 	ldrb.w	r3, [sp, #4]
 800655a:	2b53      	cmp	r3, #83	; 0x53
 800655c:	d1ea      	bne.n	8006534 <_get_semihosting_exts+0x44>
 800655e:	f89d 3005 	ldrb.w	r3, [sp, #5]
 8006562:	2b48      	cmp	r3, #72	; 0x48
 8006564:	d1e6      	bne.n	8006534 <_get_semihosting_exts+0x44>
 8006566:	f89d 3006 	ldrb.w	r3, [sp, #6]
 800656a:	2b46      	cmp	r3, #70	; 0x46
 800656c:	d1e2      	bne.n	8006534 <_get_semihosting_exts+0x44>
 800656e:	f89d 3007 	ldrb.w	r3, [sp, #7]
 8006572:	2b42      	cmp	r3, #66	; 0x42
 8006574:	d1de      	bne.n	8006534 <_get_semihosting_exts+0x44>
 8006576:	2201      	movs	r2, #1
 8006578:	4641      	mov	r1, r8
 800657a:	4620      	mov	r0, r4
 800657c:	f7ff fe6c 	bl	8006258 <_swilseek>
 8006580:	2800      	cmp	r0, #0
 8006582:	dbd7      	blt.n	8006534 <_get_semihosting_exts+0x44>
 8006584:	462a      	mov	r2, r5
 8006586:	4639      	mov	r1, r7
 8006588:	4620      	mov	r0, r4
 800658a:	f7ff fe4b 	bl	8006224 <_read>
 800658e:	4605      	mov	r5, r0
 8006590:	4620      	mov	r0, r4
 8006592:	f7ff fedf 	bl	8006354 <_close>
 8006596:	4628      	mov	r0, r5
 8006598:	f7ff fe16 	bl	80061c8 <checkerror>
 800659c:	4604      	mov	r4, r0
 800659e:	e7ce      	b.n	800653e <_get_semihosting_exts+0x4e>
 80065a0:	08006a3e 	.word	0x08006a3e

080065a4 <initialise_semihosting_exts>:
 80065a4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80065a6:	4d0a      	ldr	r5, [pc, #40]	; (80065d0 <initialise_semihosting_exts+0x2c>)
 80065a8:	4c0a      	ldr	r4, [pc, #40]	; (80065d4 <initialise_semihosting_exts+0x30>)
 80065aa:	2100      	movs	r1, #0
 80065ac:	2201      	movs	r2, #1
 80065ae:	a801      	add	r0, sp, #4
 80065b0:	6029      	str	r1, [r5, #0]
 80065b2:	6022      	str	r2, [r4, #0]
 80065b4:	f7ff ff9c 	bl	80064f0 <_get_semihosting_exts>
 80065b8:	2800      	cmp	r0, #0
 80065ba:	dd07      	ble.n	80065cc <initialise_semihosting_exts+0x28>
 80065bc:	f89d 3004 	ldrb.w	r3, [sp, #4]
 80065c0:	f003 0201 	and.w	r2, r3, #1
 80065c4:	f003 0302 	and.w	r3, r3, #2
 80065c8:	602a      	str	r2, [r5, #0]
 80065ca:	6023      	str	r3, [r4, #0]
 80065cc:	b003      	add	sp, #12
 80065ce:	bd30      	pop	{r4, r5, pc}
 80065d0:	200001e4 	.word	0x200001e4
 80065d4:	200001e8 	.word	0x200001e8

080065d8 <_has_ext_stdout_stderr>:
 80065d8:	b510      	push	{r4, lr}
 80065da:	4c04      	ldr	r4, [pc, #16]	; (80065ec <_has_ext_stdout_stderr+0x14>)
 80065dc:	6822      	ldr	r2, [r4, #0]
 80065de:	2a00      	cmp	r2, #0
 80065e0:	da01      	bge.n	80065e6 <_has_ext_stdout_stderr+0xe>
 80065e2:	f7ff ffdf 	bl	80065a4 <initialise_semihosting_exts>
 80065e6:	6820      	ldr	r0, [r4, #0]
 80065e8:	bd10      	pop	{r4, pc}
 80065ea:	bf00      	nop
 80065ec:	200001e8 	.word	0x200001e8

080065f0 <initialise_monitor_handles>:
 80065f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80065f4:	b085      	sub	sp, #20
 80065f6:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 80066a8 <initialise_monitor_handles+0xb8>
 80065fa:	f8cd 9004 	str.w	r9, [sp, #4]
 80065fe:	2303      	movs	r3, #3
 8006600:	2400      	movs	r4, #0
 8006602:	9303      	str	r3, [sp, #12]
 8006604:	f10d 0804 	add.w	r8, sp, #4
 8006608:	9402      	str	r4, [sp, #8]
 800660a:	2501      	movs	r5, #1
 800660c:	4628      	mov	r0, r5
 800660e:	4641      	mov	r1, r8
 8006610:	beab      	bkpt	0x00ab
 8006612:	4605      	mov	r5, r0
 8006614:	4e20      	ldr	r6, [pc, #128]	; (8006698 <initialise_monitor_handles+0xa8>)
 8006616:	4a21      	ldr	r2, [pc, #132]	; (800669c <initialise_monitor_handles+0xac>)
 8006618:	6035      	str	r5, [r6, #0]
 800661a:	4623      	mov	r3, r4
 800661c:	f04f 31ff 	mov.w	r1, #4294967295
 8006620:	4614      	mov	r4, r2
 8006622:	f842 1033 	str.w	r1, [r2, r3, lsl #3]
 8006626:	3301      	adds	r3, #1
 8006628:	2b14      	cmp	r3, #20
 800662a:	d1fa      	bne.n	8006622 <initialise_monitor_handles+0x32>
 800662c:	f7ff ffd4 	bl	80065d8 <_has_ext_stdout_stderr>
 8006630:	4d1b      	ldr	r5, [pc, #108]	; (80066a0 <initialise_monitor_handles+0xb0>)
 8006632:	b1d0      	cbz	r0, 800666a <initialise_monitor_handles+0x7a>
 8006634:	f04f 0a03 	mov.w	sl, #3
 8006638:	2304      	movs	r3, #4
 800663a:	f8cd 9004 	str.w	r9, [sp, #4]
 800663e:	2701      	movs	r7, #1
 8006640:	f8cd a00c 	str.w	sl, [sp, #12]
 8006644:	9302      	str	r3, [sp, #8]
 8006646:	4638      	mov	r0, r7
 8006648:	4641      	mov	r1, r8
 800664a:	beab      	bkpt	0x00ab
 800664c:	4683      	mov	fp, r0
 800664e:	4b15      	ldr	r3, [pc, #84]	; (80066a4 <initialise_monitor_handles+0xb4>)
 8006650:	f8cd 9004 	str.w	r9, [sp, #4]
 8006654:	f8c3 b000 	str.w	fp, [r3]
 8006658:	2308      	movs	r3, #8
 800665a:	f8cd a00c 	str.w	sl, [sp, #12]
 800665e:	9302      	str	r3, [sp, #8]
 8006660:	4638      	mov	r0, r7
 8006662:	4641      	mov	r1, r8
 8006664:	beab      	bkpt	0x00ab
 8006666:	4607      	mov	r7, r0
 8006668:	602f      	str	r7, [r5, #0]
 800666a:	682b      	ldr	r3, [r5, #0]
 800666c:	3301      	adds	r3, #1
 800666e:	bf02      	ittt	eq
 8006670:	4b0c      	ldreq	r3, [pc, #48]	; (80066a4 <initialise_monitor_handles+0xb4>)
 8006672:	681b      	ldreq	r3, [r3, #0]
 8006674:	602b      	streq	r3, [r5, #0]
 8006676:	6833      	ldr	r3, [r6, #0]
 8006678:	6023      	str	r3, [r4, #0]
 800667a:	2600      	movs	r6, #0
 800667c:	6066      	str	r6, [r4, #4]
 800667e:	f7ff ffab 	bl	80065d8 <_has_ext_stdout_stderr>
 8006682:	b130      	cbz	r0, 8006692 <initialise_monitor_handles+0xa2>
 8006684:	4b07      	ldr	r3, [pc, #28]	; (80066a4 <initialise_monitor_handles+0xb4>)
 8006686:	681b      	ldr	r3, [r3, #0]
 8006688:	e9c4 3602 	strd	r3, r6, [r4, #8]
 800668c:	682b      	ldr	r3, [r5, #0]
 800668e:	e9c4 3604 	strd	r3, r6, [r4, #16]
 8006692:	b005      	add	sp, #20
 8006694:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006698:	20000224 	.word	0x20000224
 800669c:	2000022c 	.word	0x2000022c
 80066a0:	20000220 	.word	0x20000220
 80066a4:	20000228 	.word	0x20000228
 80066a8:	08006a54 	.word	0x08006a54

080066ac <_isatty>:
 80066ac:	b570      	push	{r4, r5, r6, lr}
 80066ae:	f7ff fd71 	bl	8006194 <findslot>
 80066b2:	2509      	movs	r5, #9
 80066b4:	4604      	mov	r4, r0
 80066b6:	b920      	cbnz	r0, 80066c2 <_isatty+0x16>
 80066b8:	f7fb fb06 	bl	8001cc8 <__errno>
 80066bc:	6005      	str	r5, [r0, #0]
 80066be:	4620      	mov	r0, r4
 80066c0:	bd70      	pop	{r4, r5, r6, pc}
 80066c2:	4628      	mov	r0, r5
 80066c4:	4621      	mov	r1, r4
 80066c6:	beab      	bkpt	0x00ab
 80066c8:	4604      	mov	r4, r0
 80066ca:	2c01      	cmp	r4, #1
 80066cc:	d0f7      	beq.n	80066be <_isatty+0x12>
 80066ce:	f7fb fafb 	bl	8001cc8 <__errno>
 80066d2:	2400      	movs	r4, #0
 80066d4:	4606      	mov	r6, r0
 80066d6:	2513      	movs	r5, #19
 80066d8:	4628      	mov	r0, r5
 80066da:	4621      	mov	r1, r4
 80066dc:	beab      	bkpt	0x00ab
 80066de:	4605      	mov	r5, r0
 80066e0:	6035      	str	r5, [r6, #0]
 80066e2:	e7ec      	b.n	80066be <_isatty+0x12>

080066e4 <_init>:
 80066e4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80066e6:	bf00      	nop
 80066e8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80066ea:	bc08      	pop	{r3}
 80066ec:	469e      	mov	lr, r3
 80066ee:	4770      	bx	lr

080066f0 <_fini>:
 80066f0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80066f2:	bf00      	nop
 80066f4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80066f6:	bc08      	pop	{r3}
 80066f8:	469e      	mov	lr, r3
 80066fa:	4770      	bx	lr
